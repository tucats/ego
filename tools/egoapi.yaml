swagger: "2.0"
info:
  version: "1.2.0"
  title: Ego Server API
  license:
    name: MIT
host: localhost:443
basePath: "/ego"
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /tables:
    get:
      summary: List all tables for which the user has access.
      operationId: listTables
      tags:
        - tables
      responses:
        "200":
          description: An array of table names
          schema:
            $ref: '#/definitions/TableCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tables/{table}:
    put:
      summary: Create a new table
      operationId: createTable
      tags:
        - tables
      parameters:
        - name: table
          in: path
          required: true
          description: The name of the table to create
          type: string
        - in: body
          name: Columns
          description: The array of column types to create for the new table.
          required: true
          schema:
              $ref: "#/definitions/ColumnCollection"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/ColumnCollection"
        "400":
          description: Incorrectly formed request body.
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Credentials not provided.
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: invalid credentials.
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Table already exists.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error occurred. The status and message fields contain additional information.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get existing metadata information for columns in a table.
      operationId: showTable
      tags:
        - tables
      parameters:
        - name: table
          in: path
          required: true
          description: The name of the table to display
          type: string
        - name: start
          in: query
          description: Starting row of result set to return
          type: integer
        - name: limit
          in: query
          description: Limit on number of rows to return
          type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/ColumnCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Column:
    type: "object"
    required:
      - name
      - type
      - nullable
      - unique
    properties:
      name:
        type: string
        description: Name of the column
        example: "mycolumn"
      type:
        type: string
        description: Ego type name of the column's data values.
        example: "string"
      nullable:
        type: boolean
        description: True if the column is allowed to contain a null value.
      unqiue:
        type: boolean
        description: True if the column value must be unique in the table.
  ColumnCollection:
    type: "object"
    description: Information about the columns of a table
    required:
      - columns
      - count
    properties:
      columns:
        type: array
        description: An array of column definitions.
        items:
          $ref: '#/definitions/Column'
      count:
        type: integer
        description: The number of items in the table array

  Table:
    type: "object"
    required:
      - name
      - schema
      - columns
      - rows
    properties:
      name:
        type: string
        description: Name of the table
        example: Accounts
      schema:
        type: string
        description: Name fo the schema
        example: Payroll
      columns:
        type: integer
        description: Number of columns in the table
        example: 8
      rows:
        type: integer
        description: Number of rows in the table
        example: 135
  Tables:
    type: array
    items:
      $ref: '#/definitions/Table'
  TableCollection:
    type: "object"
    required:
      - tables
      - count
    properties:
      tables:
        type: array
        items:
          $ref: '#/definitions/Table'
        description: An array of the table name information
      count:
        type: integer
        description: The number of items in the table array
  Error:
    type: "object"
    required:
      - status
      - msg
    properties:
      status:
        type: integer
        format: int32
        description: the HTTP status code for the response
        example: 400
      msg:
        type: string
        description: the message text if an error occurred
        example: The type name "color" is not valid