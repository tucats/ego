//
// Column.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Column: Codable, Hashable {

    /** Name of the column */
    public var name: String
    /** Ego type name of the column's data values. */
    public var type: String
    /** True if the column is allowed to contain a null value. */
    public var nullable: Bool
    /** True if the column value must be unique in the table. */
    public var unqiue: Bool?

    public init(name: String, type: String, nullable: Bool, unqiue: Bool? = nil) {
        self.name = name
        self.type = type
        self.nullable = nullable
        self.unqiue = unqiue
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case type
        case nullable
        case unqiue
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(type, forKey: .type)
        try container.encode(nullable, forKey: .nullable)
        try container.encodeIfPresent(unqiue, forKey: .unqiue)
    }
}

