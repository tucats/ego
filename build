# Build script for Ego that injects version number, and optionally
# increments it. By default, the build is for the current OS and
# architecture, but you can use command line options to choose
# cross-build operations.
#
#   -a     Build for Apple Silicon (darwin arm64)
#   -l     Build for Linux (linux amd64)
#   -w     Build for Windows (windows amd64)
#
#   -i     Increment the build number before injecting it.
#          By default, uses the current build number
#

BUILDVER=$(cat buildver.txt)

GO="go"
GOARCH=`go env GOARCH`
GOOS=`go env GOOS`

if [ "$1" == "-all" ]; then
   mkdir -p builds/linux
   mkdir -p builds/macos/intel
   mkdir -p builds/macos/applesilicon/
   mkdir -p builds/windows

   echo Linux x86...
   GOARCH=amd64 GOOS=linux $GO build -ldflags "-X main.BuildVersion=$BUILDVER" -o builds/linux/ego

   echo Mac x86...
   GOARCH=amd64 GOOS=darwin $GO build -ldflags "-X main.BuildVersion=$BUILDVER" -o builds/macos/intel/ego

   echo Mac Apple Silicon
   GOARCH=arm64 GOOS=darwin $GO build -ldflags "-X main.BuildVersion=$BUILDVER" -o builds/macos/applesilicon/ego

   echo Windows x86
   GOARCH=amd64 GOOS=windows $GO build -ldflags "-X main.BuildVersion=$BUILDVER" -o builds/windows/ego.exe

   exit 0
fi


if [ "$1" == "-a" ]; then
   GOARCH=arm64
   GOOS=darwin
fi

if [ "$1" == "-l" ]; then
   GOOS="linux"
   GOOS=amd64
fi

if [ "$1" == "-w" ]; then
   GOOS=windows
   GOARCH=amd64
fi

if [ "$1" == "-i" ]; then

   CHANGES=$(git status --porcelain)
   if [ "$CHANGES" != "" ]; then
      echo "You have uncommitted changes."
      exit 1
   fi

   let "BUILDVER = $BUILDVER + 1"
   echo $BUILDVER >buildver.txt
fi

echo Build $BUILDVER on $GOOS $GOARCH
GOARCH=$GOARCH GOOS=$GOOS $GO build -ldflags "-X main.BuildVersion=$BUILDVER"

if [ "$1" == "-i" ]; then
   git commit -a -m "increment build version"
fi
