/* Debugging service. This just dumps out the symbol table */

import ( cipher util )
@status 200

tv := _token_valid

if !authenticated() & !tv {
    fmt.Print( "401 Forbidden" )
    @status 401
    return
}


if _json {
    r := {}
    r.version = _version
    r.valid_user = authenticated()
    r.token_valid = tv
    if tv {
        // If the token was valid, get some additional info about the user it represents
        t := cipher.Token(_token)
        r.user = t.name
        r.data = t.data
        r.superuser = getuser(t.name).superuser
    }
    r.session = _session

    // If there was a body, this was a POST so return the body as
    // a real value.
    if _body != "" {
        r.posted = json.Unmarshal(_body)
    }
    @response r
    return
}

fmt.Printf("\nEGO Server %s\n\n", _version)
fmt.Printf("S Y M B O L   T A B L E\n-----------------------\n%s\n", util.Symbols())
fmt.Printf("\nA U T H E N T I C A T I O N\n---------------------------\n")
fmt.Printf("Authenticated:    %v\n", authenticated())
fmt.Printf("User token valid: %v\n, cipher.Validate(_token))
try {
    fmt.Printf( "User data value:  %s\n", cipher.Token(_token).name)
} catch { fmt.Printf("<none>\n") }
