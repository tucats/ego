/* Debugging service. This reports server status */

import ( cipher util time )

@authenticated user
@status 200

if _json {
    r := {}  // Needs to be an anonymous struct so we can arbitrarily
             // add fields.
    r.valid_user  = authenticated()
    r.version     = _version
    r.token_valid = _token_valid
    r.session     = _session 
    r.memory      = util.Memory()

    if _token_valid {
        // If the token was valid, get some additional info about the user it represents
        t := cipher.Token(_token)
        r.user = t.name
        r.data = t.data
        r.superuser = getuser(t.name).superuser
    }

    // If there was a body, this was a POST so return the body as
    // a real value.
    if _body != "" {
        r.posted = json.Unmarshal(_body)
    }
    @response r
    return
}

r := `Healthy %s mode at %s
    version %s,
    user    %s,
    session %s,
    
%s
`
@response fmt.Sprintf(r, util.Mode(), time.Now().String(), _version, _user, _session,util.Memory())
