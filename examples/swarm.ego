
func client(ch chan, count int ) {

   // Change this to match your test machine that runs an Ego server.
   host := "https://" + os.Hostname() + ".local"
   status := 200

   for i := 0; i < count; i++{
      cmd := "curl -s -k -L -u admin:password " + host + "/services/factor/10"
      c := exec.Command("bash", "-c", cmd)
 
      out := exec.Command("bash", "-c", cmd).Output()
      if len(out) != 2 || out[0] != "[1, 2, 5, 10]" {
         fmt.Printf("Error: %v\n", out)
         status = 500
         break
      }
   }

   ch <- status
}

func main() int {

   clients :=  150
   ch := make(chan, clients)

   for i := 0; i < clients; i++ {
      go client(ch, 10)
   }

   count := 0
   for _, sts := range ch {
      count = count + 1
      fmt.Println("Received ", count)
      if sts != 200 {
         fmt.Printf("Got bad status: %v\n", sts)
      }
      if count >= clients {
         break
      }
   }

   fmt.Printf("Read %d status values\n", count)
   return 0
}
