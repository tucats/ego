/*
 * Log on to the server. Requires username and password via the authentication
 * headers, and returns an encrypted token that can be used for subsequent
 * authorization operations.
 */

import "http"

func handler(req http.Request, resp http.Response ) {
// Can only proceed if authenticated with username
    @authenticated user

// Generate a token and return it as text to the caller
    token := cipher.Create(_user)

    payload := {
        "issuer":_session,
        "token":token, 
        "expires": time.Now().Add(profile.Get("ego.server.token.expiration")).String(),
        "identity": _user,
        }

    @json {
        resp.Write(payload)
    }

    @text {
        resp.Write(token)
    }
    
    resp.WriteStatus(http.StatusOK)

    return
}
