/*
 * Return last n lines of the log, expressed as ?count=n in the URL
 */

import "http"

func handler(req http.Request, resp http.Response ) {
// Can only proceed if authenticated with as administrator. Also, let's
// be sure that language extensions are working so we can use the "try"
// statement.
    @authenticated admin
    @extensions

    session := 0
    sessionArray, sesssionFound := req.Parameters["session"]
    if sesssionFound {
        session = sessionArray[0]
    }

    count, found := req.Parameters["tail"]
    if found {
        count = count[0]
    } else {
        @url "/{{count}}"
    }

    if count == "" {
        count = "50"
    } 

    n, err := strconv.Atoi(count)
    if err != nil {
        resp.WriteStatus(400)
        resp.WriteMessage("Bad line count: " + count)
        return
    }

    if n < 1 {
        n = 50
    }
    
    var lines []string

    try {
        lines = util.Log(n, session)
    } catch(e) {
        resp.WriteStatus(500)
        resp.WriteMessage(e)

        return
    }

    resp.WriteStatus(200)

    @text {
        for _, line := range lines {
            resp.Write(line)
        }
    }

    @json {
        reply := {
            server: {
                api: 1,
                session: _session,
                id: _server_instance,
                name: os.Hostname(),
            },
            lines: lines,
        }

        resp.Write(reply)
    }

    return
}
