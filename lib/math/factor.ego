package math

/*
 * Create a function that returns an array of factors for an integer value
 */

func Factor(n int) []int {
    @extensions
    
    if n < 1 {
        return make([]int, 0)
    }

    if n != int(n) {
        return make([]int, 0)
    }

    if n == 1 {
        return []int{1}
    }

    if n == 2 {
        return []int{1,2}
    }

    length := int(math.Sqrt(n))
    count := 0
    result := []int{1}

    for i:= 2; i <= length; i=i+1 {
        count = count + 1
        d := float64(n)/float64(i)
        j := int(n)/i

        if d == float64(j) {
            if index(result, i) < 0 {
                result = append(result, i)
            }
        
            if index(result, j) < 0 {
                result = append(result, j)
            }
        }
    }

    result = append(result, n)

    return sort.Ints(result)
}
