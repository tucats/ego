package http

import "filepath"
import "json"
import "profile"

// Write whatever is passed in to the response as a JSON-formatted string.
func (w ResponseWriter) WriteJSON( i interface{}) {
	msg := json.Marshal(i)
	w.Write(msg)
}

// Write a page using a named template. The argument can be either a struct
// or a map that contains values to be plugged into the template, so it is 
// specified as an interface{} parameter.
func (w *ResponseWriter) WriteTemplate( fn string, i interface{}) {
    @extensions
    try {
        // Load the page file as a template.
        fn := filepath.Join(profile.Get("ego.runtime.path"), fn)
        b := os.ReadFile(fn)
        @template mempage string(b)

        // Render the page using the dynamic data, and return it as the response
        page := strings.Template(mempage, i)
                
        w.Write([]byte(page))
    } catch(e) {
        w.WriteHeader(500)
        w.Write(e.Error())
    }
}


// Helper function to generate an error indicating the URL was unusable. this
// call can be generated by the @URL directive.
func BadURL(url string) {
    @status 400
    @response "Unrecognized URI path " + url
}
