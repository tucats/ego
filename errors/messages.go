package errors

import (
	"errors"

	"github.com/tucats/ego/i18n"
)

// This contains the definitions for the Ego native errors, regardless
// of subsystem, etc.
// TODO introduce localized strings.

// Return values used to signal flow change.

var ErrContinue = errors.New("continue")
var ErrSignalDebugger = errors.New("signal")
var ErrStepOver = errors.New("step-over")
var ErrStop = errors.New("stop")

// Return values reflecting runtime error conditions.

var ErrAlignment = errors.New(i18n.T("error.invalid.alignment.spec"))
var ErrArgumentCount = errors.New(i18n.T("error.arg.count"))
var ErrArgumentType = errors.New(i18n.T("error.arg.type"))
var ErrArgumentTypeCheck = errors.New(i18n.T("error.argcheck.array"))
var ErrArrayBounds = errors.New(i18n.T("error.array.bounds"))
var ErrArrayIndex = errors.New(i18n.T("error.array.index"))
var ErrAssert = errors.New(i18n.T("error.assert"))
var ErrBlockQuote = errors.New(i18n.T("error.invalid.blockquote"))
var ErrCacheSizeNotSpecified = errors.New(i18n.T("error.cache.not.spec"))
var ErrCannotDeleteActiveProfile = errors.New(i18n.T("error.cannot.delete.profile"))
var ErrChannelNotOpen = errors.New(i18n.T("error.channel.not.open"))
var ErrColumnCount = errors.New(i18n.T("error.column.count"))
var ErrDatabaseClientClosed = errors.New(i18n.T("error.db.closed"))
var ErrDivisionByZero = errors.New(i18n.T("error.div.zero"))
var ErrDuplicateColumnName = errors.New(i18n.T("error.dup.column"))
var ErrDuplicateTypeName = errors.New(i18n.T("error.dup.type"))
var ErrEmptyColumnList = errors.New(i18n.T("error.empty.column"))
var ErrExpiredToken = errors.New(i18n.T("error.expired"))
var ErrFunctionAlreadyExists = errors.New(i18n.T("error.func.exists"))
var ErrGeneric = errors.New(i18n.T("error.general"))
var ErrHTTP = errors.New(i18n.T("error.http"))
var ErrImmutableArray = errors.New(i18n.T("error.immutable.array"))
var ErrImmutableMap = errors.New(i18n.T("error.immutable.map"))
var ErrInternalCompiler = errors.New(i18n.T("error.compiler"))
var ErrInvalidAuthenticationType = errors.New(i18n.T("error.auth.type"))
var ErrInvalidBitShift = errors.New(i18n.T("error.bit.shift"))
var ErrInvalidBooleanValue = errors.New(i18n.T("error.boolean.option"))
var ErrInvalidBreakClause = errors.New(i18n.T("error.break.clause"))
var ErrInvalidBytecodeAddress = errors.New(i18n.T("error.bytecode.address"))
var ErrInvalidCallFrame = errors.New(i18n.T("error.call.frame"))
var ErrInvalidChannel = errors.New(i18n.T("error.not.channel"))
var ErrInvalidChannelList = errors.New(i18n.T("error.channel.assignment"))
var ErrInvalidColumnDefinition = errors.New(i18n.T("error.db.column.def"))
var ErrInvalidColumnName = errors.New(i18n.T("error.column.name"))
var ErrInvalidColumnNumber = errors.New(i18n.T("error.column.number"))
var ErrInvalidColumnWidth = errors.New(i18n.T("error.column.width"))
var ErrInvalidConfigName = errors.New(i18n.T("error.profile.name"))
var ErrInvalidConstant = errors.New(i18n.T("error.constant"))
var ErrInvalidCredentials = errors.New(i18n.T("error.credentials"))
var ErrInvalidDebugCommand = errors.New(i18n.T("error.debugger.cmd"))
var ErrInvalidDirective = errors.New(i18n.T("error.directive"))
var ErrInvalidField = errors.New(i18n.T("error.field.for.type"))
var ErrInvalidFileMode = errors.New(i18n.T("error.file.mode"))
var ErrInvalidFormatVerb = errors.New(i18n.T("error.format.spec"))
var ErrInvalidFunctionArgument = errors.New(i18n.T("error.func.arg"))
var ErrInvalidFunctionCall = errors.New(i18n.T("error.func.call"))
var ErrInvalidFunctionName = errors.New(i18n.T("error.func.name"))
var ErrInvalidGremlinClient = errors.New(i18n.T("gremlin.client"))
var ErrInvalidIdentifier = errors.New(i18n.T("error.identifier"))
var ErrInvalidImport = errors.New(i18n.T("error.import"))
var ErrInvalidInstruction = errors.New(i18n.T("error.instruction"))
var ErrInvalidInteger = errors.New(i18n.T("error.integer.option"))
var ErrInvalidKeyword = errors.New(i18n.T("error.keyword.option"))
var ErrInvalidList = errors.New(i18n.T("error.list"))
var ErrInvalidLoggerName = errors.New(i18n.T("error.logger.name"))
var ErrInvalidLoopControl = errors.New(i18n.T("error.loop.control"))
var ErrInvalidLoopIndex = errors.New(i18n.T("error.loop.index"))
var ErrInvalidMediaType = errors.New(i18n.T("error.media.type"))
var ErrInvalidOutputFormat = errors.New(i18n.T("error.format.type"))
var ErrInvalidPackageName = errors.New(i18n.T("error.package.name"))
var ErrInvalidPointerType = errors.New(i18n.T("error.pointer.type"))
var ErrInvalidRange = errors.New(i18n.T("error.range"))
var ErrInvalidResultSetType = errors.New(i18n.T("error.db.result.type"))
var ErrInvalidReturnTypeList = errors.New(i18n.T("error.return.list"))
var ErrInvalidReturnValue = errors.New(i18n.T("error.return.void"))
var ErrInvalidRowNumber = errors.New(i18n.T("error.row.number"))
var ErrInvalidRowSet = errors.New(i18n.T("error.db.rowset"))
var ErrInvalidSandboxPath = errors.New(i18n.T("error.sandbox.path"))
var ErrInvalidSliceIndex = errors.New(i18n.T("error.slice.index"))
var ErrInvalidSpacing = errors.New(i18n.T("error.spacing"))
var ErrInvalidStepType = errors.New(i18n.T("error.step.type"))
var ErrInvalidStruct = errors.New(i18n.T("error.struct"))
var ErrInvalidSymbolName = errors.New(i18n.T("error.symbol.name"))
var ErrInvalidTemplateName = errors.New(i18n.T("error.template.name"))
var ErrInvalidThis = errors.New(i18n.T("error.this"))
var ErrInvalidTimer = errors.New(i18n.T("error.timer"))
var ErrInvalidTokenEncryption = errors.New(i18n.T("error.token.encryption"))
var ErrInvalidType = errors.New(i18n.T("error.type"))
var ErrInvalidTypeCheck = errors.New(i18n.T("error.type.check"))
var ErrInvalidTypeName = errors.New(i18n.T("error.type.name"))
var ErrInvalidTypeSpec = errors.New(i18n.T("error.type.spec"))
var ErrInvalidURL = errors.New(i18n.T("error.url"))
var ErrInvalidValue = errors.New(i18n.T("error.value"))
var ErrInvalidVarType = errors.New(i18n.T("error.var.type"))
var ErrInvalidVariableArguments = errors.New(i18n.T("error.var.args"))
var ErrInvalidfileIdentifier = errors.New(i18n.T("error.file.id"))
var ErrLoggerConflict = errors.New(i18n.T("error.logger.conflict"))
var ErrLogonEndpoint = errors.New(i18n.T("error.logon.endpoint"))
var ErrLoopBody = errors.New(i18n.T("error.for.body"))
var ErrLoopExit = errors.New(i18n.T("error.for.exit"))
var ErrMissingAssignment = errors.New(i18n.T("error.assignment"))
var ErrMissingBlock = errors.New(i18n.T("error.block"))
var ErrMissingBracket = errors.New(i18n.T("error.array.bracket"))
var ErrMissingCase = errors.New(i18n.T("error.case"))
var ErrMissingCatch = errors.New(i18n.T("error.catch"))
var ErrMissingColon = errors.New(i18n.T("error.colon"))
var ErrMissingEndOfBlock = errors.New(i18n.T("error.block.end"))
var ErrMissingEqual = errors.New(i18n.T("error.equals"))
var ErrMissingExpression = errors.New(i18n.T("error.expression"))
var ErrMissingForLoopInitializer = errors.New(i18n.T("error.for.init"))
var ErrMissingFunction = errors.New(i18n.T("error.function"))
var ErrMissingFunctionBody = errors.New(i18n.T("error.function.body"))
var ErrMissingFunctionName = errors.New(i18n.T("error.function.name"))
var ErrMissingFunctionType = errors.New(i18n.T("error.function.return"))
var ErrMissingInterface = errors.New(i18n.T("error.interface.imp"))
var ErrMissingLoggerName = errors.New(i18n.T("error.logger.name"))
var ErrMissingLoopAssignment = errors.New(i18n.T("error.for.assignment"))
var ErrMissingOptionValue = errors.New(i18n.T("error.option.value"))
var ErrMissingOutputType = errors.New(i18n.T("error.format.type"))
var ErrMissingPackageName = errors.New(i18n.T("error.package.name"))
var ErrMissingPackageStatement = errors.New(i18n.T("error.package.stmt"))
var ErrMissingParameterList = errors.New(i18n.T("error.function.list"))
var ErrMissingParenthesis = errors.New(i18n.T("error.parens"))
var ErrMissingReturnValues = errors.New(i18n.T("error.function.values"))
var ErrMissingSemicolon = errors.New(i18n.T("error.semicolon"))
var ErrMissingStatement = errors.New(i18n.T("error.statement"))
var ErrMissingSymbol = errors.New(i18n.T("error.symbol.name"))
var ErrMissingTerm = errors.New(i18n.T("error.expression.term"))
var ErrMissingType = errors.New(i18n.T("error.type.def"))
var ErrNilPointerReference = errors.New(i18n.T("error.nil"))
var ErrNoCredentials = errors.New(i18n.T("error.credentials.missing"))
var ErrNoFunctionReceiver = errors.New(i18n.T("error.function.receiver"))
var ErrNoLogonServer = errors.New(i18n.T("error.logon.server"))
var ErrNoPrivilegeForOperation = errors.New(i18n.T("error.privilege"))
var ErrNoSuchAsset = errors.New(i18n.T("error.asset"))
var ErrNoSuchDebugService = errors.New(i18n.T("error.debug.service"))
var ErrNoSuchProfile = errors.New(i18n.T("error.profile.not.found"))
var ErrNoSuchProfileKey = errors.New(i18n.T("error.profile.key"))
var ErrNoSuchTXSymbol = errors.New(i18n.T("error.tx.not.found"))
var ErrNoSuchUser = errors.New(i18n.T("error.user.not.found"))
var ErrNoTransactionActive = errors.New(i18n.T("error.tx.not.active"))
var ErrNotAPointer = errors.New(i18n.T("error.not.pointer"))
var ErrNotAService = errors.New(i18n.T("error.not.service"))
var ErrNotAType = errors.New(i18n.T("error.not.type"))
var ErrNotAnLValueList = errors.New(i18n.T("error.not.assignment.list"))
var ErrNotFound = errors.New(i18n.T("error.not.found"))
var ErrOpcodeAlreadyDefined = errors.New(i18n.T("error.opcode.defined"))
var ErrPackageRedefinition = errors.New(i18n.T("error.package.exists"))
var ErrPanic = errors.New(i18n.T("error.panic"))
var ErrReadOnly = errors.New(i18n.T("error.readonly"))
var ErrReadOnlyValue = errors.New(i18n.T("error.readonly.write"))
var ErrRequiredNotFound = errors.New(i18n.T("error.option.required"))
var ErrReservedProfileSetting = errors.New(i18n.T("error.reserved.name"))
var ErrRestClientClosed = errors.New(i18n.T("error.rest.closed"))
var ErrReturnValueCount = errors.New(i18n.T("error.func.return.count"))
var ErrServerAlreadyRunning = errors.New(i18n.T("error.server.running"))
var ErrStackUnderflow = errors.New(i18n.T("error.stack.underflow"))
var ErrSymbolExists = errors.New(i18n.T("error.symbol.exists"))
var ErrTableClosed = errors.New(i18n.T("error.table.closed"))
var ErrTableErrorPrefix = errors.New(i18n.T("error.table.processing"))
var ErrTerminatedWithErrors = errors.New(i18n.T("errors.terminated"))
var ErrTestingAssert = errors.New(i18n.T("error.assert.testing"))
var ErrTooManyLocalSymbols = errors.New(i18n.T("error.symbol.overflow"))
var ErrTooManyParameters = errors.New(i18n.T("error.cli.parms"))
var ErrTooManyReturnValues = errors.New(i18n.T("error.func.return.count"))
var ErrTransactionAlreadyActive = errors.New(i18n.T("error.tx.active"))
var ErrTryCatchMismatch = errors.New(i18n.T("error.try.stack"))
var ErrUndefinedEntrypoint = errors.New(i18n.T("error.entry.not.found"))
var ErrUnexpectedParameters = errors.New(i18n.T("error.cli.subcommand"))
var ErrUnexpectedTextAfterCommand = errors.New(i18n.T("error.cli.extra"))
var ErrUnexpectedToken = errors.New(i18n.T("error.token.extra"))
var ErrUnexpectedValue = errors.New(i18n.T("error.value.extra"))
var ErrUnimplementedInstruction = errors.New(i18n.T("error.bytecode.not.found"))
var ErrUnknownIdentifier = errors.New(i18n.T("error.identifier.not.found"))
var ErrUnknownMember = errors.New(i18n.T("error.field.not.found"))
var ErrUnknownOption = errors.New(i18n.T("error.cli.option"))
var ErrUnknownPackageMember = errors.New(i18n.T("error.package.member"))
var ErrUnknownSymbol = errors.New(i18n.T("error.symbol.not.found"))
var ErrUnknownType = errors.New(i18n.T("error.struct.type"))
var ErrUnrecognizedStatement = errors.New(i18n.T("error.statement.not.found"))
var ErrUnusedErrorReturn = errors.New(i18n.T("error.func.unused"))
var ErrUserDefined = errors.New(i18n.T("error.user.defined"))
var ErrWrongArrayValueType = errors.New(i18n.T("error.array.value.type"))
var ErrWrongMapKeyType = errors.New(i18n.T("error.map.key.type"))
var ErrWrongMapValueType = errors.New(i18n.T("error.map.value.type"))
var ErrWrongMode = errors.New(i18n.T("error.directive.mode"))
var ErrWrongParameterCount = errors.New(i18n.T("error.parm.count"))
var ErrWrongParameterValueCount = errors.New(i18n.T("error.parm.value.count"))
