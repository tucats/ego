package errors

import (
	"errors"

	"github.com/tucats/ego/i18n"
)

// This contains the definitions for the Ego native errors, regardless
// of subsystem, etc.
// TODO introduce localized strings.

// Return values used to signal flow change.
// THESE SHOULD NOT BE LOCALIZED.

var ErrContinue = errors.New("continue")
var ErrSignalDebugger = errors.New("signal")
var ErrStepOver = errors.New("step-over")
var ErrStop = errors.New("stop")

// Return values reflecting runtime error conditions.

var ErrAlignment = errors.New(i18n.E("invalid.alignment.spec"))
var ErrArgumentCount = errors.New(i18n.E("arg.count"))
var ErrArgumentType = errors.New(i18n.E("arg.type"))
var ErrArgumentTypeCheck = errors.New(i18n.E("argcheck.array"))
var ErrArrayBounds = errors.New(i18n.E("array.bounds"))
var ErrArrayIndex = errors.New(i18n.E("array.index"))
var ErrAssert = errors.New(i18n.E("assert"))
var ErrBlockQuote = errors.New(i18n.E("invalid.blockquote"))
var ErrCacheSizeNotSpecified = errors.New(i18n.E("cache.not.spec"))
var ErrCannotDeleteActiveProfile = errors.New(i18n.E("cannot.delete.profile"))
var ErrChannelNotOpen = errors.New(i18n.E("channel.not.open"))
var ErrColumnCount = errors.New(i18n.E("column.count"))
var ErrDatabaseClientClosed = errors.New(i18n.E("db.closed"))
var ErrDivisionByZero = errors.New(i18n.E("div.zero"))
var ErrDuplicateColumnName = errors.New(i18n.E("dup.column"))
var ErrDuplicateTypeName = errors.New(i18n.E("dup.type"))
var ErrEmptyColumnList = errors.New(i18n.E("empty.column"))
var ErrExpiredToken = errors.New(i18n.E("expired"))
var ErrFunctionAlreadyExists = errors.New(i18n.E("func.exists"))
var ErrGeneric = errors.New(i18n.E("general"))
var ErrHTTP = errors.New(i18n.E("http"))
var ErrImmutableArray = errors.New(i18n.E("immutable.array"))
var ErrImmutableMap = errors.New(i18n.E("immutable.map"))
var ErrImportNotCached = errors.New(i18n.E("import.not.found"))
var ErrInternalCompiler = errors.New(i18n.E("compiler"))
var ErrInvalidAuthenticationType = errors.New(i18n.E("auth.type"))
var ErrInvalidBitShift = errors.New(i18n.E("bit.shift"))
var ErrInvalidBooleanValue = errors.New(i18n.E("boolean.option"))
var ErrInvalidBreakClause = errors.New(i18n.E("break.clause"))
var ErrInvalidBytecodeAddress = errors.New(i18n.E("bytecode.address"))
var ErrInvalidCallFrame = errors.New(i18n.E("call.frame"))
var ErrInvalidChannel = errors.New(i18n.E("not.channel"))
var ErrInvalidChannelList = errors.New(i18n.E("channel.assignment"))
var ErrInvalidColumnDefinition = errors.New(i18n.E("db.column.def"))
var ErrInvalidColumnName = errors.New(i18n.E("column.name"))
var ErrInvalidColumnNumber = errors.New(i18n.E("column.number"))
var ErrInvalidColumnWidth = errors.New(i18n.E("column.width"))
var ErrInvalidConfigName = errors.New(i18n.E("profile.name"))
var ErrInvalidConstant = errors.New(i18n.E("constant"))
var ErrInvalidCredentials = errors.New(i18n.E("credentials"))
var ErrInvalidDebugCommand = errors.New(i18n.E("debugger.cmd"))
var ErrInvalidDirective = errors.New(i18n.E("directive"))
var ErrInvalidField = errors.New(i18n.E("field.for.type"))
var ErrInvalidFileMode = errors.New(i18n.E("file.mode"))
var ErrInvalidFormatVerb = errors.New(i18n.E("format.spec"))
var ErrInvalidFunctionArgument = errors.New(i18n.E("func.arg"))
var ErrInvalidFunctionCall = errors.New(i18n.E("func.call"))
var ErrInvalidFunctionName = errors.New(i18n.E("func.name"))
var ErrInvalidIdentifier = errors.New(i18n.E("identifier"))
var ErrInvalidImport = errors.New(i18n.E("import"))
var ErrInvalidInstruction = errors.New(i18n.E("instruction"))
var ErrInvalidInteger = errors.New(i18n.E("integer.option"))
var ErrInvalidKeyword = errors.New(i18n.E("keyword.option"))
var ErrInvalidList = errors.New(i18n.E("list"))
var ErrInvalidLoggerName = errors.New(i18n.E("logger.name"))
var ErrInvalidLoopControl = errors.New(i18n.E("loop.control"))
var ErrInvalidLoopIndex = errors.New(i18n.E("loop.index"))
var ErrInvalidMediaType = errors.New(i18n.E("media.type"))
var ErrInvalidOutputFormat = errors.New(i18n.E("format.type"))
var ErrInvalidPackageName = errors.New(i18n.E("package.name"))
var ErrInvalidPointerType = errors.New(i18n.E("pointer.type"))
var ErrInvalidRange = errors.New(i18n.E("range"))
var ErrInvalidResultSetType = errors.New(i18n.E("db.result.type"))
var ErrInvalidReturnTypeList = errors.New(i18n.E("return.list"))
var ErrInvalidReturnValue = errors.New(i18n.E("return.void"))
var ErrInvalidRowNumber = errors.New(i18n.E("row.number"))
var ErrInvalidRowSet = errors.New(i18n.E("db.rowset"))
var ErrInvalidSandboxPath = errors.New(i18n.E("sandbox.path"))
var ErrInvalidSliceIndex = errors.New(i18n.E("slice.index"))
var ErrInvalidSpacing = errors.New(i18n.E("spacing"))
var ErrInvalidStepType = errors.New(i18n.E("step.type"))
var ErrInvalidStruct = errors.New(i18n.E("struct"))
var ErrInvalidSymbolName = errors.New(i18n.E("symbol.name"))
var ErrInvalidTemplateName = errors.New(i18n.E("template.name"))
var ErrInvalidThis = errors.New(i18n.E("this"))
var ErrInvalidTimer = errors.New(i18n.E("timer"))
var ErrInvalidTokenEncryption = errors.New(i18n.E("token.encryption"))
var ErrInvalidType = errors.New(i18n.E("type"))
var ErrInvalidTypeCheck = errors.New(i18n.E("type.check"))
var ErrInvalidTypeName = errors.New(i18n.E("type.name"))
var ErrInvalidTypeSpec = errors.New(i18n.E("type.spec"))
var ErrInvalidURL = errors.New(i18n.E("url"))
var ErrInvalidValue = errors.New(i18n.E("value"))
var ErrInvalidVarType = errors.New(i18n.E("var.type"))
var ErrInvalidVariableArguments = errors.New(i18n.E("var.args"))
var ErrInvalidfileIdentifier = errors.New(i18n.E("file.id"))
var ErrLoggerConflict = errors.New(i18n.E("logger.conflict"))
var ErrLogonEndpoint = errors.New(i18n.E("logon.endpoint"))
var ErrLoopBody = errors.New(i18n.E("for.body"))
var ErrLoopExit = errors.New(i18n.E("for.exit"))
var ErrMissingAssignment = errors.New(i18n.E("assignment"))
var ErrMissingBlock = errors.New(i18n.E("block"))
var ErrMissingBracket = errors.New(i18n.E("array.bracket"))
var ErrMissingCase = errors.New(i18n.E("case"))
var ErrMissingCatch = errors.New(i18n.E("catch"))
var ErrMissingColon = errors.New(i18n.E("colon"))
var ErrMissingEndOfBlock = errors.New(i18n.E("block.end"))
var ErrMissingEqual = errors.New(i18n.E("equals"))
var ErrMissingExpression = errors.New(i18n.E("expression"))
var ErrMissingForLoopInitializer = errors.New(i18n.E("for.init"))
var ErrMissingFunction = errors.New(i18n.E("function"))
var ErrMissingFunctionBody = errors.New(i18n.E("function.body"))
var ErrMissingFunctionName = errors.New(i18n.E("function.name"))
var ErrMissingFunctionType = errors.New(i18n.E("function.return"))
var ErrMissingInterface = errors.New(i18n.E("interface.imp"))
var ErrMissingLoggerName = errors.New(i18n.E("logger.name"))
var ErrMissingLoopAssignment = errors.New(i18n.E("for.assignment"))
var ErrMissingOptionValue = errors.New(i18n.E("option.value"))
var ErrMissingOutputType = errors.New(i18n.E("format.type"))
var ErrMissingPackageName = errors.New(i18n.E("package.name"))
var ErrMissingPackageStatement = errors.New(i18n.E("package.stmt"))
var ErrMissingParameterList = errors.New(i18n.E("function.list"))
var ErrMissingParenthesis = errors.New(i18n.E("parens"))
var ErrMissingReturnValues = errors.New(i18n.E("function.values"))
var ErrMissingSemicolon = errors.New(i18n.E("semicolon"))
var ErrMissingStatement = errors.New(i18n.E("statement"))
var ErrMissingSymbol = errors.New(i18n.E("symbol.name"))
var ErrMissingTerm = errors.New(i18n.E("expression.term"))
var ErrMissingType = errors.New(i18n.E("type.def"))
var ErrNilPointerReference = errors.New(i18n.E("nil"))
var ErrNoCredentials = errors.New(i18n.E("credentials.missing"))
var ErrNoFunctionReceiver = errors.New(i18n.E("function.receiver"))
var ErrNoLogonServer = errors.New(i18n.E("logon.server"))
var ErrNoPrivilegeForOperation = errors.New(i18n.E("privilege"))
var ErrNoSuchAsset = errors.New(i18n.E("asset"))
var ErrNoSuchDebugService = errors.New(i18n.E("debug.service"))
var ErrNoSuchProfile = errors.New(i18n.E("profile.not.found"))
var ErrNoSuchProfileKey = errors.New(i18n.E("profile.key"))
var ErrNoSuchTXSymbol = errors.New(i18n.E("tx.not.found"))
var ErrNoSuchUser = errors.New(i18n.E("user.not.found"))
var ErrNoTransactionActive = errors.New(i18n.E("tx.not.active"))
var ErrNotAPointer = errors.New(i18n.E("not.pointer"))
var ErrNotAService = errors.New(i18n.E("not.service"))
var ErrNotAType = errors.New(i18n.E("not.type"))
var ErrNotAnLValueList = errors.New(i18n.E("not.assignment.list"))
var ErrNotFound = errors.New(i18n.E("not.found"))
var ErrOpcodeAlreadyDefined = errors.New(i18n.E("opcode.defined"))
var ErrPackageRedefinition = errors.New(i18n.E("package.exists"))
var ErrPanic = errors.New(i18n.E("panic"))
var ErrReadOnly = errors.New(i18n.E("readonly"))
var ErrReadOnlyValue = errors.New(i18n.E("readonly.write"))
var ErrRequiredNotFound = errors.New(i18n.E("option.required"))
var ErrReservedProfileSetting = errors.New(i18n.E("reserved.name"))
var ErrRestClientClosed = errors.New(i18n.E("rest.closed"))
var ErrReturnValueCount = errors.New(i18n.E("func.return.count"))
var ErrServerAlreadyRunning = errors.New(i18n.E("server.running"))
var ErrStackUnderflow = errors.New(i18n.E("stack.underflow"))
var ErrSymbolExists = errors.New(i18n.E("symbol.exists"))
var ErrTableClosed = errors.New(i18n.E("table.closed"))
var ErrTableErrorPrefix = errors.New(i18n.E("table.processing"))
var ErrTerminatedWithErrors = errors.New(i18n.T("errors.terminated"))
var ErrTestingAssert = errors.New(i18n.E("assert.testing"))
var ErrTooManyLocalSymbols = errors.New(i18n.E("symbol.overflow"))
var ErrTooManyParameters = errors.New(i18n.E("cli.parms"))
var ErrTooManyReturnValues = errors.New(i18n.E("func.return.count"))
var ErrTransactionAlreadyActive = errors.New(i18n.E("tx.active"))
var ErrTryCatchMismatch = errors.New(i18n.E("try.stack"))
var ErrUndefinedEntrypoint = errors.New(i18n.E("entry.not.found"))
var ErrUnexpectedParameters = errors.New(i18n.E("cli.subcommand"))
var ErrUnexpectedTextAfterCommand = errors.New(i18n.E("cli.extra"))
var ErrUnexpectedToken = errors.New(i18n.E("token.extra"))
var ErrUnexpectedValue = errors.New(i18n.E("value.extra"))
var ErrUnimplementedInstruction = errors.New(i18n.E("bytecode.not.found"))
var ErrUnknownIdentifier = errors.New(i18n.E("identifier.not.found"))
var ErrUnknownMember = errors.New(i18n.E("field.not.found"))
var ErrUnknownOption = errors.New(i18n.E("cli.option"))
var ErrUnknownPackageMember = errors.New(i18n.E("package.member"))
var ErrUnknownSymbol = errors.New(i18n.E("symbol.not.found"))
var ErrUnknownType = errors.New(i18n.E("type.not.found"))
var ErrUnrecognizedStatement = errors.New(i18n.E("statement.not.found"))
var ErrUnusedErrorReturn = errors.New(i18n.E("func.unused"))
var ErrUserDefined = errors.New(i18n.E("user.defined"))
var ErrWrongArrayValueType = errors.New(i18n.E("array.value.type"))
var ErrWrongMapKeyType = errors.New(i18n.E("map.key.type"))
var ErrWrongMapValueType = errors.New(i18n.E("map.value.type"))
var ErrWrongMode = errors.New(i18n.E("directive.mode"))
var ErrWrongParameterCount = errors.New(i18n.E("parm.count"))
var ErrWrongParameterValueCount = errors.New(i18n.E("parm.value.count"))
