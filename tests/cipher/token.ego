@test "cipher: token functions"

import (
    cipher
    time
)


// Simple test of storing user data
{
	msg := "hidden message"
	t := cipher.Create(msg)
	@assert T.True(cipher.Validate(t),            "token is not valid")
	@assert T.Equal(cipher.Token(t).name, msg,    "token does not contain expected user data")
}

{
	msg := "hidden message"
	t := cipher.Create(msg) + "00"
	@assert T.False(cipher.Validate(t), "token is not invalid")
}
{
	const TokenExpirationSetting = "ego.server.token.expiration"
	td := profile.Get(TokenExpirationSetting)
	if td == "" {
		td := "5m"
	}
	profile.Set(TokenExpirationSetting, ".5s")

	t := cipher.Create("test")
	time.Sleep("1s")
	@assert T.False(cipher.Validate(t), "token is not invalid")
	profile.Set(TokenExpirationSetting, td)
}

@pass
