
@test "datamodel: embedded types"
{
    type foo struct { 
        name string
        id int
    }

    type bar struct {
        foo
        age int
    }
    
	// Use an initializer list, where the initial values must be in the same order
	// as the structure definition (including embedded fields)
    x := bar{
        "Tom",
        1001,
		64,
    }

    // Members will in the order they were declared in the
    // type (or embedded types)
    m := reflect.Reflect(x).Members
    @assert m == ["name", "id", "age"]
    @assert x.name == "Tom"
    @assert x.age == 64
    @assert x.id == 1001

}
