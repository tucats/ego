package i18n

import (
	"fmt"
	"sort"
	"strings"
)

func DumpClass(prefix string) error {
	var err error

	keys := make([]string, 0)

	for key := range messages {
		if strings.HasPrefix(key, prefix) {
			keys = append(keys, key)
		}
	}

	sort.Strings(keys)

	headers := []string{
		`# Error Codes`,
		``,
		`This table shows the English language messages associated with each error code that can`,
		"be generated by Ego. These string values can also be used with the `errors.New(code)`",
		`function call within an Ego program to generate an instance of this error code.`,
		``,
	}

	for _, header := range headers {
		fmt.Println(header)
	}

	fmt.Println("| Code | Message |")
	fmt.Println("|:-----|:--------|")

	for _, key := range keys {
		msg, found := messages[key][Language]
		if !found {
			msg, found = messages[key]["en"]
			if !found {
				msg = "*** no localized message found ***"
			}
		}

		fmt.Printf("| %s | %s |\n", key, msg)
	}

	return err
}
