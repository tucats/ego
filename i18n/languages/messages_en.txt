# Messages for language "en"

# The "ego" section contains subcommand descriptions used by the --help option
# used with CLI commands. In general, the first term of the key is the primary
# command verb, followed by a period and the optional subcommand names.

[ego]
config=Manage configurations
config.delete=Delete a key from the configuration
config.list=List all configurations
config.remove=Delete an entire configuration
config.set=Set a configuration value
config.set.description=Set the configuration description
config.set.output=Set the default output type (text or json)
config.show=Show the current configuration
dsns=Manage data source names
dsns.add=Add a new data source name
dsns.delete=Delete a data source name
dsns.grant=Grant permissions to a user for a data source name
dsns.list=List the DSNS known to the server
dsns.revoke=Revoke permissions from a user for a data source name
dsns.show=Show permissions for a data source name
hello=Hello, {{name}}!
logon=Log on to a remote server
path=Print the default ego path
run=Run an existing program
server=Start to accept REST calls
server.cache.flush=Flush service caches
server.cache.list=List service caches
server.cache.set.size=Set the server cache size
server.caches=Manage server caches
server.logging=Display or configure server logging
server.logon=Log on to a remote server
server.memory=Display server memory usage
server.restart=Restart an existing server
server.run=Run the rest server
server.start=Start the rest server as a detached process
server.status=Display server status
server.stop=Stop the detached rest server
server.user.create=Create a new user
server.user.delete=Delete a user
server.user.list=List all users
server.user.show=Display a single user
server.user.update=Update an existing user
server.users=Manage server user database
sql=Execute SQL in the database server
sql.file=Filename of SQL command text
sql.row-ids=Include the row UUID in any output
sql.row-numbers=Include the row number in any output
table=Operate on database tables
table.create=Create a new table
table.delete=Delete rows from a table
table.drop=Delete one or more tables
table.grant=Set permissions for a given user and table
table.insert=Insert a row to a table
table.list=List tables
table.permission=List table permissions
table.permissions=List all table permissions (requires admin privileges)
table.read=Read contents of a table
table.show=Show table metadata
table.sql=Directly execute a SQL command
table.update=Update rows to a table
test=Run a test suite
version=Display command line version number


# The "error" section contains error message codes. In general, the key is a
# descriptive text of the functional area or language component where the error
# occurred. There is no distinction between messages generated by the compiler
# versus runtime errors.

[error]
arg.count=incorrect function argument count
arg.list=internal error: invalid local function argument list
arg.type=incorrect function argument type
argcheck.array=invalid ArgCheck array
array.bounds=array index out of bounds
array.bracket=missing array bracket
array.index=invalid array index
array.value.type=wrong array value type
assert=@assert error
assert.testing=testing @assert failure
asset=no such asset
assignment=missing '=' or ':='
auth.type=invalid authentication type
auto.import=Unable to auto-import: {{err}}
bit.shift=invalid bit shift specification
block=missing '{'
block.end=missing '}'
boolean.option=invalid boolean option value
break.clause=invalid break clause
bytecode.address=invalid bytecode address
bytecode.not.found=unimplemented bytecode instruction
cache.not.spec=cache size not specified
call.frame=invalid call frame on stack
cannot.delete.profile=cannot delete active profile
case=missing 'case'
catch=missing 'catch' clause
cert.parse=error parsing certficate file
channel.assignment=invalid use of assignment list for channel
channel.not.open=channel not open
child.timeout=no child process available to process request
cli.command.not.found=unrecognized command
cli.extra=unexpected text after command
cli.option=unknown command line option
cli.parms=too many parameters on command line
cli.subcommand=unexpected parameters or invalid subcommand
colon=missing ':'
column.count=incorrect number of columns
column.name=invalid column name
column.number=invalid column number
column.width=invalid column width
compiler=internal compiler error
conditional.bool=invalid conditional expression type
constant=invalid constant expression
credentials=invalid credentials
credentials.missing=no credentials provided
db.closed=database client closed
db.column.def=invalid database column definition
db.result.type=invalid result set type
db.rowset=invalid rowset value
debug.service=cannot debug non-existent service
debugger.cmd=invalid debugger command
defer.outside=defer statement invalid when used outside of a function
directive=invalid directive name
directive.mode=directive invalid for mode
div.zero=division by zero
dsn.not.found=no such data source name
dup.column=duplicate column name
dup.type=duplicate type name
empty.column=empty column list
endpoint=invalid endpoint path string
entry.not.found=undefined entrypoint name
equals=missing '='
expired=expired token
expression=missing expression
expression.term=missing term
extension=unsupported language extension
field.for.type=invalid field name for type
field.not.found=unknown structure member
file.id=invalid file identifier
file.mode=invalid file open mode
filter.term.invalid=Unrecognized operator {{term}}
filter.term.missing=Missing filter term
for.assignment=missing ':='
for.body=for{} body empty
for.exit=for{} has no exit
for.init=missing for-loop initializer
format.spec=invalid or unsupported format specification
format.type=invalid output format type
func.arg=invalid function argument
func.call=invalid function invocation
func.exists=function already defined
func.name=invalid function name
func.type.call=invalid use of struct type as function call
func.return.count=incorrect number of return values
func.unused=function call used as parameter has unused error return value
func.void=function did not return a value
function=missing function
function.body=missing function body
function.list=missing function parameter list
function.name=missing function name
function.ptr=unable to convert {{ptr}} to function pointer
function.receiver=no function receiver
function.return=missing function return type
function.values=missing return values
general=general error
go.error=Go routine {{name}} failed, {{err}}
http=received HTTP
identifier=invalid identifier
identifier.not.found=unknown identifier
immutable.array=cannot change an immutable array
immutable.map=cannot change an immutable map
import=import not permitted inside a block or loop
import.not.found=attempt to use imported package not in package cache
instruction=invalid instruction
integer.option=invalid integer option value
interface.imp=missing interface implementation
invalid.alignment.spec=invalid alignment specification
invalid.auto=invalid use of auto increment/decrement operation
invalid.blockquote=invalid block quote
invalid.catch.set=invalid catch set {{index}}
invalid.named.return.values=Invalid use of named and non-named return values
invalid.struct.or.package=invalid structure or package
invalid.unwrap=invalid unwrap of non-interface value
keyword.option=invalid option keyword
list=invalid list
logger.confict=conflicting logger state
logger.name=invalid logger name
logon.endpoint=logon endpoint not found
logon.server=no --logon-server specified
loop.control=loop control statement outside of for-loop
loop.index=invalid loop index variable
map.key.type=wrong map key type
map.value.type=wrong map value type
media.type=invalid media type
named.return.values=return values with named return values in function definition
nil=nil pointer reference
no.database=the server is not configured with a default database connection (use a data source name)
no.info=no information for item
no.main.package=no main package found
no.permission=no permission for operation
no.symbol.table=no symbol table available
not.assignment.list=not an assignment list
not.channel=neither source or destination is a channel
not.found=not found
not.pointer=not a pointer
not.service=not running as a service
not.type=not a type
opcode.defined=opcode already defined
operand=internal error: invalid or missing bytecode operand
option.required=required option not found
option.value=missing option value
package.exists=cannot redefine existing package
package.member=unknown package member
package.name=invalid package name
package.stmt=missing package statement
panic=Panic
parens=missing parenthesis
parm.count=incorrect number of parameters
parm.value.count=wrong number of parameter values
permission.name=invalid permission name
pointer.type=invalid pointer type
print.items=expected items to print not found
privilege=no privilege for operation
profile.key=no such profile key
profile.name=invalid configuration name
profile.not.found=no such profile
range=invalid range
readonly=item is read-only
readonly.addressable=cannot take address of read-only item
readonly.write=invalid attempt to modify a read-only value
request=invalid request or content
reserved.name=reserved profile setting name
rest.closed=rest client closed
return.list=invalid return type list
return.void=invalid return value for void function
row.number=invalid row number
sandbox.path=invalid sandbox path
scope.invalid=invalid or non-existent symbol table scope
semicolon=missing ';'
server.error=internal server error
server.running=server already running as pid
slice.index=invalid slice index
spacing=invalid spacing value
stack.underflow=stack underflow
statement=missing statement
statement.not.found=unexpected token
step.type=invalid step type
struct=invalid struct
struct.type=unknown structure type
symbol.exists=symbol already exists
symbol.name=invalid symbol name
symbol.not.exported=symbol not exported from package
symbol.not.found=unknown symbol
symbol.overflow=too many local symbols defined
table.closed=table closed
table.processing=table processing
template.name=invalid template name
terminated=terminated with errors
this=invalid _this_ identifier
timer=invalid timer operation
token.encryption=invalid token encryption
token.extra=unexpected token
try.stack=try/catch stack error
tx.actibe=transaction already active
tx.not.active=no transaction active
tx.not.found=no such transaction symbol
type=invalid or unsupported data type for this operation
type.check=invalid @type keyword
type.def=missing type definition
type.mismatch=type mismatch
type.name=invalid type name
type.not.found=no such type
type.spec=invalid type specification
unsupported.on.os=command not implemented for this operating system
url=invalid URL path specification
url.not.found=URL not found
user.count=incorrect number of users updated by request
user.defined=user-supplied error
user.not.found=no such user
value=invalid value
value.extra=unexpected value
var.args=invalid variable-argument operation
var.type=invalid type for this variable
version.parse=Unable to process version number {{v}; count={{c}}, err={{err}


# The "help" section contains help text used within the internal Ego debugger.
# These are generated when the "help" command is issued within the debugger.

[help]
break.at=Halt execution at a given line number
break.clear=Remove breakpoint for line number
break.clear.when=Remove breakpoint for expression
break.load=Load breakpoints from named file
break.save=Save breakpoint list to named file
break.when=Halt execution when expression is true
continue=Resume execution of the program
exit=Exit the debugger
help=Display this help text
print=Print the value of an expression
set=Set a variable to a value
show.breaks=Display list of breakpoints
show.calls=Display the call stack to the given depth
show.line=Display the current program line
show.scope=Display nested call scope
show.source=Display source of current module
show.symbols=Display the current symbol table
step=Execute the next line of the program
step.over=Step over a function call to the next line in this program
step.return=Execute until the next return operation

# The "label" section contains the text used to label various output fields
# in a language-specific way. This most often refers to the output of built-in
# commands when generating text output (as opposed to json output).

[label]
Active=Active
Columns=Columns
Command=Command
Commands=Commands
Default.configuration=Default configuration
Description=Description
Error=Error
Field=Field
ID=ID
Key=Key
Logger=Logger
Member=Member
memory.item=Item
memory.value=Value
memory.Total=Cumulative bytes allocated
memory.Current=Current heap size
memory.System=Memory allocated from system
memory.Stack=Current stack space
memory.Objects=Number of objects in heap
memory.GC=Garbage collection cycles
Name=Name
Nullable=Nullable
Parameters=Parameters
Permissions=Permissions
Row=Row
Rows=Rows
Schema=Schema
Size=Size
Table=Table
Type=Type
Unique=Unique
Usage=Usage
User=User
Value=Value
Version=Version
active.loggers=Active loggers: 
break.at=Break at
command=command
configuration=configuration
debug.commands=Debugger commands:
had.default.verb=(*) indicates the default subcommand if none given
logs.disabled=Disabled
logs.enabled=Enabled
options=options
parameter=parameter
parameters=parameters
password.prompt=Password: 
since=since
stepped.to=Step to
symbols=symbols
username.prompt=Username: 
version=version


# The "msg" section contains messages used by the CLI commands. These are non-error
# messages that are used to provide feedback to the user.

[msg]
config.deleted=Configuration {{name}} deleted
config.version=Configuration profile version {{version}}
config.written=Configuration key {{key}} written
debug.break.added=Added break {{break}}
debug.break.exists=Breakpoint already set
debug.error=Debugger error, {{err}}
debug.load.count=Loaded {{count}} breakpoints
debug.no.breakpoints=No breakpoints defined
debug.no.source=No source available for debugging
debug.return=Return from entrypoint
debug.save.count=Saving {{count}} breakpoints
debug.scope=Symbol table scope:
debug.start=Start program with call to entrypoint {{name}}()
dsns.added=Created new data source name: {{name}}
dsns.deleted=Deleted existing data source name: {{name}}
dsns.permissions=User permissions for data source name {{name}}
dsns.show.empty=Data source name {{name}} does not have permissions
enter.blank.line=Enter a blank line to terminate command input
logged.in=Successfully logged in as {{user}}, valid until {{expires}}
rest.waiting=Waiting for response from {{URL}}
server.cache=Server Cache, hostname {{host}}, ID {{id}}
server.cache.assets=There are {{count}} HTML assets in cache, for a total size of {{size}} bytes.
server.cache.emptied=Server cache emptied
server.cache.no.assets=There are no HTML assets cached.
server.cache.no.services=There are no service items in cache. The maximum cache size is {{limit}} items.
server.cache.one.asset=There is 1 HTML asset in cache, for a total size of {{size}} bytes.
server.cache.one.service=There is 1 service item in cache. The maximum cache size is {{limit}} items.
server.cache.services=There are {{count}} service items in cache. The maximum cache size is {{limit}} items.
server.cache.updated=Server cache size updated
server.logs.file=Server log file is {{name}}
server.logs.no.retain=Server does not retain previous log files
server.logs.purged=Purged {{count}} old log files
server.logs.retains=Server also retains last {{count}} previous log files
server.logs.status=Logging status, hostname {{host}}, ID {{id}}
server.memory=Server memory status, hostname {{host}}, ID {{id}}
server.not.running=Server not running
server.started=Server started as process {{pid}}
server.status=Ego {{version}}, pid {{pid}}, host {{host}}, session {{id}}
server.stopped=Server (pid {{pid}}) stopped
table.created=Created table {{name}} with {{count}} columns
table.delete.count=Deleted {{count}} tables
table.deleted=Table {{name}} deleted
table.deleted.no.rows=No rows deleted
table.deleted.rows={{count}} rows deleted
table.empty.rowset=No rows in result
table.insert.count=Added {{count}} rows to table {{name}}
table.no.insert=Nothing to insert into table
table.sql.no.rows=No rows modified
table.sql.one.row=1 row modified
table.sql.rows={{count}} rows modified
table.update.count=Updated {{count}} rows in table {{name}}
table.user.permissions=User {{user}} permissions for {{schema}}.{{table}} {{verb}}: {{perms}}
user.added=User {{user}} added
user.deleted=User {{user}} deleted
user.show=User "{{user}}" {{action}}
user.show.noperms=User "{{user}}" has no permissions


# The "opt" section contains option descriptions used by the --help option
# used with CLI commands. In general, the first term of the key is the primary
# subcommand.

[opt]
address.port=Specify address (and optionally port) of server
cache.list.assets=List only HTML assets in cache
cache.list.order.by=Specify order of list of cached items
cache.list.services=List only service items in cache
config.force=Do not signal error if option not found
config.version=Show version number of configuration profile
dsn=Specify the data source name
dsns.add.database=Specify database name
dsns.add.host=Specify the remote host for the database connection
dsns.add.name=Specify the name of the data source
dsns.add.native=Specify that the data source name is a native connection
dsns.add.password=Specify the password credential
dsns.add.port=Specify the port for the remote database connection
dsns.add.schema=Specify the schema name for this data source
dsns.add.secured=Specify that the connection should use SSL
dsns.add.type=Specify the data source type (provider)
dsns.add.username=Specify the username credential
dsns.grant=Grant permissions for a user to a data source name
dsns.grant.name=Name of the data source
dsns.grant.permissions=List of permission names to grant
dsns.grant.username=Username being granted permissions
dsns.revoke=Revoke permissions for a user to a data source name
dsns.revoke.name=Name of the data source name
dsns.revoke.permissions=List of permission names to revoke
dsns.revoke.username=Username being revoked permissions
filter=List of optional filter clauses
global.archive-log=Name of archive for purged log files, if any
global.format=Specify text, json or indented output format
global.log=Loggers to enable
global.log.file=Name of file where log messages are written
global.profile=Name of profile to use
global.quiet=If specified, suppress extra messaging
global.set=Override configuration options for this invocation
global.version=Show version number of command line tool
help.text=Show this help text
insecure=Do not require X509 server certificate verification
insecure.port=Specify insecure port number to redirect to secure port
limit=If specified, limit the result set to this many rows
local=Show local server status info
logon.expiration=Requested expiration time for the logon token
logon.server=URL of server to authenticate with
password=Password for logon
port=Specify port number of server
run.auto.import=Override auto-import configuration setting
run.debug=Run with interactive debugger
run.disasm=Display a disassembly of the bytecode before execution
run.entry.point=Name of entrypoint function (defaults to main)
run.log=Direct log output to this file instead of stdout
run.optimize=Enable bytecode optimizer
run.project=Source is a directory instead of a file
run.static=Specify value typing during program execution
run.symbols=Display symbol table
scope=Blocks can access any symbol in call stack
server.auth.server=Host providing authentication services (defaults to self)
server.delete.user=Username to delete
server.logging.disable=List of loggers to disable
server.logging.enable=List of loggers to enable
server.logging.file=Show only the active log file name
server.logging.keep=Specify how many log files to keep
server.logging.session=Limit display to log entries for this session number
server.logging.status=Display the state of each logger
server.memory.megabytes=Display memory values as megabytes
server.run.cache=Number of service programs to cache in memory
server.run.certs=Directory to locate HTTPS certificate and key files
server.run.child.services=Use child processes to execute services instead of threaads
server.run.debug=Service endpoint to debug
server.run.force=If set, override existing PID file
server.run.is.detached=If set, server assumes it is already detached
server.run.keep=The number of log files to keep
server.run.log=File path of server log
server.run.no.log=Suppress server log
server.run.not.secure=If set, use HTTP instead of HTTPS
server.run.realm=Name of authentication realm
server.run.sandbox=File path of sandboxed area for file I/O
server.run.static=Specify value typing during service execution
server.run.superuser=Designate this user as a super-user with ROOT privileges
server.run.users=File with authentication JSON data
server.run.uuid=Sets the optional session UUID value
server.show.id=Display the UUID of each user
server.user.pass=Password to assign to user
server.user.perms=Permissions to grant to user
server.user.user=Username to create or update
sql.file=Filename of SQL command text
sql.row.ids=Include the row UUID in the output
sql.row.numbers=Include the row number in the output
start=If specified, start result set at this row
symbol.allocation=Allocation size (in symbols) when expanding storage for a symbol table 
table.create.file=File name containing JSON column info
table.delete.filter=Filter for rows to delete. If not specified, all rows are deleted
table.grant.permission=Permissions to set for this table updated
table.grant.user=User (if other than current user) to update
table.insert.file=File name containing JSON row info
table.list.no.row.counts=If specified, listing does not include row counts
table.permission.user=User (if other than current user) to list)
table.permissions.user=If specified, list only this user
table.read.columns=List of columns to display; default is all columns
table.read.order.by=List of optional columns use to sort output
table.read.row.ids=Include the row UUID column in the output
table.read.row.numbers=Include the row number in the output
table.update.filter=Filter for rows to update. If not specified, all rows are updated
trace=Display trace of bytecode execution
username=Username for logon


# The "parm" section contains parameter descriptions used by the --help option to
# describe command line parameters that can be added to a command or subcommand.

[parm]
address.port=address:port
config.key.value=key=value
file=file
file.or.path=file or path
key=key
name=name
sql.text=sql-text
table.create=table-name column:type [column:type...]
table.insert=table-name [column=value...]
table.name=table-name
table.update=table-name column=value [column=value...]

