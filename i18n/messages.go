package i18n

// Internalized strings. The map is organized by language as the first key,
// and then the text ID passed into the i18n.T() function. If a key in a
// given language is not found, it reverts to using the "en" key.
var Messages = map[string]map[string]string{
	"en": {
		"ego": "run an Ego program",

		"ego.config": "Manage the configuration",
		"ego.logon":  "Log onto a remote server",

		"ego.path": "Print the default ego path",

		"ego.run": "Run an existing program",

		"ego.server":                "Start to accept REST calls",
		"ego.server.caches":         "Manage server caches",
		"ego.server.cache.flush":    "Flush service caches",
		"ego.server.cache.list":     "List service caches",
		"ego.server.cache.set.size": "Set the server cache size",
		"ego.server.logging":        "Display or configure server logging",
		"ego.server.logon":          "Log on to a remote server",
		"ego.server.restart":        "Restart an existing server",
		"ego.server.run":            "Run the rest server",
		"ego.server.start":          "Start the rest server as a detached process",
		"ego.server.status":         "Display server status",
		"ego.server.stop":           "Stop the detached rest server",
		"ego.server.users":          "Manage server user database",
		"ego.server.user.set":       "Create or update user information",
		"ego.server.user.delete":    "Delete a user from the server's user database",
		"ego.server.user.list":      "List users in the server's user database",

		"ego.sql":             "Execute SQL in the database server",
		"ego.sql.file":        "Filename of SQL command text",
		"ego.sql.row-ids":     "Include the row UUID in any output",
		"ego.sql.row-numbers": "Include the row number in any output",

		"ego.table":             "Operate on database tables",
		"ego.table.create":      "Create a new table",
		"ego.table.delete":      "Delete rows from a table",
		"ego.table.drop":        "Delete one or more tables",
		"ego.table.grant":       "Set permissions for a given user and table",
		"ego.table.insert":      "Insert a row to a table",
		"ego.table.list":        "List tables",
		"ego.table.permission":  "List table permissions",
		"ego.table.permissions": "List all table permissions (requires admin privileges)",
		"ego.table.read":        "Read contents of a table",
		"ego.table.show":        "Show table metadata",
		"ego.table.sql":         "Directly execute a SQL command",
		"ego.table.update":      "Update rows to a table",
		"ego.test":              "Run a test suite",

		// Note that labels are case-sensitive, to indicate the expected case of the translation.
		"label.command":    "command",
		"label.Commands":   "Commands",
		"label.Error":      "Error",
		"label.options":    "options",
		"label.parameter":  "parameter",
		"label.parameters": "parameters",
		"label.Parameters": "Parameters",
		"label.Usage":      "Usage",
		"label.version":    "version",

		"opt.logon.server": "URL of server to authenticate with",

		"opt.sql.row.ids":     "Include the row UUID in the output",
		"opt.sql.row.numbers": "Include the row number in the output",
		"opt.sql.file":        "Filename of SQL command text",

		"opt.address.port":      "Specify address (and optionally address) of server",
		"opt.filter":            "List of optional filter clauses",
		"opt.help.text":         "Show this help text",
		"opt.insecure":          "Do not require X509 server certificate verification",
		"opt.limit":             "If specified, limit the result set to this many rows",
		"opt.password":          "Password for logon",
		"opt.port":              "Specify port number of server",
		"opt.scope":             "Blocks can access any symbol in call stack",
		"opt.start":             "If specified, start result set at this row",
		"opt.trace":             "Display trace of bytecode execution",
		"opt.username":          "Username for logon",
		"opt.symbol.allocation": "Allocation size (in symbols) when expanding storage for a symbol table ",

		"opt.global.debug":   "Debug loggers to enable",
		"opt.global.format":  "Specify text, json or indented output format",
		"opt.global.profile": "Name of profile to use",
		"opt.global.quiet":   "If specified, suppress extra messaging",
		"opt.global.version": "Show version number of command line tool",

		"opt.run.auto.import": "Override auto-import configuration setting",
		"opt.run.debug":       "Run with interactive debugger",
		"opt.run.disasm":      "Display a disassembly of the bytecode before execution",
		"opt.run.entry.point": "Name of entrypoint function (defaults to main)",
		"opt.run.log":         "Direct log output to this file instead of stdout",
		"opt.run.static":      "Enforce static typing on program execution",
		"opt.run.symbols":     "Display symbol table",

		"opt.server.delete.user":     "Username to delete",
		"opt.server.logging.enable":  "List of loggers to enable",
		"opt.server.logging.disable": "List of loggers to disable",
		"opt.server.logging.file":    "Show only the active log file name",
		"opt.server.logging.keep":    "Specify how many log files to keep",
		"opt.server.logging.session": "Limit display to log entries for this session number",
		"opt.server.logging.status":  "Display the state of each logger",
		"opt.server.run.cache":       "Number of service programs to cache in memory",
		"opt.server.run.code":        "Enable /code endpoint",
		"opt.server.run.debug":       "Service endpoint to debug",
		"opt.server.run.force":       "If set, override existing PID file",
		"opt.server.run.is.detached": "If set, server assumes it is already detached",
		"opt.server.run.keep":        "The number of log files to keep",
		"opt.server.run.log":         "File path of server log",
		"opt.server.run.no.log":      "Suppress server log",
		"opt.server.run.not.secure":  "If set, use HTTP instead of HTTPS",
		"opt.server.run.realm":       "Name of authentication realm",
		"opt.server.run.sandbox":     "File path of sandboxed area for file I/O",
		"opt.server.run.static":      "Enforce static typing on program execution",
		"opt.server.run.superuser":   "Designate this user as a super-user with ROOT privileges",
		"opt.server.run.users":       "File with authentication JSON data",
		"opt.server.run.uuid":        "Sets the optional session UUID value",
		"opt.server.user.user":       "Username to create or update",
		"opt.server.user.pass":       "Password to assign to user",
		"opt.server.user.perms":      "Permissions to grant to user",

		"opt.table.create.file":        "File name containing JSON column info",
		"opt.table.delete.filter":      "Filter for rows to delete. If not specified, all rows are deleted",
		"opt.table.grant.permission":   "Permissions to set for this table updated",
		"opt.table.grant.user":         "User (if other than current user) to update",
		"opt.table.insert.file":        "File name containing JSON row info",
		"opt.table.list.no.row.counts": "If specified, listing does not include row counts",
		"opt.table.permission.user":    "User (if other than current user) to list)",
		"opt.table.permissions.user":   "If specified, list only this user",
		"opt.table.read.columns":       "List of optional column names to display; if not specified, all columns are returned",
		"opt.table.read.order.by":      "List of optional columns use to sort output",
		"opt.table.read.row.ids":       "Include the row UUID column in the output",
		"opt.table.read.row.numbers":   "Include the row number in the output",
		"opt.table.update.filter":      "Filter for rows to update. If not specified, all rows are updated",

		"parm.file":         "file",
		"parm.file.or.path": "file or path",
		"parm.address.port": "address:port",

		"parm.sql.text":     "sql-text",
		"parm.table.name":   "table-name",
		"parm.table.create": "table-name column:type [column:type...]",
		"parm.table.insert": "table-name [column=value...]",
		"parm.table.update": "table-name column=value [column=value...]",

		"error.version.parse": "Unable to process version number {{v}; count={{c}}, err={{err}\n",
	},
}
