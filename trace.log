[20210409144644] 1     TRACE  : *** Tracing import io (1)  
[20210409144644] 2     TRACE  : (1)          import io   0: AtLine          1              stack[ 0]: <empty>
[20210409144644] 3     TRACE  : (1)          import io   1: PushPackage     "io"           stack[ 0]: <empty>
[20210409144644] 4     TRACE  : (1)          import io   2: Push            DirList()      stack[ 0]: <empty>
[20210409144644] 5     TRACE  : (1)          import io   3: StoreAlways     "DirList"      stack[ 1]: DirList()
[20210409144644] 6     TRACE  : (1)          import io   4: PopPackage      "io"           stack[ 0]: <empty>
[20210409144644] 7     TRACE  : (1)          import io   5: Stop                           stack[ 0]: <empty>
[20210409144644] 8     TRACE  : *** Tracing import math (2)  
[20210409144644] 9     TRACE  : (2)        import math   0: AtLine          1              stack[ 0]: <empty>
[20210409144644] 10    TRACE  : (2)        import math   1: PushPackage     "math"         stack[ 0]: <empty>
[20210409144644] 11    TRACE  : (2)        import math   2: Push            Factor()       stack[ 0]: <empty>
[20210409144644] 12    TRACE  : (2)        import math   3: StoreAlways     "Factor"       stack[ 1]: Factor()
[20210409144644] 13    TRACE  : (2)        import math   4: AtLine          49             stack[ 0]: <empty>
[20210409144644] 14    TRACE  : (2)        import math   5: PushPackage     "math"         stack[ 0]: <empty>
[20210409144644] 15    TRACE  : (2)        import math   6: Push            Primes()       stack[ 0]: <empty>
[20210409144644] 16    TRACE  : (2)        import math   7: StoreAlways     "Primes"       stack[ 1]: Primes()
[20210409144644] 17    TRACE  : (2)        import math   8: PopPackage      "math"         stack[ 0]: <empty>
[20210409144644] 18    TRACE  : (2)        import math   9: Stop                           stack[ 0]: <empty>
[20210409144644] 19    TRACE  : *** Tracing import strings (3)  
[20210409144644] 20    TRACE  : (3)     import strings   0: AtLine          1              stack[ 0]: <empty>
[20210409144644] 21    TRACE  : (3)     import strings   1: PushPackage     "strings"      stack[ 0]: <empty>
[20210409144644] 22    TRACE  : (3)     import strings   2: Push            Camel()        stack[ 0]: <empty>
[20210409144644] 23    TRACE  : (3)     import strings   3: StoreAlways     "Camel"        stack[ 1]: Camel()
[20210409144644] 24    TRACE  : (3)     import strings   4: PopPackage      "strings"      stack[ 0]: <empty>
[20210409144644] 25    TRACE  : (3)     import strings   5: Stop                           stack[ 0]: <empty>
[20210409144644] 26    TRACE  : *** Tracing encryption.ego (4)  
[20210409144644] 27    TRACE  : (4)     encryption.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144644] 28    TRACE  : (4)     encryption.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 29    TRACE  : (4)     encryption.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144644] 30    TRACE  : (4)     encryption.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144644] 31    TRACE  : (4)     encryption.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144644] 32    TRACE  : (4)     encryption.ego   5: Push            Testing{ description: "cipher: basic encrypt/decrypt" } stack[ 0]: <empty>
[20210409144644] 33    TRACE  : (4)     encryption.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 34    TRACE  : (4)     encryption.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144644] 35    TRACE  : (4)     encryption.ego   8: Print                          stack[ 1]: TEST: 
[20210409144644] 36    TRACE  : (4)     encryption.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144644] 37    TRACE  : (4)     encryption.ego  10: Member          "description"  stack[ 1]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 38    TRACE  : (4)     encryption.ego  11: Print                          stack[ 1]: cipher: basic encrypt/decrypt
[20210409144644] 39    TRACE  : (4)     encryption.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144644] 40    TRACE  : (4)     encryption.ego  13: Print                          stack[ 1]:                      
[20210409144644] 41    TRACE  : (4)     encryption.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144644] 42    TRACE  : (4)     encryption.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144644] 43    TRACE  : (4)     encryption.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144644] 44    TRACE  : (4)     encryption.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144644] 45    TRACE  : (4)     encryption.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 46    TRACE  : (4)     encryption.ego  19: Push            "test string of text" stack[ 1]: M<let>
[20210409144644] 47    TRACE  : (4)     encryption.ego  20: SymbolCreate    "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 48    TRACE  : (4)     encryption.ego  21: Store           "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 49    TRACE  : (4)     encryption.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 50    TRACE  : (4)     encryption.ego  23: AtLine          6              stack[ 0]: <empty>
[20210409144644] 51    TRACE  : (4)     encryption.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 52    TRACE  : (4)     encryption.ego  25: Push            "gibberish"    stack[ 1]: M<let>
[20210409144644] 53    TRACE  : (4)     encryption.ego  26: SymbolCreate    "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 54    TRACE  : (4)     encryption.ego  27: Store           "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 55    TRACE  : (4)     encryption.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 56    TRACE  : (4)     encryption.ego  29: AtLine          8              stack[ 0]: <empty>
[20210409144644] 57    TRACE  : (4)     encryption.ego  30: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 58    TRACE  : (4)     encryption.ego  31: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 59    TRACE  : (4)     encryption.ego  32: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 60    TRACE  : (4)     encryption.ego  33: Member          "Encrypt"      stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 61    TRACE  : (4)     encryption.ego  34: Load            "msg"          stack[ 2]: functions.Encrypt(), M<let>
[20210409144644] 62    TRACE  : (4)     encryption.ego  35: Load            "key"          stack[ 3]: test string of text, functions.Encrypt(), M<let>
[20210409144644] 63    TRACE  : (4)     encryption.ego  36: Call            2              stack[ 4]: gibberish, test string of text, functions.Encrypt(...
[20210409144644] 64    TRACE  : (4)     encryption.ego  37: SymbolCreate    "e"            stack[ 4]: 86262554992ef294af1ba8dcc5093086f0d0a8633df5f9ba5e...
[20210409144644] 65    TRACE  : (4)     encryption.ego  38: Store           "e"            stack[ 4]: 86262554992ef294af1ba8dcc5093086f0d0a8633df5f9ba5e...
[20210409144644] 66    TRACE  : (4)     encryption.ego  39: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 67    TRACE  : (4)     encryption.ego  40: AtLine          9              stack[ 0]: <empty>
[20210409144644] 68    TRACE  : (4)     encryption.ego  41: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 69    TRACE  : (4)     encryption.ego  42: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 70    TRACE  : (4)     encryption.ego  43: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 71    TRACE  : (4)     encryption.ego  44: Member          "Decrypt"      stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 72    TRACE  : (4)     encryption.ego  45: Load            "e"            stack[ 2]: functions.Decrypt(), M<let>
[20210409144644] 73    TRACE  : (4)     encryption.ego  46: Load            "key"          stack[ 3]: 86262554992ef294af1ba8dcc5093086f0d0a8633df5f9ba5e...
[20210409144644] 74    TRACE  : (4)     encryption.ego  47: Call            2              stack[ 4]: gibberish, 86262554992ef294af1ba8dcc5093086f0d0a86...
[20210409144644] 75    TRACE  : (4)     encryption.ego  48: SymbolCreate    "d"            stack[ 4]: test string of text, <nil>, M<results>, M<let>
[20210409144644] 76    TRACE  : (4)     encryption.ego  49: Store           "d"            stack[ 4]: test string of text, <nil>, M<results>, M<let>
[20210409144644] 77    TRACE  : (4)     encryption.ego  50: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 78    TRACE  : (4)     encryption.ego  51: AtLine          11             stack[ 0]: <empty>
[20210409144644] 79    TRACE  : (4)     encryption.ego  52: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 80    TRACE  : (4)     encryption.ego  53: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 81    TRACE  : (4)     encryption.ego  54: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 82    TRACE  : (4)     encryption.ego  55: Member          "assert"       stack[ 2]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 83    TRACE  : (4)     encryption.ego  56: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 84    TRACE  : (4)     encryption.ego  57: SetThis                        stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 85    TRACE  : (4)     encryption.ego  58: Member          "Equal"        stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 86    TRACE  : (4)     encryption.ego  59: Load            "msg"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144644] 87    TRACE  : (4)     encryption.ego  60: Load            "d"            stack[ 4]: test string of text, compiler.TestEqual(), compile...
[20210409144644] 88    TRACE  : (4)     encryption.ego  61: Push            "string did not decrypt correctly" stack[ 5]: test string of text, test string of text, compiler...
[20210409144644] 89    TRACE  : (4)     encryption.ego  62: Call            3              stack[ 6]: string did not decrypt correctly, test string of t...
[20210409144644] 90    TRACE  : (4)     encryption.ego  63: Call            1              stack[ 3]: [true string did not decrypt correctly], compiler....
[20210409144644] 91    TRACE  : (4)     encryption.ego  64: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 92    TRACE  : (4)     encryption.ego  65: PopScope                       stack[ 0]: <empty>
[20210409144644] 93    TRACE  : (4)     encryption.ego  66: AtLine          15             stack[ 0]: <empty>
[20210409144644] 94    TRACE  : (4)     encryption.ego  67: PushScope                      stack[ 0]: <empty>
[20210409144644] 95    TRACE  : (4)     encryption.ego  68: AtLine          16             stack[ 0]: <empty>
[20210409144644] 96    TRACE  : (4)     encryption.ego  69: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 97    TRACE  : (4)     encryption.ego  70: Push            "test string of text" stack[ 1]: M<let>
[20210409144644] 98    TRACE  : (4)     encryption.ego  71: SymbolCreate    "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 99    TRACE  : (4)     encryption.ego  72: Store           "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 100   TRACE  : (4)     encryption.ego  73: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 101   TRACE  : (4)     encryption.ego  74: AtLine          17             stack[ 0]: <empty>
[20210409144644] 102   TRACE  : (4)     encryption.ego  75: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 103   TRACE  : (4)     encryption.ego  76: Push            "gibberish"    stack[ 1]: M<let>
[20210409144644] 104   TRACE  : (4)     encryption.ego  77: SymbolCreate    "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 105   TRACE  : (4)     encryption.ego  78: Store           "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 106   TRACE  : (4)     encryption.ego  79: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 107   TRACE  : (4)     encryption.ego  80: AtLine          19             stack[ 0]: <empty>
[20210409144644] 108   TRACE  : (4)     encryption.ego  81: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 109   TRACE  : (4)     encryption.ego  82: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 110   TRACE  : (4)     encryption.ego  83: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 111   TRACE  : (4)     encryption.ego  84: Member          "Encrypt"      stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 112   TRACE  : (4)     encryption.ego  85: Load            "msg"          stack[ 2]: functions.Encrypt(), M<let>
[20210409144644] 113   TRACE  : (4)     encryption.ego  86: Load            "key"          stack[ 3]: test string of text, functions.Encrypt(), M<let>
[20210409144644] 114   TRACE  : (4)     encryption.ego  87: Call            2              stack[ 4]: gibberish, test string of text, functions.Encrypt(...
[20210409144644] 115   TRACE  : (4)     encryption.ego  88: SymbolCreate    "e"            stack[ 4]: fda0cda0d86fc3a1359190c764f360595ba765830bbf96d2be...
[20210409144644] 116   TRACE  : (4)     encryption.ego  89: Store           "e"            stack[ 4]: fda0cda0d86fc3a1359190c764f360595ba765830bbf96d2be...
[20210409144644] 117   TRACE  : (4)     encryption.ego  90: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 118   TRACE  : (4)     encryption.ego  91: AtLine          20             stack[ 0]: <empty>
[20210409144644] 119   TRACE  : (4)     encryption.ego  92: Load            "cipher"       stack[ 0]: <empty>
[20210409144644] 120   TRACE  : (4)     encryption.ego  93: SetThis                        stack[ 1]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 121   TRACE  : (4)     encryption.ego  94: Member          "Decrypt"      stack[ 1]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 122   TRACE  : (4)     encryption.ego  95: Load            "e"            stack[ 1]: functions.Decrypt()
[20210409144644] 123   TRACE  : (4)     encryption.ego  96: Load            "key"          stack[ 2]: fda0cda0d86fc3a1359190c764f360595ba765830bbf96d2be...
[20210409144644] 124   TRACE  : (4)     encryption.ego  97: Push            "a"            stack[ 3]: gibberish, fda0cda0d86fc3a1359190c764f360595ba7658...
[20210409144644] 125   TRACE  : (4)     encryption.ego  98: Add                            stack[ 4]: a, gibberish, fda0cda0d86fc3a1359190c764f360595ba7...
[20210409144644] 126   TRACE  : (4)     encryption.ego  99: Call            2              stack[ 3]: gibberisha, fda0cda0d86fc3a1359190c764f360595ba765...
[20210409144644] 127   TRACE  : (4)     encryption.ego 100: StackCheck      2              stack[ 3]: , cipher: message authentication failed, M<results...
[20210409144644] 128   TRACE  : (4)     encryption.ego 101: SymbolOptCreate "d"            stack[ 3]: , cipher: message authentication failed, M<results...
[20210409144644] 129   TRACE  : (4)     encryption.ego 102: Store           "d"            stack[ 3]: , cipher: message authentication failed, M<results...
[20210409144644] 130   TRACE  : (4)     encryption.ego 103: SymbolOptCreate "err"          stack[ 2]: cipher: message authentication failed, M<results>
[20210409144644] 131   TRACE  : (4)     encryption.ego 104: Store           "err"          stack[ 2]: cipher: message authentication failed, M<results>
[20210409144644] 132   TRACE  : (4)     encryption.ego 105: DropToMarker                   stack[ 1]: M<results>
[20210409144644] 133   TRACE  : (4)     encryption.ego 106: AtLine          21             stack[ 0]: <empty>
[20210409144644] 134   TRACE  : (4)     encryption.ego 107: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 135   TRACE  : (4)     encryption.ego 108: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 136   TRACE  : (4)     encryption.ego 109: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 137   TRACE  : (4)     encryption.ego 110: Member          "assert"       stack[ 2]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 138   TRACE  : (4)     encryption.ego 111: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 139   TRACE  : (4)     encryption.ego 112: SetThis                        stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 140   TRACE  : (4)     encryption.ego 113: Member          "NotNil"       stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 141   TRACE  : (4)     encryption.ego 114: Load            "err"          stack[ 3]: compiler.TestNotNil(), compiler.TestAssert(), M<as...
[20210409144644] 142   TRACE  : (4)     encryption.ego 115: Push            "decryption with bad key did not error" stack[ 4]: cipher: message authentication failed, compiler.Te...
[20210409144644] 143   TRACE  : (4)     encryption.ego 116: Call            2              stack[ 5]: decryption with bad key did not error, cipher: mes...
[20210409144644] 144   TRACE  : (4)     encryption.ego 117: Call            1              stack[ 3]: [true decryption with bad key did not error], comp...
[20210409144644] 145   TRACE  : (4)     encryption.ego 118: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 146   TRACE  : (4)     encryption.ego 119: PopScope                       stack[ 0]: <empty>
[20210409144644] 147   TRACE  : (4)     encryption.ego 120: AtLine          25             stack[ 0]: <empty>
[20210409144644] 148   TRACE  : (4)     encryption.ego 121: PushScope                      stack[ 0]: <empty>
[20210409144644] 149   TRACE  : (4)     encryption.ego 122: AtLine          26             stack[ 0]: <empty>
[20210409144644] 150   TRACE  : (4)     encryption.ego 123: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 151   TRACE  : (4)     encryption.ego 124: Push            "test string of text" stack[ 1]: M<let>
[20210409144644] 152   TRACE  : (4)     encryption.ego 125: SymbolCreate    "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 153   TRACE  : (4)     encryption.ego 126: Store           "msg"          stack[ 2]: test string of text, M<let>
[20210409144644] 154   TRACE  : (4)     encryption.ego 127: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 155   TRACE  : (4)     encryption.ego 128: AtLine          27             stack[ 0]: <empty>
[20210409144644] 156   TRACE  : (4)     encryption.ego 129: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 157   TRACE  : (4)     encryption.ego 130: Push            "gibberish"    stack[ 1]: M<let>
[20210409144644] 158   TRACE  : (4)     encryption.ego 131: SymbolCreate    "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 159   TRACE  : (4)     encryption.ego 132: Store           "key"          stack[ 2]: gibberish, M<let>
[20210409144644] 160   TRACE  : (4)     encryption.ego 133: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 161   TRACE  : (4)     encryption.ego 134: AtLine          29             stack[ 0]: <empty>
[20210409144644] 162   TRACE  : (4)     encryption.ego 135: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 163   TRACE  : (4)     encryption.ego 136: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 164   TRACE  : (4)     encryption.ego 137: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 165   TRACE  : (4)     encryption.ego 138: Member          "Encrypt"      stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 166   TRACE  : (4)     encryption.ego 139: Load            "msg"          stack[ 2]: functions.Encrypt(), M<let>
[20210409144644] 167   TRACE  : (4)     encryption.ego 140: Load            "key"          stack[ 3]: test string of text, functions.Encrypt(), M<let>
[20210409144644] 168   TRACE  : (4)     encryption.ego 141: Call            2              stack[ 4]: gibberish, test string of text, functions.Encrypt(...
[20210409144644] 169   TRACE  : (4)     encryption.ego 142: Push            "X"            stack[ 4]: 9d8693405a840025c27462cc5a75db2f28ef8921537d4aeaa3...
[20210409144644] 170   TRACE  : (4)     encryption.ego 143: Add                            stack[ 5]: X, 9d8693405a840025c27462cc5a75db2f28ef8921537d4ae...
[20210409144644] 171   TRACE  : (4)     encryption.ego 144: SymbolCreate    "e"            stack[ 4]: 9d8693405a840025c27462cc5a75db2f28ef8921537d4aeaa3...
[20210409144644] 172   TRACE  : (4)     encryption.ego 145: Store           "e"            stack[ 4]: 9d8693405a840025c27462cc5a75db2f28ef8921537d4aeaa3...
[20210409144644] 173   TRACE  : (4)     encryption.ego 146: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 174   TRACE  : (4)     encryption.ego 147: AtLine          30             stack[ 0]: <empty>
[20210409144644] 175   TRACE  : (4)     encryption.ego 148: Load            "cipher"       stack[ 0]: <empty>
[20210409144644] 176   TRACE  : (4)     encryption.ego 149: SetThis                        stack[ 1]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 177   TRACE  : (4)     encryption.ego 150: Member          "Decrypt"      stack[ 1]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 178   TRACE  : (4)     encryption.ego 151: Load            "e"            stack[ 1]: functions.Decrypt()
[20210409144644] 179   TRACE  : (4)     encryption.ego 152: Load            "key"          stack[ 2]: 9d8693405a840025c27462cc5a75db2f28ef8921537d4aeaa3...
[20210409144644] 180   TRACE  : (4)     encryption.ego 153: Call            2              stack[ 3]: gibberish, 9d8693405a840025c27462cc5a75db2f28ef892...
[20210409144644] 181   TRACE  : (4)     encryption.ego 154: StackCheck      2              stack[ 3]: <nil>, encoding/hex: invalid byte: U+0058 'X', M<r...
[20210409144644] 182   TRACE  : (4)     encryption.ego 155: SymbolOptCreate "d"            stack[ 3]: <nil>, encoding/hex: invalid byte: U+0058 'X', M<r...
[20210409144644] 183   TRACE  : (4)     encryption.ego 156: Store           "d"            stack[ 3]: <nil>, encoding/hex: invalid byte: U+0058 'X', M<r...
[20210409144644] 184   TRACE  : (4)     encryption.ego 157: SymbolOptCreate "err"          stack[ 2]: encoding/hex: invalid byte: U+0058 'X', M<results>
[20210409144644] 185   TRACE  : (4)     encryption.ego 158: Store           "err"          stack[ 2]: encoding/hex: invalid byte: U+0058 'X', M<results>
[20210409144644] 186   TRACE  : (4)     encryption.ego 159: DropToMarker                   stack[ 1]: M<results>
[20210409144644] 187   TRACE  : (4)     encryption.ego 160: AtLine          31             stack[ 0]: <empty>
[20210409144644] 188   TRACE  : (4)     encryption.ego 161: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 189   TRACE  : (4)     encryption.ego 162: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 190   TRACE  : (4)     encryption.ego 163: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 191   TRACE  : (4)     encryption.ego 164: Member          "assert"       stack[ 2]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 192   TRACE  : (4)     encryption.ego 165: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 193   TRACE  : (4)     encryption.ego 166: SetThis                        stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 194   TRACE  : (4)     encryption.ego 167: Member          "NotNil"       stack[ 3]: Testing{ description: "cipher: basic encrypt/decry...
[20210409144644] 195   TRACE  : (4)     encryption.ego 168: Load            "err"          stack[ 3]: compiler.TestNotNil(), compiler.TestAssert(), M<as...
[20210409144644] 196   TRACE  : (4)     encryption.ego 169: Push            "decryption with modified value did not error" stack[ 4]: encoding/hex: invalid byte: U+0058 'X', compiler.T...
[20210409144644] 197   TRACE  : (4)     encryption.ego 170: Call            2              stack[ 5]: decryption with modified value did not error, enco...
[20210409144644] 198   TRACE  : (4)     encryption.ego 171: Call            1              stack[ 3]: [true decryption with modified value did not error...
[20210409144644] 199   TRACE  : (4)     encryption.ego 172: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 200   TRACE  : (4)     encryption.ego 173: PopScope                       stack[ 0]: <empty>
[20210409144644] 201   TRACE  : (4)     encryption.ego 174: AtLine          34             stack[ 0]: <empty>
[20210409144644] 202   TRACE  : (4)     encryption.ego 175: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 203   TRACE  : (4)     encryption.ego 176: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144644] 204   TRACE  : (4)     encryption.ego 177: Print                          stack[ 1]: (PASS)  
[20210409144644] 205   TRACE  : (4)     encryption.ego 178: Timer           1              stack[ 0]: <empty>
[20210409144644] 206   TRACE  : (4)     encryption.ego 179: Print                          stack[ 1]: 0.001s
[20210409144644] 207   TRACE  : (4)     encryption.ego 180: Say             true           stack[ 0]: <empty>
TEST: cipher: basic encrypt/decrypt                     (PASS)  0.001s
[20210409144644] 208   TRACE  : (4)     encryption.ego 181: Stop                           stack[ 0]: <empty>
[20210409144644] 209   TRACE  : *** Tracing token.ego (5)  
[20210409144644] 210   TRACE  : (5)          token.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144644] 211   TRACE  : (5)          token.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 212   TRACE  : (5)          token.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144644] 213   TRACE  : (5)          token.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144644] 214   TRACE  : (5)          token.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144644] 215   TRACE  : (5)          token.ego   5: Push            Testing{ description: "cipher: token functions" } stack[ 0]: <empty>
[20210409144644] 216   TRACE  : (5)          token.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "cipher: token functions" }
[20210409144644] 217   TRACE  : (5)          token.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144644] 218   TRACE  : (5)          token.ego   8: Print                          stack[ 1]: TEST: 
[20210409144644] 219   TRACE  : (5)          token.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144644] 220   TRACE  : (5)          token.ego  10: Member          "description"  stack[ 1]: Testing{ description: "cipher: token functions" }
[20210409144644] 221   TRACE  : (5)          token.ego  11: Print                          stack[ 1]: cipher: token functions
[20210409144644] 222   TRACE  : (5)          token.ego  12: Push            "                           " stack[ 0]: <empty>
[20210409144644] 223   TRACE  : (5)          token.ego  13: Print                          stack[ 1]:                            
[20210409144644] 224   TRACE  : (5)          token.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144644] 225   TRACE  : (5)          token.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144644] 226   TRACE  : (5)          token.ego  16: AtLine          6              stack[ 0]: <empty>
[20210409144644] 227   TRACE  : (5)          token.ego  17: PushScope                      stack[ 0]: <empty>
[20210409144644] 228   TRACE  : (5)          token.ego  18: AtLine          7              stack[ 0]: <empty>
[20210409144644] 229   TRACE  : (5)          token.ego  19: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 230   TRACE  : (5)          token.ego  20: Push            "hidden message" stack[ 1]: M<let>
[20210409144644] 231   TRACE  : (5)          token.ego  21: SymbolCreate    "msg"          stack[ 2]: hidden message, M<let>
[20210409144644] 232   TRACE  : (5)          token.ego  22: Store           "msg"          stack[ 2]: hidden message, M<let>
[20210409144644] 233   TRACE  : (5)          token.ego  23: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 234   TRACE  : (5)          token.ego  24: AtLine          8              stack[ 0]: <empty>
[20210409144644] 235   TRACE  : (5)          token.ego  25: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 236   TRACE  : (5)          token.ego  26: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 237   TRACE  : (5)          token.ego  27: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 238   TRACE  : (5)          token.ego  28: Member          "Create"       stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 239   TRACE  : (5)          token.ego  29: Load            "msg"          stack[ 2]: functions.CreateToken(), M<let>
[20210409144644] 240   TRACE  : (5)          token.ego  30: Call            1              stack[ 3]: hidden message, functions.CreateToken(), M<let>
[20210409144644] 241   TRACE  : (5)          token.ego  31: SymbolCreate    "t"            stack[ 4]: efa34e3f773c2ec3db2cdfeaa23f3d31f7e08f4b4840f8c842...
[20210409144644] 242   TRACE  : (5)          token.ego  32: Store           "t"            stack[ 4]: efa34e3f773c2ec3db2cdfeaa23f3d31f7e08f4b4840f8c842...
[20210409144644] 243   TRACE  : (5)          token.ego  33: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 244   TRACE  : (5)          token.ego  34: AtLine          9              stack[ 0]: <empty>
[20210409144644] 245   TRACE  : (5)          token.ego  35: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 246   TRACE  : (5)          token.ego  36: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 247   TRACE  : (5)          token.ego  37: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 248   TRACE  : (5)          token.ego  38: Member          "assert"       stack[ 2]: Testing{ description: "cipher: token functions" },...
[20210409144644] 249   TRACE  : (5)          token.ego  39: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 250   TRACE  : (5)          token.ego  40: SetThis                        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 251   TRACE  : (5)          token.ego  41: Member          "True"         stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 252   TRACE  : (5)          token.ego  42: Load            "cipher"       stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144644] 253   TRACE  : (5)          token.ego  43: SetThis                        stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 254   TRACE  : (5)          token.ego  44: Member          "Validate"     stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 255   TRACE  : (5)          token.ego  45: Load            "t"            stack[ 4]: functions.Validate(), compiler.TestTrue(), compile...
[20210409144644] 256   TRACE  : (5)          token.ego  46: Call            1              stack[ 5]: efa34e3f773c2ec3db2cdfeaa23f3d31f7e08f4b4840f8c842...
[20210409144644] 257   TRACE  : (5)          token.ego  47: Push            "token is not valid" stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144644] 258   TRACE  : (5)          token.ego  48: Call            2              stack[ 5]: token is not valid, true, compiler.TestTrue(), com...
[20210409144644] 259   TRACE  : (5)          token.ego  49: Call            1              stack[ 3]: [true token is not valid], compiler.TestAssert(), ...
[20210409144644] 260   TRACE  : (5)          token.ego  50: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 261   TRACE  : (5)          token.ego  51: AtLine          10             stack[ 0]: <empty>
[20210409144644] 262   TRACE  : (5)          token.ego  52: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 263   TRACE  : (5)          token.ego  53: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 264   TRACE  : (5)          token.ego  54: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 265   TRACE  : (5)          token.ego  55: Member          "assert"       stack[ 2]: Testing{ description: "cipher: token functions" },...
[20210409144644] 266   TRACE  : (5)          token.ego  56: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 267   TRACE  : (5)          token.ego  57: SetThis                        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 268   TRACE  : (5)          token.ego  58: Member          "Equal"        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 269   TRACE  : (5)          token.ego  59: Load            "cipher"       stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144644] 270   TRACE  : (5)          token.ego  60: SetThis                        stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 271   TRACE  : (5)          token.ego  61: Member          "Token"        stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 272   TRACE  : (5)          token.ego  62: Load            "t"            stack[ 4]: functions.Extract(), compiler.TestEqual(), compile...
[20210409144644] 273   TRACE  : (5)          token.ego  63: Call            1              stack[ 5]: efa34e3f773c2ec3db2cdfeaa23f3d31f7e08f4b4840f8c842...
[20210409144644] 274   TRACE  : (5)          token.ego  64: Member          "name"         stack[ 4]: { data: "", expires: "2021-04-10 14:46:44.37671 -0...
[20210409144644] 275   TRACE  : (5)          token.ego  65: Load            "msg"          stack[ 4]: hidden message, compiler.TestEqual(), compiler.Tes...
[20210409144644] 276   TRACE  : (5)          token.ego  66: Push            "token does not contain expected user data" stack[ 5]: hidden message, hidden message, compiler.TestEqual...
[20210409144644] 277   TRACE  : (5)          token.ego  67: Call            3              stack[ 6]: token does not contain expected user data, hidden ...
[20210409144644] 278   TRACE  : (5)          token.ego  68: Call            1              stack[ 3]: [true token does not contain expected user data], ...
[20210409144644] 279   TRACE  : (5)          token.ego  69: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 280   TRACE  : (5)          token.ego  70: PopScope                       stack[ 0]: <empty>
[20210409144644] 281   TRACE  : (5)          token.ego  71: AtLine          13             stack[ 0]: <empty>
[20210409144644] 282   TRACE  : (5)          token.ego  72: PushScope                      stack[ 0]: <empty>
[20210409144644] 283   TRACE  : (5)          token.ego  73: AtLine          14             stack[ 0]: <empty>
[20210409144644] 284   TRACE  : (5)          token.ego  74: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 285   TRACE  : (5)          token.ego  75: Push            "hidden message" stack[ 1]: M<let>
[20210409144644] 286   TRACE  : (5)          token.ego  76: SymbolCreate    "msg"          stack[ 2]: hidden message, M<let>
[20210409144644] 287   TRACE  : (5)          token.ego  77: Store           "msg"          stack[ 2]: hidden message, M<let>
[20210409144644] 288   TRACE  : (5)          token.ego  78: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 289   TRACE  : (5)          token.ego  79: AtLine          15             stack[ 0]: <empty>
[20210409144644] 290   TRACE  : (5)          token.ego  80: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 291   TRACE  : (5)          token.ego  81: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 292   TRACE  : (5)          token.ego  82: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 293   TRACE  : (5)          token.ego  83: Member          "Create"       stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 294   TRACE  : (5)          token.ego  84: Load            "msg"          stack[ 2]: functions.CreateToken(), M<let>
[20210409144644] 295   TRACE  : (5)          token.ego  85: Call            1              stack[ 3]: hidden message, functions.CreateToken(), M<let>
[20210409144644] 296   TRACE  : (5)          token.ego  86: Push            "00"           stack[ 4]: f309bfe6c8cc71824e6e8eb508b9edb8b30a51b44f093bdb21...
[20210409144644] 297   TRACE  : (5)          token.ego  87: Add                            stack[ 5]: 00, f309bfe6c8cc71824e6e8eb508b9edb8b30a51b44f093b...
[20210409144644] 298   TRACE  : (5)          token.ego  88: SymbolCreate    "t"            stack[ 4]: f309bfe6c8cc71824e6e8eb508b9edb8b30a51b44f093bdb21...
[20210409144644] 299   TRACE  : (5)          token.ego  89: Store           "t"            stack[ 4]: f309bfe6c8cc71824e6e8eb508b9edb8b30a51b44f093bdb21...
[20210409144644] 300   TRACE  : (5)          token.ego  90: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 301   TRACE  : (5)          token.ego  91: AtLine          16             stack[ 0]: <empty>
[20210409144644] 302   TRACE  : (5)          token.ego  92: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144644] 303   TRACE  : (5)          token.ego  93: Push            M<assert>      stack[ 0]: <empty>
[20210409144644] 304   TRACE  : (5)          token.ego  94: Load            "T"            stack[ 1]: M<assert>
[20210409144644] 305   TRACE  : (5)          token.ego  95: Member          "assert"       stack[ 2]: Testing{ description: "cipher: token functions" },...
[20210409144644] 306   TRACE  : (5)          token.ego  96: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144644] 307   TRACE  : (5)          token.ego  97: SetThis                        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 308   TRACE  : (5)          token.ego  98: Member          "False"        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144644] 309   TRACE  : (5)          token.ego  99: Load            "cipher"       stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144644] 310   TRACE  : (5)          token.ego 100: SetThis                        stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 311   TRACE  : (5)          token.ego 101: Member          "Validate"     stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 312   TRACE  : (5)          token.ego 102: Load            "t"            stack[ 4]: functions.Validate(), compiler.TestFalse(), compil...
[20210409144644] 313   TRACE  : (5)          token.ego 103: Call            1              stack[ 5]: f309bfe6c8cc71824e6e8eb508b9edb8b30a51b44f093bdb21...
[20210409144644] 314   TRACE  : (5)          token.ego 104: Push            "token is not invalid" stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144644] 315   TRACE  : (5)          token.ego 105: Call            2              stack[ 5]: token is not invalid, false, compiler.TestFalse(),...
[20210409144644] 316   TRACE  : (5)          token.ego 106: Call            1              stack[ 3]: [true token is not invalid], compiler.TestAssert()...
[20210409144644] 317   TRACE  : (5)          token.ego 107: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144644] 318   TRACE  : (5)          token.ego 108: PopScope                       stack[ 0]: <empty>
[20210409144644] 319   TRACE  : (5)          token.ego 109: AtLine          18             stack[ 0]: <empty>
[20210409144644] 320   TRACE  : (5)          token.ego 110: PushScope                      stack[ 0]: <empty>
[20210409144644] 321   TRACE  : (5)          token.ego 111: AtLine          19             stack[ 0]: <empty>
[20210409144644] 322   TRACE  : (5)          token.ego 112: Push            "ego.token.expiration" stack[ 0]: <empty>
[20210409144644] 323   TRACE  : (5)          token.ego 113: Constant        "TokenExpirationSetting" stack[ 1]: ego.token.expiration
[20210409144644] 324   TRACE  : (5)          token.ego 114: AtLine          20             stack[ 0]: <empty>
[20210409144644] 325   TRACE  : (5)          token.ego 115: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 326   TRACE  : (5)          token.ego 116: Load            "profile"      stack[ 1]: M<let>
[20210409144644] 327   TRACE  : (5)          token.ego 117: SetThis                        stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144644] 328   TRACE  : (5)          token.ego 118: Member          "Get"          stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144644] 329   TRACE  : (5)          token.ego 119: Load            "TokenExpirationSetting" stack[ 2]: functions.ProfileGet(), M<let>
[20210409144644] 330   TRACE  : (5)          token.ego 120: Call            1              stack[ 3]: ego.token.expiration, functions.ProfileGet(), M<le...
[20210409144644] 331   TRACE  : (5)          token.ego 121: SymbolCreate    "td"           stack[ 2]: 24h, M<let>
[20210409144644] 332   TRACE  : (5)          token.ego 122: Store           "td"           stack[ 2]: 24h, M<let>
[20210409144644] 333   TRACE  : (5)          token.ego 123: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144644] 334   TRACE  : (5)          token.ego 124: AtLine          21             stack[ 0]: <empty>
[20210409144644] 335   TRACE  : (5)          token.ego 125: Load            "bool"         stack[ 0]: <empty>
[20210409144644] 336   TRACE  : (5)          token.ego 126: Load            "td"           stack[ 1]: functions.Bool()
[20210409144644] 337   TRACE  : (5)          token.ego 127: Push            ""             stack[ 2]: 24h, functions.Bool()
[20210409144644] 338   TRACE  : (5)          token.ego 128: Equal                          stack[ 3]: , 24h, functions.Bool()
[20210409144644] 339   TRACE  : (5)          token.ego 129: Call            1              stack[ 2]: false, functions.Bool()
[20210409144644] 340   TRACE  : (5)          token.ego 130: BranchFalse     @140           stack[ 1]: false
[20210409144644] 341   TRACE  : (5)          token.ego 140: AtLine          24             stack[ 0]: <empty>
[20210409144644] 342   TRACE  : (5)          token.ego 141: Push            M<call>        stack[ 0]: <empty>
[20210409144644] 343   TRACE  : (5)          token.ego 142: Load            "profile"      stack[ 1]: M<call>
[20210409144644] 344   TRACE  : (5)          token.ego 143: SetThis                        stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144644] 345   TRACE  : (5)          token.ego 144: Member          "Set"          stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144644] 346   TRACE  : (5)          token.ego 145: Load            "TokenExpirationSetting" stack[ 2]: functions.ProfileSet(), M<call>
[20210409144644] 347   TRACE  : (5)          token.ego 146: Push            ".5s"          stack[ 3]: ego.token.expiration, functions.ProfileSet(), M<ca...
[20210409144644] 348   TRACE  : (5)          token.ego 147: Call            2              stack[ 4]: .5s, ego.token.expiration, functions.ProfileSet(),...
[20210409144644] 349   TRACE  : (5)          token.ego 148: DropToMarker    M<call>        stack[ 1]: M<call>
[20210409144644] 350   TRACE  : (5)          token.ego 149: AtLine          26             stack[ 0]: <empty>
[20210409144644] 351   TRACE  : (5)          token.ego 150: Push            M<let>         stack[ 0]: <empty>
[20210409144644] 352   TRACE  : (5)          token.ego 151: Load            "cipher"       stack[ 1]: M<let>
[20210409144644] 353   TRACE  : (5)          token.ego 152: SetThis                        stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 354   TRACE  : (5)          token.ego 153: Member          "Create"       stack[ 2]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144644] 355   TRACE  : (5)          token.ego 154: Push            "test"         stack[ 2]: functions.CreateToken(), M<let>
[20210409144644] 356   TRACE  : (5)          token.ego 155: Call            1              stack[ 3]: test, functions.CreateToken(), M<let>
[20210409144644] 357   TRACE  : (5)          token.ego 156: SymbolCreate    "t"            stack[ 4]: 622df7b39af11aa44bc38fb686ebab02367cdd2b1ce2e664e9...
[20210409144644] 358   TRACE  : (5)          token.ego 157: Store           "t"            stack[ 4]: 622df7b39af11aa44bc38fb686ebab02367cdd2b1ce2e664e9...
[20210409144644] 359   TRACE  : (5)          token.ego 158: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144644] 360   TRACE  : (5)          token.ego 159: AtLine          27             stack[ 0]: <empty>
[20210409144644] 361   TRACE  : (5)          token.ego 160: Push            M<call>        stack[ 0]: <empty>
[20210409144644] 362   TRACE  : (5)          token.ego 161: Load            "time"         stack[ 1]: M<call>
[20210409144644] 363   TRACE  : (5)          token.ego 162: SetThis                        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144644] 364   TRACE  : (5)          token.ego 163: Member          "Sleep"        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144644] 365   TRACE  : (5)          token.ego 164: Push            "1s"           stack[ 2]: functions.Sleep(), M<call>
[20210409144644] 366   TRACE  : (5)          token.ego 165: Call            1              stack[ 3]: 1s, functions.Sleep(), M<call>
[20210409144645] 367   TRACE  : (5)          token.ego 166: DropToMarker    M<call>        stack[ 2]: true, M<call>
[20210409144645] 368   TRACE  : (5)          token.ego 167: AtLine          28             stack[ 0]: <empty>
[20210409144645] 369   TRACE  : (5)          token.ego 168: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 370   TRACE  : (5)          token.ego 169: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 371   TRACE  : (5)          token.ego 170: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 372   TRACE  : (5)          token.ego 171: Member          "assert"       stack[ 2]: Testing{ description: "cipher: token functions" },...
[20210409144645] 373   TRACE  : (5)          token.ego 172: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 374   TRACE  : (5)          token.ego 173: SetThis                        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144645] 375   TRACE  : (5)          token.ego 174: Member          "False"        stack[ 3]: Testing{ description: "cipher: token functions" },...
[20210409144645] 376   TRACE  : (5)          token.ego 175: Load            "cipher"       stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144645] 377   TRACE  : (5)          token.ego 176: SetThis                        stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144645] 378   TRACE  : (5)          token.ego 177: Member          "Validate"     stack[ 4]: Pkg< Create: functions.CreateToken(), Decrypt: fun...
[20210409144645] 379   TRACE  : (5)          token.ego 178: Load            "t"            stack[ 4]: functions.Validate(), compiler.TestFalse(), compil...
[20210409144645] 380   TRACE  : (5)          token.ego 179: Call            1              stack[ 5]: 622df7b39af11aa44bc38fb686ebab02367cdd2b1ce2e664e9...
[20210409144645] 381   TRACE  : (5)          token.ego 180: Push            "token is not invalid" stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 382   TRACE  : (5)          token.ego 181: Call            2              stack[ 5]: token is not invalid, false, compiler.TestFalse(),...
[20210409144645] 383   TRACE  : (5)          token.ego 182: Call            1              stack[ 3]: [true token is not invalid], compiler.TestAssert()...
[20210409144645] 384   TRACE  : (5)          token.ego 183: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 385   TRACE  : (5)          token.ego 184: AtLine          29             stack[ 0]: <empty>
[20210409144645] 386   TRACE  : (5)          token.ego 185: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 387   TRACE  : (5)          token.ego 186: Load            "profile"      stack[ 1]: M<call>
[20210409144645] 388   TRACE  : (5)          token.ego 187: SetThis                        stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144645] 389   TRACE  : (5)          token.ego 188: Member          "Set"          stack[ 2]: Pkg< Delete: functions.ProfileDelete(), Get: funct...
[20210409144645] 390   TRACE  : (5)          token.ego 189: Load            "TokenExpirationSetting" stack[ 2]: functions.ProfileSet(), M<call>
[20210409144645] 391   TRACE  : (5)          token.ego 190: Load            "td"           stack[ 3]: ego.token.expiration, functions.ProfileSet(), M<ca...
[20210409144645] 392   TRACE  : (5)          token.ego 191: Call            2              stack[ 4]: 24h, ego.token.expiration, functions.ProfileSet(),...
[20210409144645] 393   TRACE  : (5)          token.ego 192: DropToMarker    M<call>        stack[ 1]: M<call>
[20210409144645] 394   TRACE  : (5)          token.ego 193: PopScope                       stack[ 0]: <empty>
[20210409144645] 395   TRACE  : (5)          token.ego 194: AtLine          32             stack[ 0]: <empty>
[20210409144645] 396   TRACE  : (5)          token.ego 195: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 397   TRACE  : (5)          token.ego 196: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 398   TRACE  : (5)          token.ego 197: Print                          stack[ 1]: (PASS)  
[20210409144645] 399   TRACE  : (5)          token.ego 198: Timer           1              stack[ 0]: <empty>
[20210409144645] 400   TRACE  : (5)          token.ego 199: Print                          stack[ 1]: 1.007s
[20210409144645] 401   TRACE  : (5)          token.ego 200: Say             true           stack[ 0]: <empty>
TEST: cipher: token functions                           (PASS)  1.007s
[20210409144645] 402   TRACE  : (5)          token.ego 201: Stop                           stack[ 0]: <empty>
[20210409144645] 403   TRACE  : *** Tracing arraycasts.ego (6)  
[20210409144645] 404   TRACE  : (6)     arraycasts.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 405   TRACE  : (6)     arraycasts.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 406   TRACE  : (6)     arraycasts.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 407   TRACE  : (6)     arraycasts.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 408   TRACE  : (6)     arraycasts.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 409   TRACE  : (6)     arraycasts.ego   5: Push            Testing{ description: "datamodel: array type casting" } stack[ 0]: <empty>
[20210409144645] 410   TRACE  : (6)     arraycasts.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: array type casti...
[20210409144645] 411   TRACE  : (6)     arraycasts.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 412   TRACE  : (6)     arraycasts.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 413   TRACE  : (6)     arraycasts.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 414   TRACE  : (6)     arraycasts.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: array type casti...
[20210409144645] 415   TRACE  : (6)     arraycasts.ego  11: Print                          stack[ 1]: datamodel: array type casting
[20210409144645] 416   TRACE  : (6)     arraycasts.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144645] 417   TRACE  : (6)     arraycasts.ego  13: Print                          stack[ 1]:                      
[20210409144645] 418   TRACE  : (6)     arraycasts.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 419   TRACE  : (6)     arraycasts.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 420   TRACE  : (6)     arraycasts.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 421   TRACE  : (6)     arraycasts.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 422   TRACE  : (6)     arraycasts.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 423   TRACE  : (6)     arraycasts.ego  19: Push            T([]int)       stack[ 1]: M<let>
[20210409144645] 424   TRACE  : (6)     arraycasts.ego  20: Push            "ABC"          stack[ 2]: T([]int), M<let>
[20210409144645] 425   TRACE  : (6)     arraycasts.ego  21: Call            1              stack[ 3]: ABC, T([]int), M<let>
[20210409144645] 426   TRACE  : (6)     arraycasts.ego  22: SymbolCreate    "i"            stack[ 2]: [65, 66, 67], M<let>
[20210409144645] 427   TRACE  : (6)     arraycasts.ego  23: Store           "i"            stack[ 2]: [65, 66, 67], M<let>
[20210409144645] 428   TRACE  : (6)     arraycasts.ego  24: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 429   TRACE  : (6)     arraycasts.ego  25: AtLine          6              stack[ 0]: <empty>
[20210409144645] 430   TRACE  : (6)     arraycasts.ego  26: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 431   TRACE  : (6)     arraycasts.ego  27: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 432   TRACE  : (6)     arraycasts.ego  28: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 433   TRACE  : (6)     arraycasts.ego  29: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 434   TRACE  : (6)     arraycasts.ego  30: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 435   TRACE  : (6)     arraycasts.ego  31: Load            "i"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 436   TRACE  : (6)     arraycasts.ego  32: Call            1              stack[ 4]: [65, 66, 67], functions.Type(), compiler.TestAsser...
[20210409144645] 437   TRACE  : (6)     arraycasts.ego  33: Push            "[]int"        stack[ 3]: []int, compiler.TestAssert(), M<assert>
[20210409144645] 438   TRACE  : (6)     arraycasts.ego  34: Equal                          stack[ 4]: []int, []int, compiler.TestAssert(), M<assert>
[20210409144645] 439   TRACE  : (6)     arraycasts.ego  35: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 440   TRACE  : (6)     arraycasts.ego  36: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 441   TRACE  : (6)     arraycasts.ego  37: AtLine          7              stack[ 0]: <empty>
[20210409144645] 442   TRACE  : (6)     arraycasts.ego  38: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 443   TRACE  : (6)     arraycasts.ego  39: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 444   TRACE  : (6)     arraycasts.ego  40: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 445   TRACE  : (6)     arraycasts.ego  41: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 446   TRACE  : (6)     arraycasts.ego  42: Load            "i"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 447   TRACE  : (6)     arraycasts.ego  43: Push            65             stack[ 3]: [65, 66, 67], compiler.TestAssert(), M<assert>
[20210409144645] 448   TRACE  : (6)     arraycasts.ego  44: Push            66             stack[ 4]: 65, [65, 66, 67], compiler.TestAssert(), M<assert>
[20210409144645] 449   TRACE  : (6)     arraycasts.ego  45: Push            67             stack[ 5]: 66, 65, [65, 66, 67], compiler.TestAssert(), M<ass...
[20210409144645] 450   TRACE  : (6)     arraycasts.ego  46: Push            T(int)         stack[ 6]: 67, 66, 65, [65, 66, 67], compiler.TestAssert(), M...
[20210409144645] 451   TRACE  : (6)     arraycasts.ego  47: MakeArray       3              stack[ 7]: T(int), 67, 66, 65, [65, 66, 67], compiler.TestAss...
[20210409144645] 452   TRACE  : (6)     arraycasts.ego  48: Equal                          stack[ 4]: [65, 66, 67], [65, 66, 67], compiler.TestAssert(),...
[20210409144645] 453   TRACE  : (6)     arraycasts.ego  49: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 454   TRACE  : (6)     arraycasts.ego  50: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 455   TRACE  : (6)     arraycasts.ego  51: AtLine          10             stack[ 0]: <empty>
[20210409144645] 456   TRACE  : (6)     arraycasts.ego  52: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 457   TRACE  : (6)     arraycasts.ego  53: Push            T([]float)     stack[ 1]: M<let>
[20210409144645] 458   TRACE  : (6)     arraycasts.ego  54: Load            "i"            stack[ 2]: T([]float), M<let>
[20210409144645] 459   TRACE  : (6)     arraycasts.ego  55: Call            1              stack[ 3]: [65, 66, 67], T([]float), M<let>
[20210409144645] 460   TRACE  : (6)     arraycasts.ego  56: SymbolCreate    "f"            stack[ 2]: [65, 66, 67], M<let>
[20210409144645] 461   TRACE  : (6)     arraycasts.ego  57: Store           "f"            stack[ 2]: [65, 66, 67], M<let>
[20210409144645] 462   TRACE  : (6)     arraycasts.ego  58: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 463   TRACE  : (6)     arraycasts.ego  59: AtLine          11             stack[ 0]: <empty>
[20210409144645] 464   TRACE  : (6)     arraycasts.ego  60: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 465   TRACE  : (6)     arraycasts.ego  61: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 466   TRACE  : (6)     arraycasts.ego  62: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 467   TRACE  : (6)     arraycasts.ego  63: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 468   TRACE  : (6)     arraycasts.ego  64: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 469   TRACE  : (6)     arraycasts.ego  65: Load            "f"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 470   TRACE  : (6)     arraycasts.ego  66: Call            1              stack[ 4]: [65, 66, 67], functions.Type(), compiler.TestAsser...
[20210409144645] 471   TRACE  : (6)     arraycasts.ego  67: Push            "[]float"      stack[ 3]: []float, compiler.TestAssert(), M<assert>
[20210409144645] 472   TRACE  : (6)     arraycasts.ego  68: Equal                          stack[ 4]: []float, []float, compiler.TestAssert(), M<assert>
[20210409144645] 473   TRACE  : (6)     arraycasts.ego  69: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 474   TRACE  : (6)     arraycasts.ego  70: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 475   TRACE  : (6)     arraycasts.ego  71: AtLine          12             stack[ 0]: <empty>
[20210409144645] 476   TRACE  : (6)     arraycasts.ego  72: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 477   TRACE  : (6)     arraycasts.ego  73: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 478   TRACE  : (6)     arraycasts.ego  74: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 479   TRACE  : (6)     arraycasts.ego  75: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 480   TRACE  : (6)     arraycasts.ego  76: Load            "f"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 481   TRACE  : (6)     arraycasts.ego  77: Push            65             stack[ 3]: [65, 66, 67], compiler.TestAssert(), M<assert>
[20210409144645] 482   TRACE  : (6)     arraycasts.ego  78: Push            66             stack[ 4]: 65, [65, 66, 67], compiler.TestAssert(), M<assert>
[20210409144645] 483   TRACE  : (6)     arraycasts.ego  79: Push            67             stack[ 5]: 66, 65, [65, 66, 67], compiler.TestAssert(), M<ass...
[20210409144645] 484   TRACE  : (6)     arraycasts.ego  80: Push            T(float)       stack[ 6]: 67, 66, 65, [65, 66, 67], compiler.TestAssert(), M...
[20210409144645] 485   TRACE  : (6)     arraycasts.ego  81: MakeArray       3              stack[ 7]: T(float), 67, 66, 65, [65, 66, 67], compiler.TestA...
[20210409144645] 486   TRACE  : (6)     arraycasts.ego  82: Equal                          stack[ 4]: [65, 66, 67], [65, 66, 67], compiler.TestAssert(),...
[20210409144645] 487   TRACE  : (6)     arraycasts.ego  83: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 488   TRACE  : (6)     arraycasts.ego  84: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 489   TRACE  : (6)     arraycasts.ego  85: AtLine          15             stack[ 0]: <empty>
[20210409144645] 490   TRACE  : (6)     arraycasts.ego  86: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 491   TRACE  : (6)     arraycasts.ego  87: Push            1              stack[ 1]: M<let>
[20210409144645] 492   TRACE  : (6)     arraycasts.ego  88: Push            5              stack[ 2]: 1, M<let>
[20210409144645] 493   TRACE  : (6)     arraycasts.ego  89: Push            0              stack[ 3]: 5, 1, M<let>
[20210409144645] 494   TRACE  : (6)     arraycasts.ego  90: Push            3              stack[ 4]: 0, 5, 1, M<let>
[20210409144645] 495   TRACE  : (6)     arraycasts.ego  91: Push            0              stack[ 5]: 3, 0, 5, 1, M<let>
[20210409144645] 496   TRACE  : (6)     arraycasts.ego  92: Push            T(int)         stack[ 6]: 0, 3, 0, 5, 1, M<let>
[20210409144645] 497   TRACE  : (6)     arraycasts.ego  93: MakeArray       5              stack[ 7]: T(int), 0, 3, 0, 5, 1, M<let>
[20210409144645] 498   TRACE  : (6)     arraycasts.ego  94: SymbolCreate    "a"            stack[ 2]: [1, 5, 0, 3, 0], M<let>
[20210409144645] 499   TRACE  : (6)     arraycasts.ego  95: Store           "a"            stack[ 2]: [1, 5, 0, 3, 0], M<let>
[20210409144645] 500   TRACE  : (6)     arraycasts.ego  96: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 501   TRACE  : (6)     arraycasts.ego  97: AtLine          16             stack[ 0]: <empty>
[20210409144645] 502   TRACE  : (6)     arraycasts.ego  98: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 503   TRACE  : (6)     arraycasts.ego  99: Push            T([]bool)      stack[ 1]: M<let>
[20210409144645] 504   TRACE  : (6)     arraycasts.ego 100: Load            "a"            stack[ 2]: T([]bool), M<let>
[20210409144645] 505   TRACE  : (6)     arraycasts.ego 101: Call            1              stack[ 3]: [1, 5, 0, 3, 0], T([]bool), M<let>
[20210409144645] 506   TRACE  : (6)     arraycasts.ego 102: SymbolCreate    "b"            stack[ 2]: [true, true, false, true, false], M<let>
[20210409144645] 507   TRACE  : (6)     arraycasts.ego 103: Store           "b"            stack[ 2]: [true, true, false, true, false], M<let>
[20210409144645] 508   TRACE  : (6)     arraycasts.ego 104: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 509   TRACE  : (6)     arraycasts.ego 105: AtLine          17             stack[ 0]: <empty>
[20210409144645] 510   TRACE  : (6)     arraycasts.ego 106: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 511   TRACE  : (6)     arraycasts.ego 107: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 512   TRACE  : (6)     arraycasts.ego 108: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 513   TRACE  : (6)     arraycasts.ego 109: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 514   TRACE  : (6)     arraycasts.ego 110: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 515   TRACE  : (6)     arraycasts.ego 111: Load            "b"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 516   TRACE  : (6)     arraycasts.ego 112: Call            1              stack[ 4]: [true, true, false, true, false], functions.Type()...
[20210409144645] 517   TRACE  : (6)     arraycasts.ego 113: Push            "[]bool"       stack[ 3]: []bool, compiler.TestAssert(), M<assert>
[20210409144645] 518   TRACE  : (6)     arraycasts.ego 114: Equal                          stack[ 4]: []bool, []bool, compiler.TestAssert(), M<assert>
[20210409144645] 519   TRACE  : (6)     arraycasts.ego 115: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 520   TRACE  : (6)     arraycasts.ego 116: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 521   TRACE  : (6)     arraycasts.ego 117: AtLine          18             stack[ 0]: <empty>
[20210409144645] 522   TRACE  : (6)     arraycasts.ego 118: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 523   TRACE  : (6)     arraycasts.ego 119: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 524   TRACE  : (6)     arraycasts.ego 120: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 525   TRACE  : (6)     arraycasts.ego 121: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 526   TRACE  : (6)     arraycasts.ego 122: Load            "b"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 527   TRACE  : (6)     arraycasts.ego 123: Push            true           stack[ 3]: [true, true, false, true, false], compiler.TestAss...
[20210409144645] 528   TRACE  : (6)     arraycasts.ego 124: Push            true           stack[ 4]: true, [true, true, false, true, false], compiler.T...
[20210409144645] 529   TRACE  : (6)     arraycasts.ego 125: Push            false          stack[ 5]: true, true, [true, true, false, true, false], comp...
[20210409144645] 530   TRACE  : (6)     arraycasts.ego 126: Push            true           stack[ 6]: false, true, true, [true, true, false, true, false...
[20210409144645] 531   TRACE  : (6)     arraycasts.ego 127: Push            false          stack[ 7]: true, false, true, true, [true, true, false, true,...
[20210409144645] 532   TRACE  : (6)     arraycasts.ego 128: Push            T(bool)        stack[ 8]: false, true, false, true, true, [true, true, false...
[20210409144645] 533   TRACE  : (6)     arraycasts.ego 129: MakeArray       5              stack[ 9]: T(bool), false, true, false, true, true, [true, tr...
[20210409144645] 534   TRACE  : (6)     arraycasts.ego 130: Equal                          stack[ 4]: [true, true, false, true, false], [true, true, fal...
[20210409144645] 535   TRACE  : (6)     arraycasts.ego 131: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 536   TRACE  : (6)     arraycasts.ego 132: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 537   TRACE  : (6)     arraycasts.ego 133: AtLine          21             stack[ 0]: <empty>
[20210409144645] 538   TRACE  : (6)     arraycasts.ego 134: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 539   TRACE  : (6)     arraycasts.ego 135: Load            "string"       stack[ 1]: M<let>
[20210409144645] 540   TRACE  : (6)     arraycasts.ego 136: Load            "i"            stack[ 2]: functions.String(), M<let>
[20210409144645] 541   TRACE  : (6)     arraycasts.ego 137: Call            1              stack[ 3]: [65, 66, 67], functions.String(), M<let>
[20210409144645] 542   TRACE  : (6)     arraycasts.ego 138: SymbolCreate    "s"            stack[ 2]: ABC, M<let>
[20210409144645] 543   TRACE  : (6)     arraycasts.ego 139: Store           "s"            stack[ 2]: ABC, M<let>
[20210409144645] 544   TRACE  : (6)     arraycasts.ego 140: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 545   TRACE  : (6)     arraycasts.ego 141: AtLine          22             stack[ 0]: <empty>
[20210409144645] 546   TRACE  : (6)     arraycasts.ego 142: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 547   TRACE  : (6)     arraycasts.ego 143: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 548   TRACE  : (6)     arraycasts.ego 144: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 549   TRACE  : (6)     arraycasts.ego 145: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 550   TRACE  : (6)     arraycasts.ego 146: Load            "s"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 551   TRACE  : (6)     arraycasts.ego 147: Push            "ABC"          stack[ 3]: ABC, compiler.TestAssert(), M<assert>
[20210409144645] 552   TRACE  : (6)     arraycasts.ego 148: Equal                          stack[ 4]: ABC, ABC, compiler.TestAssert(), M<assert>
[20210409144645] 553   TRACE  : (6)     arraycasts.ego 149: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 554   TRACE  : (6)     arraycasts.ego 150: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 555   TRACE  : (6)     arraycasts.ego 151: AtLine          23             stack[ 0]: <empty>
[20210409144645] 556   TRACE  : (6)     arraycasts.ego 152: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 557   TRACE  : (6)     arraycasts.ego 153: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 558   TRACE  : (6)     arraycasts.ego 154: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 559   TRACE  : (6)     arraycasts.ego 155: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: array type casti...
[20210409144645] 560   TRACE  : (6)     arraycasts.ego 156: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 561   TRACE  : (6)     arraycasts.ego 157: Load            "s"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 562   TRACE  : (6)     arraycasts.ego 158: Call            1              stack[ 4]: ABC, functions.Type(), compiler.TestAssert(), M<as...
[20210409144645] 563   TRACE  : (6)     arraycasts.ego 159: Push            "string"       stack[ 3]: string, compiler.TestAssert(), M<assert>
[20210409144645] 564   TRACE  : (6)     arraycasts.ego 160: Equal                          stack[ 4]: string, string, compiler.TestAssert(), M<assert>
[20210409144645] 565   TRACE  : (6)     arraycasts.ego 161: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 566   TRACE  : (6)     arraycasts.ego 162: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 567   TRACE  : (6)     arraycasts.ego 163: PopScope                       stack[ 0]: <empty>
[20210409144645] 568   TRACE  : (6)     arraycasts.ego 164: AtLine          25             stack[ 0]: <empty>
[20210409144645] 569   TRACE  : (6)     arraycasts.ego 165: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 570   TRACE  : (6)     arraycasts.ego 166: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 571   TRACE  : (6)     arraycasts.ego 167: Print                          stack[ 1]: (PASS)  
[20210409144645] 572   TRACE  : (6)     arraycasts.ego 168: Timer           1              stack[ 0]: <empty>
[20210409144645] 573   TRACE  : (6)     arraycasts.ego 169: Print                          stack[ 1]: 0.002s
[20210409144645] 574   TRACE  : (6)     arraycasts.ego 170: Say             true           stack[ 0]: <empty>
TEST: datamodel: array type casting                     (PASS)  0.002s
[20210409144645] 575   TRACE  : (6)     arraycasts.ego 171: Stop                           stack[ 0]: <empty>
[20210409144645] 576   TRACE  : *** Tracing base_constants.ego (7)  
[20210409144645] 577   TRACE  : (7) base_constants.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 578   TRACE  : (7) base_constants.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 579   TRACE  : (7) base_constants.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 580   TRACE  : (7) base_constants.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 581   TRACE  : (7) base_constants.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 582   TRACE  : (7) base_constants.ego   5: Push            Testing{ description: "datamodel: bin/octal/hex constants" } stack[ 0]: <empty>
[20210409144645] 583   TRACE  : (7) base_constants.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 584   TRACE  : (7) base_constants.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 585   TRACE  : (7) base_constants.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 586   TRACE  : (7) base_constants.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 587   TRACE  : (7) base_constants.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 588   TRACE  : (7) base_constants.ego  11: Print                          stack[ 1]: datamodel: bin/octal/hex constants
[20210409144645] 589   TRACE  : (7) base_constants.ego  12: Push            "                " stack[ 0]: <empty>
[20210409144645] 590   TRACE  : (7) base_constants.ego  13: Print                          stack[ 1]:                 
[20210409144645] 591   TRACE  : (7) base_constants.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 592   TRACE  : (7) base_constants.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 593   TRACE  : (7) base_constants.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 594   TRACE  : (7) base_constants.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 595   TRACE  : (7) base_constants.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 596   TRACE  : (7) base_constants.ego  19: Push            5              stack[ 1]: M<let>
[20210409144645] 597   TRACE  : (7) base_constants.ego  20: SymbolCreate    "b"            stack[ 2]: 5, M<let>
[20210409144645] 598   TRACE  : (7) base_constants.ego  21: Store           "b"            stack[ 2]: 5, M<let>
[20210409144645] 599   TRACE  : (7) base_constants.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 600   TRACE  : (7) base_constants.ego  23: AtLine          6              stack[ 0]: <empty>
[20210409144645] 601   TRACE  : (7) base_constants.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 602   TRACE  : (7) base_constants.ego  25: Push            255            stack[ 1]: M<let>
[20210409144645] 603   TRACE  : (7) base_constants.ego  26: SymbolCreate    "o"            stack[ 2]: 255, M<let>
[20210409144645] 604   TRACE  : (7) base_constants.ego  27: Store           "o"            stack[ 2]: 255, M<let>
[20210409144645] 605   TRACE  : (7) base_constants.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 606   TRACE  : (7) base_constants.ego  29: AtLine          7              stack[ 0]: <empty>
[20210409144645] 607   TRACE  : (7) base_constants.ego  30: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 608   TRACE  : (7) base_constants.ego  31: Push            65             stack[ 1]: M<let>
[20210409144645] 609   TRACE  : (7) base_constants.ego  32: SymbolCreate    "h"            stack[ 2]: 65, M<let>
[20210409144645] 610   TRACE  : (7) base_constants.ego  33: Store           "h"            stack[ 2]: 65, M<let>
[20210409144645] 611   TRACE  : (7) base_constants.ego  34: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 612   TRACE  : (7) base_constants.ego  35: AtLine          9              stack[ 0]: <empty>
[20210409144645] 613   TRACE  : (7) base_constants.ego  36: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 614   TRACE  : (7) base_constants.ego  37: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 615   TRACE  : (7) base_constants.ego  38: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 616   TRACE  : (7) base_constants.ego  39: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 617   TRACE  : (7) base_constants.ego  40: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 618   TRACE  : (7) base_constants.ego  41: SetThis                        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 619   TRACE  : (7) base_constants.ego  42: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 620   TRACE  : (7) base_constants.ego  43: Load            "b"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 621   TRACE  : (7) base_constants.ego  44: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 622   TRACE  : (7) base_constants.ego  45: Call            2              stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 623   TRACE  : (7) base_constants.ego  46: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 624   TRACE  : (7) base_constants.ego  47: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 625   TRACE  : (7) base_constants.ego  48: AtLine          10             stack[ 0]: <empty>
[20210409144645] 626   TRACE  : (7) base_constants.ego  49: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 627   TRACE  : (7) base_constants.ego  50: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 628   TRACE  : (7) base_constants.ego  51: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 629   TRACE  : (7) base_constants.ego  52: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 630   TRACE  : (7) base_constants.ego  53: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 631   TRACE  : (7) base_constants.ego  54: SetThis                        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 632   TRACE  : (7) base_constants.ego  55: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 633   TRACE  : (7) base_constants.ego  56: Load            "o"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 634   TRACE  : (7) base_constants.ego  57: Push            255            stack[ 4]: 255, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 635   TRACE  : (7) base_constants.ego  58: Call            2              stack[ 5]: 255, 255, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 636   TRACE  : (7) base_constants.ego  59: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 637   TRACE  : (7) base_constants.ego  60: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 638   TRACE  : (7) base_constants.ego  61: AtLine          11             stack[ 0]: <empty>
[20210409144645] 639   TRACE  : (7) base_constants.ego  62: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 640   TRACE  : (7) base_constants.ego  63: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 641   TRACE  : (7) base_constants.ego  64: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 642   TRACE  : (7) base_constants.ego  65: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 643   TRACE  : (7) base_constants.ego  66: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 644   TRACE  : (7) base_constants.ego  67: SetThis                        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 645   TRACE  : (7) base_constants.ego  68: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: bin/octal/hex co...
[20210409144645] 646   TRACE  : (7) base_constants.ego  69: Load            "h"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 647   TRACE  : (7) base_constants.ego  70: Push            65             stack[ 4]: 65, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 648   TRACE  : (7) base_constants.ego  71: Call            2              stack[ 5]: 65, 65, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 649   TRACE  : (7) base_constants.ego  72: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 650   TRACE  : (7) base_constants.ego  73: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 651   TRACE  : (7) base_constants.ego  74: PopScope                       stack[ 0]: <empty>
[20210409144645] 652   TRACE  : (7) base_constants.ego  75: AtLine          13             stack[ 0]: <empty>
[20210409144645] 653   TRACE  : (7) base_constants.ego  76: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 654   TRACE  : (7) base_constants.ego  77: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 655   TRACE  : (7) base_constants.ego  78: Print                          stack[ 1]: (PASS)  
[20210409144645] 656   TRACE  : (7) base_constants.ego  79: Timer           1              stack[ 0]: <empty>
[20210409144645] 657   TRACE  : (7) base_constants.ego  80: Print                          stack[ 1]: 0.733ms
[20210409144645] 658   TRACE  : (7) base_constants.ego  81: Say             true           stack[ 0]: <empty>
TEST: datamodel: bin/octal/hex constants                (PASS)  0.733ms
[20210409144645] 659   TRACE  : (7) base_constants.ego  82: Stop                           stack[ 0]: <empty>
[20210409144645] 660   TRACE  : *** Tracing blocks.ego (8)  
[20210409144645] 661   TRACE  : (8)         blocks.ego   0: AtLine          3              stack[ 0]: <empty>
[20210409144645] 662   TRACE  : (8)         blocks.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 663   TRACE  : (8)         blocks.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 664   TRACE  : (8)         blocks.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 665   TRACE  : (8)         blocks.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 666   TRACE  : (8)         blocks.ego   5: Push            Testing{ description: "datamodel: block scoping" } stack[ 0]: <empty>
[20210409144645] 667   TRACE  : (8)         blocks.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: block scoping" }
[20210409144645] 668   TRACE  : (8)         blocks.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 669   TRACE  : (8)         blocks.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 670   TRACE  : (8)         blocks.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 671   TRACE  : (8)         blocks.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: block scoping" }
[20210409144645] 672   TRACE  : (8)         blocks.ego  11: Print                          stack[ 1]: datamodel: block scoping
[20210409144645] 673   TRACE  : (8)         blocks.ego  12: Push            "                          " stack[ 0]: <empty>
[20210409144645] 674   TRACE  : (8)         blocks.ego  13: Print                          stack[ 1]:                           
[20210409144645] 675   TRACE  : (8)         blocks.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 676   TRACE  : (8)         blocks.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 677   TRACE  : (8)         blocks.ego  16: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 678   TRACE  : (8)         blocks.ego  17: Push            33             stack[ 1]: M<let>
[20210409144645] 679   TRACE  : (8)         blocks.ego  18: SymbolCreate    "g"            stack[ 2]: 33, M<let>
[20210409144645] 680   TRACE  : (8)         blocks.ego  19: Store           "g"            stack[ 2]: 33, M<let>
[20210409144645] 681   TRACE  : (8)         blocks.ego  20: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 682   TRACE  : (8)         blocks.ego  21: AtLine          7              stack[ 0]: <empty>
[20210409144645] 683   TRACE  : (8)         blocks.ego  22: PushScope                      stack[ 0]: <empty>
[20210409144645] 684   TRACE  : (8)         blocks.ego  23: AtLine          8              stack[ 0]: <empty>
[20210409144645] 685   TRACE  : (8)         blocks.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 686   TRACE  : (8)         blocks.ego  25: Push            42             stack[ 1]: M<let>
[20210409144645] 687   TRACE  : (8)         blocks.ego  26: SymbolCreate    "g"            stack[ 2]: 42, M<let>
[20210409144645] 688   TRACE  : (8)         blocks.ego  27: Store           "g"            stack[ 2]: 42, M<let>
[20210409144645] 689   TRACE  : (8)         blocks.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 690   TRACE  : (8)         blocks.ego  29: AtLine          9              stack[ 0]: <empty>
[20210409144645] 691   TRACE  : (8)         blocks.ego  30: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 692   TRACE  : (8)         blocks.ego  31: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 693   TRACE  : (8)         blocks.ego  32: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 694   TRACE  : (8)         blocks.ego  33: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 695   TRACE  : (8)         blocks.ego  34: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 696   TRACE  : (8)         blocks.ego  35: SetThis                        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 697   TRACE  : (8)         blocks.ego  36: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 698   TRACE  : (8)         blocks.ego  37: Load            "g"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 699   TRACE  : (8)         blocks.ego  38: Push            42             stack[ 4]: 42, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 700   TRACE  : (8)         blocks.ego  39: Push            "Did not find nested scope value" stack[ 5]: 42, 42, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 701   TRACE  : (8)         blocks.ego  40: Call            3              stack[ 6]: Did not find nested scope value, 42, 42, compiler....
[20210409144645] 702   TRACE  : (8)         blocks.ego  41: Call            1              stack[ 3]: [true Did not find nested scope value], compiler.T...
[20210409144645] 703   TRACE  : (8)         blocks.ego  42: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 704   TRACE  : (8)         blocks.ego  43: AtLine          11             stack[ 0]: <empty>
[20210409144645] 705   TRACE  : (8)         blocks.ego  44: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 706   TRACE  : (8)         blocks.ego  45: Push            3              stack[ 1]: M<let>
[20210409144645] 707   TRACE  : (8)         blocks.ego  46: Store           "g"            stack[ 2]: 3, M<let>
[20210409144645] 708   TRACE  : (8)         blocks.ego  47: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 709   TRACE  : (8)         blocks.ego  48: AtLine          12             stack[ 0]: <empty>
[20210409144645] 710   TRACE  : (8)         blocks.ego  49: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 711   TRACE  : (8)         blocks.ego  50: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 712   TRACE  : (8)         blocks.ego  51: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 713   TRACE  : (8)         blocks.ego  52: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 714   TRACE  : (8)         blocks.ego  53: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 715   TRACE  : (8)         blocks.ego  54: SetThis                        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 716   TRACE  : (8)         blocks.ego  55: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 717   TRACE  : (8)         blocks.ego  56: Load            "g"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 718   TRACE  : (8)         blocks.ego  57: Push            3              stack[ 4]: 3, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 719   TRACE  : (8)         blocks.ego  58: Push            "Did not assign local value" stack[ 5]: 3, 3, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 720   TRACE  : (8)         blocks.ego  59: Call            3              stack[ 6]: Did not assign local value, 3, 3, compiler.TestEqu...
[20210409144645] 721   TRACE  : (8)         blocks.ego  60: Call            1              stack[ 3]: [true Did not assign local value], compiler.TestAs...
[20210409144645] 722   TRACE  : (8)         blocks.ego  61: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 723   TRACE  : (8)         blocks.ego  62: PopScope                       stack[ 0]: <empty>
[20210409144645] 724   TRACE  : (8)         blocks.ego  63: AtLine          15             stack[ 0]: <empty>
[20210409144645] 725   TRACE  : (8)         blocks.ego  64: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 726   TRACE  : (8)         blocks.ego  65: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 727   TRACE  : (8)         blocks.ego  66: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 728   TRACE  : (8)         blocks.ego  67: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 729   TRACE  : (8)         blocks.ego  68: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 730   TRACE  : (8)         blocks.ego  69: SetThis                        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 731   TRACE  : (8)         blocks.ego  70: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: block scoping" }...
[20210409144645] 732   TRACE  : (8)         blocks.ego  71: Load            "g"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 733   TRACE  : (8)         blocks.ego  72: Push            33             stack[ 4]: 33, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 734   TRACE  : (8)         blocks.ego  73: Push            "Outer scope value not preserved" stack[ 5]: 33, 33, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 735   TRACE  : (8)         blocks.ego  74: Call            3              stack[ 6]: Outer scope value not preserved, 33, 33, compiler....
[20210409144645] 736   TRACE  : (8)         blocks.ego  75: Call            1              stack[ 3]: [true Outer scope value not preserved], compiler.T...
[20210409144645] 737   TRACE  : (8)         blocks.ego  76: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 738   TRACE  : (8)         blocks.ego  77: AtLine          16             stack[ 0]: <empty>
[20210409144645] 739   TRACE  : (8)         blocks.ego  78: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 740   TRACE  : (8)         blocks.ego  79: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 741   TRACE  : (8)         blocks.ego  80: Print                          stack[ 1]: (PASS)  
[20210409144645] 742   TRACE  : (8)         blocks.ego  81: Timer           1              stack[ 0]: <empty>
[20210409144645] 743   TRACE  : (8)         blocks.ego  82: Print                          stack[ 1]: 0.734ms
[20210409144645] 744   TRACE  : (8)         blocks.ego  83: Say             true           stack[ 0]: <empty>
TEST: datamodel: block scoping                          (PASS)  0.734ms
[20210409144645] 745   TRACE  : (8)         blocks.ego  84: Stop                           stack[ 0]: <empty>
[20210409144645] 746   TRACE  : *** Tracing nil_compares.ego (9)  
[20210409144645] 747   TRACE  : (9)   nil_compares.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 748   TRACE  : (9)   nil_compares.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 749   TRACE  : (9)   nil_compares.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 750   TRACE  : (9)   nil_compares.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 751   TRACE  : (9)   nil_compares.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 752   TRACE  : (9)   nil_compares.ego   5: Push            Testing{ description: "datamodel: nil value comparisons" } stack[ 0]: <empty>
[20210409144645] 753   TRACE  : (9)   nil_compares.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 754   TRACE  : (9)   nil_compares.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 755   TRACE  : (9)   nil_compares.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 756   TRACE  : (9)   nil_compares.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 757   TRACE  : (9)   nil_compares.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 758   TRACE  : (9)   nil_compares.ego  11: Print                          stack[ 1]: datamodel: nil value comparisons
[20210409144645] 759   TRACE  : (9)   nil_compares.ego  12: Push            "                  " stack[ 0]: <empty>
[20210409144645] 760   TRACE  : (9)   nil_compares.ego  13: Print                          stack[ 1]:                   
[20210409144645] 761   TRACE  : (9)   nil_compares.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 762   TRACE  : (9)   nil_compares.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 763   TRACE  : (9)   nil_compares.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 764   TRACE  : (9)   nil_compares.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 765   TRACE  : (9)   nil_compares.ego  18: Push                           stack[ 0]: <empty>
[20210409144645] 766   TRACE  : (9)   nil_compares.ego  19: SymbolCreate    "x"            stack[ 1]: <nil>
[20210409144645] 767   TRACE  : (9)   nil_compares.ego  20: Store           "x"            stack[ 1]: <nil>
[20210409144645] 768   TRACE  : (9)   nil_compares.ego  21: Push                           stack[ 0]: <empty>
[20210409144645] 769   TRACE  : (9)   nil_compares.ego  22: SymbolCreate    "y"            stack[ 1]: <nil>
[20210409144645] 770   TRACE  : (9)   nil_compares.ego  23: Store           "y"            stack[ 1]: <nil>
[20210409144645] 771   TRACE  : (9)   nil_compares.ego  24: AtLine          6              stack[ 0]: <empty>
[20210409144645] 772   TRACE  : (9)   nil_compares.ego  25: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 773   TRACE  : (9)   nil_compares.ego  26: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 774   TRACE  : (9)   nil_compares.ego  27: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 775   TRACE  : (9)   nil_compares.ego  28: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 776   TRACE  : (9)   nil_compares.ego  29: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 777   TRACE  : (9)   nil_compares.ego  30: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 778   TRACE  : (9)   nil_compares.ego  31: Member          "True"         stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 779   TRACE  : (9)   nil_compares.ego  32: Load            "x"            stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 780   TRACE  : (9)   nil_compares.ego  33: Load            "y"            stack[ 4]: <nil>, compiler.TestTrue(), compiler.TestAssert(),...
[20210409144645] 781   TRACE  : (9)   nil_compares.ego  34: Equal                          stack[ 5]: <nil>, <nil>, compiler.TestTrue(), compiler.TestAs...
[20210409144645] 782   TRACE  : (9)   nil_compares.ego  35: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 783   TRACE  : (9)   nil_compares.ego  36: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 784   TRACE  : (9)   nil_compares.ego  37: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 785   TRACE  : (9)   nil_compares.ego  38: AtLine          7              stack[ 0]: <empty>
[20210409144645] 786   TRACE  : (9)   nil_compares.ego  39: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 787   TRACE  : (9)   nil_compares.ego  40: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 788   TRACE  : (9)   nil_compares.ego  41: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 789   TRACE  : (9)   nil_compares.ego  42: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 790   TRACE  : (9)   nil_compares.ego  43: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 791   TRACE  : (9)   nil_compares.ego  44: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 792   TRACE  : (9)   nil_compares.ego  45: Member          "False"        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 793   TRACE  : (9)   nil_compares.ego  46: Load            "x"            stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144645] 794   TRACE  : (9)   nil_compares.ego  47: Load            "y"            stack[ 4]: <nil>, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 795   TRACE  : (9)   nil_compares.ego  48: NotEqual                       stack[ 5]: <nil>, <nil>, compiler.TestFalse(), compiler.TestA...
[20210409144645] 796   TRACE  : (9)   nil_compares.ego  49: Call            1              stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 797   TRACE  : (9)   nil_compares.ego  50: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 798   TRACE  : (9)   nil_compares.ego  51: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 799   TRACE  : (9)   nil_compares.ego  52: AtLine          8              stack[ 0]: <empty>
[20210409144645] 800   TRACE  : (9)   nil_compares.ego  53: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 801   TRACE  : (9)   nil_compares.ego  54: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 802   TRACE  : (9)   nil_compares.ego  55: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 803   TRACE  : (9)   nil_compares.ego  56: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 804   TRACE  : (9)   nil_compares.ego  57: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 805   TRACE  : (9)   nil_compares.ego  58: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 806   TRACE  : (9)   nil_compares.ego  59: Member          "True"         stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 807   TRACE  : (9)   nil_compares.ego  60: Push            3              stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 808   TRACE  : (9)   nil_compares.ego  61: Push                           stack[ 4]: 3, compiler.TestTrue(), compiler.TestAssert(), M<a...
[20210409144645] 809   TRACE  : (9)   nil_compares.ego  62: NotEqual                       stack[ 5]: <nil>, 3, compiler.TestTrue(), compiler.TestAssert...
[20210409144645] 810   TRACE  : (9)   nil_compares.ego  63: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 811   TRACE  : (9)   nil_compares.ego  64: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 812   TRACE  : (9)   nil_compares.ego  65: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 813   TRACE  : (9)   nil_compares.ego  66: AtLine          9              stack[ 0]: <empty>
[20210409144645] 814   TRACE  : (9)   nil_compares.ego  67: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 815   TRACE  : (9)   nil_compares.ego  68: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 816   TRACE  : (9)   nil_compares.ego  69: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 817   TRACE  : (9)   nil_compares.ego  70: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 818   TRACE  : (9)   nil_compares.ego  71: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 819   TRACE  : (9)   nil_compares.ego  72: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 820   TRACE  : (9)   nil_compares.ego  73: Member          "True"         stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 821   TRACE  : (9)   nil_compares.ego  74: Push                           stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 822   TRACE  : (9)   nil_compares.ego  75: Push            3              stack[ 4]: <nil>, compiler.TestTrue(), compiler.TestAssert(),...
[20210409144645] 823   TRACE  : (9)   nil_compares.ego  76: NotEqual                       stack[ 5]: 3, <nil>, compiler.TestTrue(), compiler.TestAssert...
[20210409144645] 824   TRACE  : (9)   nil_compares.ego  77: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 825   TRACE  : (9)   nil_compares.ego  78: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 826   TRACE  : (9)   nil_compares.ego  79: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 827   TRACE  : (9)   nil_compares.ego  80: AtLine          10             stack[ 0]: <empty>
[20210409144645] 828   TRACE  : (9)   nil_compares.ego  81: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 829   TRACE  : (9)   nil_compares.ego  82: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 830   TRACE  : (9)   nil_compares.ego  83: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 831   TRACE  : (9)   nil_compares.ego  84: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 832   TRACE  : (9)   nil_compares.ego  85: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 833   TRACE  : (9)   nil_compares.ego  86: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 834   TRACE  : (9)   nil_compares.ego  87: Member          "False"        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 835   TRACE  : (9)   nil_compares.ego  88: Load            "x"            stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144645] 836   TRACE  : (9)   nil_compares.ego  89: Push                           stack[ 4]: <nil>, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 837   TRACE  : (9)   nil_compares.ego  90: NotEqual                       stack[ 5]: <nil>, <nil>, compiler.TestFalse(), compiler.TestA...
[20210409144645] 838   TRACE  : (9)   nil_compares.ego  91: Call            1              stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 839   TRACE  : (9)   nil_compares.ego  92: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 840   TRACE  : (9)   nil_compares.ego  93: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 841   TRACE  : (9)   nil_compares.ego  94: AtLine          12             stack[ 0]: <empty>
[20210409144645] 842   TRACE  : (9)   nil_compares.ego  95: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 843   TRACE  : (9)   nil_compares.ego  96: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 844   TRACE  : (9)   nil_compares.ego  97: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 845   TRACE  : (9)   nil_compares.ego  98: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 846   TRACE  : (9)   nil_compares.ego  99: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 847   TRACE  : (9)   nil_compares.ego 100: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 848   TRACE  : (9)   nil_compares.ego 101: Member          "True"         stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 849   TRACE  : (9)   nil_compares.ego 102: Push                           stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 850   TRACE  : (9)   nil_compares.ego 103: Push                           stack[ 4]: <nil>, compiler.TestTrue(), compiler.TestAssert(),...
[20210409144645] 851   TRACE  : (9)   nil_compares.ego 104: Equal                          stack[ 5]: <nil>, <nil>, compiler.TestTrue(), compiler.TestAs...
[20210409144645] 852   TRACE  : (9)   nil_compares.ego 105: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 853   TRACE  : (9)   nil_compares.ego 106: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 854   TRACE  : (9)   nil_compares.ego 107: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 855   TRACE  : (9)   nil_compares.ego 108: AtLine          13             stack[ 0]: <empty>
[20210409144645] 856   TRACE  : (9)   nil_compares.ego 109: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 857   TRACE  : (9)   nil_compares.ego 110: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 858   TRACE  : (9)   nil_compares.ego 111: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 859   TRACE  : (9)   nil_compares.ego 112: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 860   TRACE  : (9)   nil_compares.ego 113: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 861   TRACE  : (9)   nil_compares.ego 114: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 862   TRACE  : (9)   nil_compares.ego 115: Member          "False"        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 863   TRACE  : (9)   nil_compares.ego 116: Push                           stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144645] 864   TRACE  : (9)   nil_compares.ego 117: Push                           stack[ 4]: <nil>, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 865   TRACE  : (9)   nil_compares.ego 118: NotEqual                       stack[ 5]: <nil>, <nil>, compiler.TestFalse(), compiler.TestA...
[20210409144645] 866   TRACE  : (9)   nil_compares.ego 119: Call            1              stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 867   TRACE  : (9)   nil_compares.ego 120: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 868   TRACE  : (9)   nil_compares.ego 121: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 869   TRACE  : (9)   nil_compares.ego 122: AtLine          15             stack[ 0]: <empty>
[20210409144645] 870   TRACE  : (9)   nil_compares.ego 123: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 871   TRACE  : (9)   nil_compares.ego 124: Push                           stack[ 1]: M<let>
[20210409144645] 872   TRACE  : (9)   nil_compares.ego 125: Store           "x"            stack[ 2]: <nil>, M<let>
[20210409144645] 873   TRACE  : (9)   nil_compares.ego 126: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 874   TRACE  : (9)   nil_compares.ego 127: AtLine          16             stack[ 0]: <empty>
[20210409144645] 875   TRACE  : (9)   nil_compares.ego 128: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 876   TRACE  : (9)   nil_compares.ego 129: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 877   TRACE  : (9)   nil_compares.ego 130: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 878   TRACE  : (9)   nil_compares.ego 131: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 879   TRACE  : (9)   nil_compares.ego 132: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 880   TRACE  : (9)   nil_compares.ego 133: SetThis                        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 881   TRACE  : (9)   nil_compares.ego 134: Member          "False"        stack[ 3]: Testing{ description: "datamodel: nil value compar...
[20210409144645] 882   TRACE  : (9)   nil_compares.ego 135: Load            "x"            stack[ 3]: compiler.TestFalse(), compiler.TestAssert(), M<ass...
[20210409144645] 883   TRACE  : (9)   nil_compares.ego 136: Push                           stack[ 4]: <nil>, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 884   TRACE  : (9)   nil_compares.ego 137: NotEqual                       stack[ 5]: <nil>, <nil>, compiler.TestFalse(), compiler.TestA...
[20210409144645] 885   TRACE  : (9)   nil_compares.ego 138: Call            1              stack[ 4]: false, compiler.TestFalse(), compiler.TestAssert()...
[20210409144645] 886   TRACE  : (9)   nil_compares.ego 139: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 887   TRACE  : (9)   nil_compares.ego 140: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 888   TRACE  : (9)   nil_compares.ego 141: PopScope                       stack[ 0]: <empty>
[20210409144645] 889   TRACE  : (9)   nil_compares.ego 142: AtLine          19             stack[ 0]: <empty>
[20210409144645] 890   TRACE  : (9)   nil_compares.ego 143: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 891   TRACE  : (9)   nil_compares.ego 144: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 892   TRACE  : (9)   nil_compares.ego 145: Print                          stack[ 1]: (PASS)  
[20210409144645] 893   TRACE  : (9)   nil_compares.ego 146: Timer           1              stack[ 0]: <empty>
[20210409144645] 894   TRACE  : (9)   nil_compares.ego 147: Print                          stack[ 1]: 0.001s
[20210409144645] 895   TRACE  : (9)   nil_compares.ego 148: Say             true           stack[ 0]: <empty>
TEST: datamodel: nil value comparisons                  (PASS)  0.001s
[20210409144645] 896   TRACE  : (9)   nil_compares.ego 149: Stop                           stack[ 0]: <empty>
[20210409144645] 897   TRACE  : *** Tracing readonlyfn.ego (10)  
[20210409144645] 898   TRACE  : (10)     readonlyfn.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 899   TRACE  : (10)     readonlyfn.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 900   TRACE  : (10)     readonlyfn.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 901   TRACE  : (10)     readonlyfn.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 902   TRACE  : (10)     readonlyfn.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 903   TRACE  : (10)     readonlyfn.ego   5: Push            Testing{ description: "datamodel: write to readonly function value" } stack[ 0]: <empty>
[20210409144645] 904   TRACE  : (10)     readonlyfn.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: write to readonl...
[20210409144645] 905   TRACE  : (10)     readonlyfn.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 906   TRACE  : (10)     readonlyfn.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 907   TRACE  : (10)     readonlyfn.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 908   TRACE  : (10)     readonlyfn.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: write to readonl...
[20210409144645] 909   TRACE  : (10)     readonlyfn.ego  11: Print                          stack[ 1]: datamodel: write to readonly function value
[20210409144645] 910   TRACE  : (10)     readonlyfn.ego  12: Push            "       "      stack[ 0]: <empty>
[20210409144645] 911   TRACE  : (10)     readonlyfn.ego  13: Print                          stack[ 1]:        
[20210409144645] 912   TRACE  : (10)     readonlyfn.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 913   TRACE  : (10)     readonlyfn.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 914   TRACE  : (10)     readonlyfn.ego  16: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 915   TRACE  : (10)     readonlyfn.ego  17: Push            false          stack[ 1]: M<let>
[20210409144645] 916   TRACE  : (10)     readonlyfn.ego  18: SymbolCreate    "caught"       stack[ 2]: false, M<let>
[20210409144645] 917   TRACE  : (10)     readonlyfn.ego  19: Store           "caught"       stack[ 2]: false, M<let>
[20210409144645] 918   TRACE  : (10)     readonlyfn.ego  20: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 919   TRACE  : (10)     readonlyfn.ego  21: AtLine          5              stack[ 0]: <empty>
[20210409144645] 920   TRACE  : (10)     readonlyfn.ego  22: Try             @32            stack[ 0]: <empty>
[20210409144645] 921   TRACE  : (10)     readonlyfn.ego  23: AtLine          5              stack[ 0]: <empty>
[20210409144645] 922   TRACE  : (10)     readonlyfn.ego  24: PushScope                      stack[ 0]: <empty>
[20210409144645] 923   TRACE  : (10)     readonlyfn.ego  25: AtLine          6              stack[ 0]: <empty>
[20210409144645] 924   TRACE  : (10)     readonlyfn.ego  26: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 925   TRACE  : (10)     readonlyfn.ego  27: Push            33             stack[ 1]: M<let>
[20210409144645] 926   TRACE  : (10)     readonlyfn.ego  28: Store           "len"          stack[ 2]: 33, M<let>
[20210409144645] 927   TRACE  : (10)  *** Branch to 32 on error: at readonlyfn.ego(line 6), unknown symbol: len
[20210409144645] 928   TRACE  : (10)     readonlyfn.ego  32: AtLine          7              stack[ 1]: M<let>
[20210409144645] 929   TRACE  : (10)     readonlyfn.ego  33: PushScope                      stack[ 1]: M<let>
[20210409144645] 930   TRACE  : (10)     readonlyfn.ego  34: AtLine          8              stack[ 1]: M<let>
[20210409144645] 931   TRACE  : (10)     readonlyfn.ego  35: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 932   TRACE  : (10)     readonlyfn.ego  36: Push            true           stack[ 2]: M<let>, M<let>
[20210409144645] 933   TRACE  : (10)     readonlyfn.ego  37: Store           "caught"       stack[ 3]: true, M<let>, M<let>
[20210409144645] 934   TRACE  : (10)     readonlyfn.ego  38: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 935   TRACE  : (10)     readonlyfn.ego  39: PopScope                       stack[ 1]: M<let>
[20210409144645] 936   TRACE  : (10)     readonlyfn.ego  40: PopScope                       stack[ 1]: M<let>
[20210409144645] 937   TRACE  : (10)     readonlyfn.ego  41: TryPop                         stack[ 1]: M<let>
[20210409144645] 938   TRACE  : (10)     readonlyfn.ego  42: AtLine          10             stack[ 1]: M<let>
[20210409144645] 939   TRACE  : (10)     readonlyfn.ego  43: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 940   TRACE  : (10)     readonlyfn.ego  44: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 941   TRACE  : (10)     readonlyfn.ego  45: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 942   TRACE  : (10)     readonlyfn.ego  46: Member          "assert"       stack[ 3]: Testing{ description: "datamodel: write to readonl...
[20210409144645] 943   TRACE  : (10)     readonlyfn.ego  47: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 944   TRACE  : (10)     readonlyfn.ego  48: SetThis                        stack[ 4]: Testing{ description: "datamodel: write to readonl...
[20210409144645] 945   TRACE  : (10)     readonlyfn.ego  49: Member          "True"         stack[ 4]: Testing{ description: "datamodel: write to readonl...
[20210409144645] 946   TRACE  : (10)     readonlyfn.ego  50: Load            "caught"       stack[ 4]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 947   TRACE  : (10)     readonlyfn.ego  51: Call            1              stack[ 5]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 948   TRACE  : (10)     readonlyfn.ego  52: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 949   TRACE  : (10)     readonlyfn.ego  53: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 950   TRACE  : (10)     readonlyfn.ego  54: AtLine          11             stack[ 1]: M<let>
[20210409144645] 951   TRACE  : (10)     readonlyfn.ego  55: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 952   TRACE  : (10)     readonlyfn.ego  56: Push            "(PASS)  "     stack[ 1]: M<let>
[20210409144645] 953   TRACE  : (10)     readonlyfn.ego  57: Print                          stack[ 2]: (PASS)  , M<let>
[20210409144645] 954   TRACE  : (10)     readonlyfn.ego  58: Timer           1              stack[ 1]: M<let>
[20210409144645] 955   TRACE  : (10)     readonlyfn.ego  59: Print                          stack[ 2]: 0.400ms, M<let>
[20210409144645] 956   TRACE  : (10)     readonlyfn.ego  60: Say             true           stack[ 1]: M<let>
TEST: datamodel: write to readonly function value       (PASS)  0.400ms
[20210409144645] 957   TRACE  : (10)     readonlyfn.ego  61: Stop                           stack[ 1]: M<let>
[20210409144645] 958   TRACE  : *** Tracing returns.ego (11)  
[20210409144645] 959   TRACE  : (11)        returns.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 960   TRACE  : (11)        returns.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 961   TRACE  : (11)        returns.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 962   TRACE  : (11)        returns.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 963   TRACE  : (11)        returns.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 964   TRACE  : (11)        returns.ego   5: Push            Testing{ description: "datamodel: return multiple function values" } stack[ 0]: <empty>
[20210409144645] 965   TRACE  : (11)        returns.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 966   TRACE  : (11)        returns.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 967   TRACE  : (11)        returns.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 968   TRACE  : (11)        returns.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 969   TRACE  : (11)        returns.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 970   TRACE  : (11)        returns.ego  11: Print                          stack[ 1]: datamodel: return multiple function values
[20210409144645] 971   TRACE  : (11)        returns.ego  12: Push            "        "     stack[ 0]: <empty>
[20210409144645] 972   TRACE  : (11)        returns.ego  13: Print                          stack[ 1]:         
[20210409144645] 973   TRACE  : (11)        returns.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 974   TRACE  : (11)        returns.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 975   TRACE  : (11)        returns.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 976   TRACE  : (11)        returns.ego  17: Push            f()            stack[ 0]: <empty>
[20210409144645] 977   TRACE  : (11)        returns.ego  18: StoreAlways     "f"            stack[ 1]: f()
[20210409144645] 978   TRACE  : (11)        returns.ego  19: AtLine          8              stack[ 0]: <empty>
[20210409144645] 979   TRACE  : (11)        returns.ego  20: Load            "f"            stack[ 0]: <empty>
[20210409144645] 980   TRACE  : (11)        returns.ego  21: Call            0              stack[ 1]: f()
[20210409144645] 981   TRACE  : (11)                  f   0: ArgCheck        [0 0 f]        stack[ 1]: F<returns.ego:8>
[20210409144645] 982   TRACE  : (11)                  f   1: AtLine          4              stack[ 1]: F<returns.ego:8>
[20210409144645] 983   TRACE  : (11)                  f   2: PushScope                      stack[ 1]: F<returns.ego:8>
[20210409144645] 984   TRACE  : (11)                  f   3: AtLine          5              stack[ 1]: F<returns.ego:8>
[20210409144645] 985   TRACE  : (11)                  f   4: Push            M<f(),2]>      stack[ 1]: F<returns.ego:8>
[20210409144645] 986   TRACE  : (11)                  f   5: Push            "66"           stack[ 2]: M<f(),2]>, F<returns.ego:8>
[20210409144645] 987   TRACE  : (11)                  f   6: Coerce          T(int)         stack[ 3]: 66, M<f(),2]>, F<returns.ego:8>
[20210409144645] 988   TRACE  : (11)                  f   7: Push            55             stack[ 3]: 66, M<f(),2]>, F<returns.ego:8>
[20210409144645] 989   TRACE  : (11)                  f   8: Coerce          T(int)         stack[ 4]: 55, 66, M<f(),2]>, F<returns.ego:8>
[20210409144645] 990   TRACE  : (11)                  f   9: Return          true           stack[ 4]: 55, 66, M<f(),2]>, F<returns.ego:8>
[20210409144645] 991   TRACE  : (11)        returns.ego  22: StackCheck      2              stack[ 3]: 55, 66, M<f(),2]>
[20210409144645] 992   TRACE  : (11)        returns.ego  23: SymbolOptCreate "a"            stack[ 3]: 55, 66, M<f(),2]>
[20210409144645] 993   TRACE  : (11)        returns.ego  24: Store           "a"            stack[ 3]: 55, 66, M<f(),2]>
[20210409144645] 994   TRACE  : (11)        returns.ego  25: SymbolOptCreate "b"            stack[ 2]: 66, M<f(),2]>
[20210409144645] 995   TRACE  : (11)        returns.ego  26: Store           "b"            stack[ 2]: 66, M<f(),2]>
[20210409144645] 996   TRACE  : (11)        returns.ego  27: DropToMarker                   stack[ 1]: M<f(),2]>
[20210409144645] 997   TRACE  : (11)        returns.ego  28: AtLine          9              stack[ 0]: <empty>
[20210409144645] 998   TRACE  : (11)        returns.ego  29: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 999   TRACE  : (11)        returns.ego  30: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 1000  TRACE  : (11)        returns.ego  31: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 1001  TRACE  : (11)        returns.ego  32: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1002  TRACE  : (11)        returns.ego  33: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 1003  TRACE  : (11)        returns.ego  34: SetThis                        stack[ 3]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1004  TRACE  : (11)        returns.ego  35: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1005  TRACE  : (11)        returns.ego  36: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1006  TRACE  : (11)        returns.ego  37: Push            55             stack[ 4]: 55, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 1007  TRACE  : (11)        returns.ego  38: Call            2              stack[ 5]: 55, 55, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 1008  TRACE  : (11)        returns.ego  39: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 1009  TRACE  : (11)        returns.ego  40: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 1010  TRACE  : (11)        returns.ego  41: AtLine          10             stack[ 0]: <empty>
[20210409144645] 1011  TRACE  : (11)        returns.ego  42: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1012  TRACE  : (11)        returns.ego  43: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 1013  TRACE  : (11)        returns.ego  44: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 1014  TRACE  : (11)        returns.ego  45: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1015  TRACE  : (11)        returns.ego  46: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 1016  TRACE  : (11)        returns.ego  47: SetThis                        stack[ 3]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1017  TRACE  : (11)        returns.ego  48: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: return multiple ...
[20210409144645] 1018  TRACE  : (11)        returns.ego  49: Load            "b"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1019  TRACE  : (11)        returns.ego  50: Push            66             stack[ 4]: 66, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 1020  TRACE  : (11)        returns.ego  51: Call            2              stack[ 5]: 66, 66, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 1021  TRACE  : (11)        returns.ego  52: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 1022  TRACE  : (11)        returns.ego  53: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 1023  TRACE  : (11)        returns.ego  54: PopScope                       stack[ 0]: <empty>
[20210409144645] 1024  TRACE  : (11)        returns.ego  55: AtLine          13             stack[ 0]: <empty>
[20210409144645] 1025  TRACE  : (11)        returns.ego  56: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1026  TRACE  : (11)        returns.ego  57: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 1027  TRACE  : (11)        returns.ego  58: Print                          stack[ 1]: (PASS)  
[20210409144645] 1028  TRACE  : (11)        returns.ego  59: Timer           1              stack[ 0]: <empty>
[20210409144645] 1029  TRACE  : (11)        returns.ego  60: Print                          stack[ 1]: 0.564ms
[20210409144645] 1030  TRACE  : (11)        returns.ego  61: Say             true           stack[ 0]: <empty>
TEST: datamodel: return multiple function values        (PASS)  0.564ms
[20210409144645] 1031  TRACE  : (11)        returns.ego  62: Stop                           stack[ 0]: <empty>
[20210409144645] 1032  TRACE  : *** Tracing sieve.ego (12)  
[20210409144645] 1033  TRACE  : (12)          sieve.ego   0: AtLine          3              stack[ 0]: <empty>
[20210409144645] 1034  TRACE  : (12)          sieve.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1035  TRACE  : (12)          sieve.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 1036  TRACE  : (12)          sieve.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1037  TRACE  : (12)          sieve.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1038  TRACE  : (12)          sieve.ego   5: Push            Testing{ description: "datamodel: seive test" } stack[ 0]: <empty>
[20210409144645] 1039  TRACE  : (12)          sieve.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: seive test" }
[20210409144645] 1040  TRACE  : (12)          sieve.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 1041  TRACE  : (12)          sieve.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 1042  TRACE  : (12)          sieve.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 1043  TRACE  : (12)          sieve.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: seive test" }
[20210409144645] 1044  TRACE  : (12)          sieve.ego  11: Print                          stack[ 1]: datamodel: seive test
[20210409144645] 1045  TRACE  : (12)          sieve.ego  12: Push            "                             " stack[ 0]: <empty>
[20210409144645] 1046  TRACE  : (12)          sieve.ego  13: Print                          stack[ 1]:                              
[20210409144645] 1047  TRACE  : (12)          sieve.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 1048  TRACE  : (12)          sieve.ego  15: Push            primes()       stack[ 0]: <empty>
[20210409144645] 1049  TRACE  : (12)          sieve.ego  16: StoreAlways     "primes"       stack[ 1]: primes()
[20210409144645] 1050  TRACE  : (12)          sieve.ego  17: AtLine          33             stack[ 0]: <empty>
[20210409144645] 1051  TRACE  : (12)          sieve.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 1052  TRACE  : (12)          sieve.ego  19: Load            "primes"       stack[ 1]: M<let>
[20210409144645] 1053  TRACE  : (12)          sieve.ego  20: Push            10             stack[ 2]: primes(), M<let>
[20210409144645] 1054  TRACE  : (12)          sieve.ego  21: Call            1              stack[ 3]: 10, primes(), M<let>
[20210409144645] 1055  TRACE  : (12)             primes   0: ArgCheck        [1 1 primes]   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1056  TRACE  : (12)             primes   1: Load            "__args"       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1057  TRACE  : (12)             primes   2: LoadIndex       0              stack[ 3]: [10], F<sieve.ego:33>, M<let>
[20210409144645] 1058  TRACE  : (12)             primes   3: RequiredType    T(int)         stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1059  TRACE  : (12)             primes   4: StoreAlways     "size"         stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1060  TRACE  : (12)             primes   5: AtLine          5              stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1061  TRACE  : (12)             primes   6: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1062  TRACE  : (12)             primes   7: AtLine          7              stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1063  TRACE  : (12)             primes   8: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1064  TRACE  : (12)             primes   9: Load            "make"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1065  TRACE  : (12)             primes  10: Push            []             stack[ 4]: functions.Make(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1066  TRACE  : (12)             primes  11: Load            "size"         stack[ 5]: [], functions.Make(), M<let>, F<sieve.ego:33>, M<l...
[20210409144645] 1067  TRACE  : (12)             primes  12: Push            1              stack[ 6]: 10, [], functions.Make(), M<let>, F<sieve.ego:33>,...
[20210409144645] 1068  TRACE  : (12)             primes  13: Add                            stack[ 7]: 1, 10, [], functions.Make(), M<let>, F<sieve.ego:3...
[20210409144645] 1069  TRACE  : (12)             primes  14: Call            2              stack[ 6]: 11, [], functions.Make(), M<let>, F<sieve.ego:33>,...
[20210409144645] 1070  TRACE  : (12)             primes  15: SymbolCreate    "t"            stack[ 4]: [false, false, false, false, false, false, false, ...
[20210409144645] 1071  TRACE  : (12)             primes  16: Store           "t"            stack[ 4]: [false, false, false, false, false, false, false, ...
[20210409144645] 1072  TRACE  : (12)             primes  17: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1073  TRACE  : (12)             primes  18: AtLine          8              stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1074  TRACE  : (12)             primes  19: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1075  TRACE  : (12)             primes  20: Load            "make"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1076  TRACE  : (12)             primes  21: Push            []             stack[ 4]: functions.Make(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1077  TRACE  : (12)             primes  22: Push            0              stack[ 5]: [], functions.Make(), M<let>, F<sieve.ego:33>, M<l...
[20210409144645] 1078  TRACE  : (12)             primes  23: Call            2              stack[ 6]: 0, [], functions.Make(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1079  TRACE  : (12)             primes  24: SymbolCreate    "r"            stack[ 4]: [], M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1080  TRACE  : (12)             primes  25: Store           "r"            stack[ 4]: [], M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1081  TRACE  : (12)             primes  26: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1082  TRACE  : (12)             primes  27: AtLine          10             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1083  TRACE  : (12)             primes  28: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1084  TRACE  : (12)             primes  29: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1085  TRACE  : (12)             primes  30: Push            2              stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1086  TRACE  : (12)             primes  31: SymbolCreate    "p"            stack[ 4]: 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1087  TRACE  : (12)             primes  32: Store           "p"            stack[ 4]: 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1088  TRACE  : (12)             primes  33: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1089  TRACE  : (12)             primes  34: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1090  TRACE  : (12)             primes  35: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1091  TRACE  : (12)             primes  36: Load            "size"         stack[ 4]: 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1092  TRACE  : (12)             primes  37: LTEQ                           stack[ 5]: 10, 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1093  TRACE  : (12)             primes  38: BranchFalse     @154           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1094  TRACE  : (12)             primes  39: AtLine          10             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1095  TRACE  : (12)             primes  40: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1096  TRACE  : (12)             primes  41: AtLine          12             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1097  TRACE  : (12)             primes  42: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1098  TRACE  : (12)             primes  43: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1099  TRACE  : (12)             primes  44: Load            "p"            stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1100  TRACE  : (12)             primes  45: SymbolCreate    "n"            stack[ 5]: 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1101  TRACE  : (12)             primes  46: Store           "n"            stack[ 5]: 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1102  TRACE  : (12)             primes  47: DropToMarker    M<let>         stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1103  TRACE  : (12)             primes  48: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1104  TRACE  : (12)             primes  49: Load            "n"            stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1105  TRACE  : (12)             primes  50: Load            "size"         stack[ 5]: 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1106  TRACE  : (12)             primes  51: LTEQ                           stack[ 6]: 10, 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1107  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 5]: true, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1108  TRACE  : (12)             primes  53: AtLine          12             stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1109  TRACE  : (12)             primes  54: PushScope                      stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1110  TRACE  : (12)             primes  55: AtLine          13             stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1111  TRACE  : (12)             primes  56: Push            M<let>         stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1112  TRACE  : (12)             primes  57: Push            true           stack[ 5]: M<let>, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1113  TRACE  : (12)             primes  58: Load            "t"            stack[ 6]: true, M<let>, M<let>, M<let>, F<sieve.ego:33>, M<l...
[20210409144645] 1114  TRACE  : (12)             primes  59: Load            "n"            stack[ 7]: [false, false, false, false, false, false, false, ...
[20210409144645] 1115  TRACE  : (12)             primes  60: StoreIndex                     stack[ 8]: 2, [false, false, false, false, false, false, fals...
[20210409144645] 1116  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 6]: [false, false, true, false, false, false, false, f...
[20210409144645] 1117  TRACE  : (12)             primes  62: PopScope                       stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1118  TRACE  : (12)             primes  63: Load            "n"            stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1119  TRACE  : (12)             primes  64: Load            "p"            stack[ 5]: 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1120  TRACE  : (12)             primes  65: Add                            stack[ 6]: 2, 2, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1121  TRACE  : (12)             primes  66: Store           "n"            stack[ 5]: 4, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1122  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1123  TRACE  : (12)             primes  68: Branch          @49            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1124  TRACE  : (12)             primes  49: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1125  TRACE  : (12)             primes  50: Load            "size"         stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1126  TRACE  : (12)             primes  51: LTEQ                           stack[ 5]: 10, 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1127  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1128  TRACE  : (12)             primes  53: AtLine          12             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1129  TRACE  : (12)             primes  54: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1130  TRACE  : (12)             primes  55: AtLine          13             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1131  TRACE  : (12)             primes  56: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1132  TRACE  : (12)             primes  57: Push            true           stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1133  TRACE  : (12)             primes  58: Load            "t"            stack[ 5]: true, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1134  TRACE  : (12)             primes  59: Load            "n"            stack[ 6]: [false, false, true, false, false, false, false, f...
[20210409144645] 1135  TRACE  : (12)             primes  60: StoreIndex                     stack[ 7]: 4, [false, false, true, false, false, false, false...
[20210409144645] 1136  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 5]: [false, false, true, false, true, false, false, fa...
[20210409144645] 1137  TRACE  : (12)             primes  62: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1138  TRACE  : (12)             primes  63: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1139  TRACE  : (12)             primes  64: Load            "p"            stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1140  TRACE  : (12)             primes  65: Add                            stack[ 5]: 2, 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1141  TRACE  : (12)             primes  66: Store           "n"            stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1142  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1143  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1144  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1145  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 6, F<sieve.ego:33>, M<let>
[20210409144645] 1146  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 6, F<sieve.ego:33>, M<let>
[20210409144645] 1147  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1148  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1149  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1150  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1151  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1152  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1153  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1154  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, false, true, false, false, fa...
[20210409144645] 1155  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 6, [false, false, true, false, true, false, false,...
[20210409144645] 1156  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1157  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1158  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1159  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 6, F<sieve.ego:33>, M<let>
[20210409144645] 1160  TRACE  : (12)             primes  65: Add                            stack[ 4]: 2, 6, F<sieve.ego:33>, M<let>
[20210409144645] 1161  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 8, F<sieve.ego:33>, M<let>
[20210409144645] 1162  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1163  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1164  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1165  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 8, F<sieve.ego:33>, M<let>
[20210409144645] 1166  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 8, F<sieve.ego:33>, M<let>
[20210409144645] 1167  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1168  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1169  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1170  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1171  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1172  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1173  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1174  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1175  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 8, [false, false, true, false, true, false, true, ...
[20210409144645] 1176  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1177  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1178  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1179  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 8, F<sieve.ego:33>, M<let>
[20210409144645] 1180  TRACE  : (12)             primes  65: Add                            stack[ 4]: 2, 8, F<sieve.ego:33>, M<let>
[20210409144645] 1181  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1182  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1183  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1184  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1185  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1186  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1187  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1188  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1189  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1190  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1191  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1192  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1193  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1194  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1195  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 10, [false, false, true, false, true, false, true,...
[20210409144645] 1196  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1197  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1198  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1199  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1200  TRACE  : (12)             primes  65: Add                            stack[ 4]: 2, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1201  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 12, F<sieve.ego:33>, M<let>
[20210409144645] 1202  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1203  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1204  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1205  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 12, F<sieve.ego:33>, M<let>
[20210409144645] 1206  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 12, F<sieve.ego:33>, M<let>
[20210409144645] 1207  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1208  TRACE  : (12)             primes  69: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1209  TRACE  : (12)             primes  70: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1210  TRACE  : (12)             primes  71: AtLine          15             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1211  TRACE  : (12)             primes  72: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1212  TRACE  : (12)             primes  73: Push            0              stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1213  TRACE  : (12)             primes  74: SymbolCreate    "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1214  TRACE  : (12)             primes  75: Store           "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1215  TRACE  : (12)             primes  76: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1216  TRACE  : (12)             primes  77: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1217  TRACE  : (12)             primes  78: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1218  TRACE  : (12)             primes  79: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1219  TRACE  : (12)             primes  80: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1220  TRACE  : (12)             primes  81: Push            1              stack[ 4]: 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1221  TRACE  : (12)             primes  82: Add                            stack[ 5]: 1, 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1222  TRACE  : (12)             primes  83: SymbolCreate    "n"            stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1223  TRACE  : (12)             primes  84: Store           "n"            stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1224  TRACE  : (12)             primes  85: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1225  TRACE  : (12)             primes  86: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1226  TRACE  : (12)             primes  87: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1227  TRACE  : (12)             primes  88: Load            "size"         stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1228  TRACE  : (12)             primes  89: LTEQ                           stack[ 5]: 10, 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1229  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1230  TRACE  : (12)             primes  91: AtLine          16             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1231  TRACE  : (12)             primes  92: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1232  TRACE  : (12)             primes  93: AtLine          17             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1233  TRACE  : (12)             primes  94: Load            "bool"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1234  TRACE  : (12)             primes  95: Load            "t"            stack[ 4]: functions.Bool(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1235  TRACE  : (12)             primes  96: Load            "n"            stack[ 5]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1236  TRACE  : (12)             primes  97: LoadIndex                      stack[ 6]: 3, [false, false, true, false, true, false, true, ...
[20210409144645] 1237  TRACE  : (12)             primes  98: Negate          true           stack[ 5]: false, functions.Bool(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1238  TRACE  : (12)             primes  99: Call            1              stack[ 5]: true, functions.Bool(), M<let>, F<sieve.ego:33>, M...
[20210409144645] 1239  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1240  TRACE  : (12)             primes 101: AtLine          17             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1241  TRACE  : (12)             primes 102: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1242  TRACE  : (12)             primes 103: AtLine          18             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1243  TRACE  : (12)             primes 104: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1244  TRACE  : (12)             primes 105: Load            "n"            stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1245  TRACE  : (12)             primes 106: Store           "next"         stack[ 5]: 3, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1246  TRACE  : (12)             primes 107: DropToMarker    M<let>         stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1247  TRACE  : (12)             primes 108: AtLine          19             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1248  TRACE  : (12)             primes 109: Branch          @118           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1249  TRACE  : (12)             primes 118: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1250  TRACE  : (12)             primes 119: DropToMarker                   stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1251  TRACE  : (12)             primes 120: AtLine          22             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1252  TRACE  : (12)             primes 121: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1253  TRACE  : (12)             primes 122: Load            "next"         stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1254  TRACE  : (12)             primes 123: Push            0              stack[ 4]: 3, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1255  TRACE  : (12)             primes 124: Equal                          stack[ 5]: 0, 3, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1256  TRACE  : (12)             primes 125: Call            1              stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1257  TRACE  : (12)             primes 126: BranchFalse     @132           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1258  TRACE  : (12)             primes 132: AtLine          25             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1259  TRACE  : (12)             primes 133: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1260  TRACE  : (12)             primes 134: Load            "append"       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1261  TRACE  : (12)             primes 135: Load            "r"            stack[ 4]: functions.Append(), M<let>, F<sieve.ego:33>, M<let...
[20210409144645] 1262  TRACE  : (12)             primes 136: Load            "next"         stack[ 5]: [], functions.Append(), M<let>, F<sieve.ego:33>, M...
[20210409144645] 1263  TRACE  : (12)             primes 137: Call            2              stack[ 6]: 3, [], functions.Append(), M<let>, F<sieve.ego:33>...
[20210409144645] 1264  TRACE  : (12)             primes 138: Store           "r"            stack[ 4]: [3], M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1265  TRACE  : (12)             primes 139: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1266  TRACE  : (12)             primes 140: AtLine          26             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1267  TRACE  : (12)             primes 141: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1268  TRACE  : (12)             primes 142: Load            "next"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1269  TRACE  : (12)             primes 143: Push            1              stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1270  TRACE  : (12)             primes 144: Sub                            stack[ 5]: 1, 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1271  TRACE  : (12)             primes 145: Store           "p"            stack[ 4]: 2, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1272  TRACE  : (12)             primes 146: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1273  TRACE  : (12)             primes 147: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1274  TRACE  : (12)             primes 148: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1275  TRACE  : (12)             primes 149: Push            1              stack[ 3]: 2, F<sieve.ego:33>, M<let>
[20210409144645] 1276  TRACE  : (12)             primes 150: Add                            stack[ 4]: 1, 2, F<sieve.ego:33>, M<let>
[20210409144645] 1277  TRACE  : (12)             primes 151: Store           "p"            stack[ 3]: 3, F<sieve.ego:33>, M<let>
[20210409144645] 1278  TRACE  : (12)             primes 152: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1279  TRACE  : (12)             primes 153: Branch          @35            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1280  TRACE  : (12)             primes  35: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1281  TRACE  : (12)             primes  36: Load            "size"         stack[ 3]: 3, F<sieve.ego:33>, M<let>
[20210409144645] 1282  TRACE  : (12)             primes  37: LTEQ                           stack[ 4]: 10, 3, F<sieve.ego:33>, M<let>
[20210409144645] 1283  TRACE  : (12)             primes  38: BranchFalse     @154           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1284  TRACE  : (12)             primes  39: AtLine          10             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1285  TRACE  : (12)             primes  40: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1286  TRACE  : (12)             primes  41: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1287  TRACE  : (12)             primes  42: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1288  TRACE  : (12)             primes  43: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1289  TRACE  : (12)             primes  44: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1290  TRACE  : (12)             primes  45: SymbolCreate    "n"            stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1291  TRACE  : (12)             primes  46: Store           "n"            stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1292  TRACE  : (12)             primes  47: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1293  TRACE  : (12)             primes  48: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1294  TRACE  : (12)             primes  49: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1295  TRACE  : (12)             primes  50: Load            "size"         stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1296  TRACE  : (12)             primes  51: LTEQ                           stack[ 5]: 10, 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1297  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1298  TRACE  : (12)             primes  53: AtLine          12             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1299  TRACE  : (12)             primes  54: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1300  TRACE  : (12)             primes  55: AtLine          13             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1301  TRACE  : (12)             primes  56: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1302  TRACE  : (12)             primes  57: Push            true           stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1303  TRACE  : (12)             primes  58: Load            "t"            stack[ 5]: true, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1304  TRACE  : (12)             primes  59: Load            "n"            stack[ 6]: [false, false, true, false, true, false, true, fal...
[20210409144645] 1305  TRACE  : (12)             primes  60: StoreIndex                     stack[ 7]: 3, [false, false, true, false, true, false, true, ...
[20210409144645] 1306  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 5]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1307  TRACE  : (12)             primes  62: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1308  TRACE  : (12)             primes  63: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1309  TRACE  : (12)             primes  64: Load            "p"            stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1310  TRACE  : (12)             primes  65: Add                            stack[ 5]: 3, 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1311  TRACE  : (12)             primes  66: Store           "n"            stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1312  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1313  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1314  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1315  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 6, F<sieve.ego:33>, M<let>
[20210409144645] 1316  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 6, F<sieve.ego:33>, M<let>
[20210409144645] 1317  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1318  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1319  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1320  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1321  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1322  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1323  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1324  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1325  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 6, [false, false, true, true, true, false, true, f...
[20210409144645] 1326  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1327  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1328  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1329  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 6, F<sieve.ego:33>, M<let>
[20210409144645] 1330  TRACE  : (12)             primes  65: Add                            stack[ 4]: 3, 6, F<sieve.ego:33>, M<let>
[20210409144645] 1331  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 9, F<sieve.ego:33>, M<let>
[20210409144645] 1332  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1333  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1334  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1335  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 9, F<sieve.ego:33>, M<let>
[20210409144645] 1336  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 9, F<sieve.ego:33>, M<let>
[20210409144645] 1337  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1338  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1339  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1340  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1341  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1342  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1343  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1344  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1345  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 9, [false, false, true, true, true, false, true, f...
[20210409144645] 1346  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1347  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1348  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1349  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 9, F<sieve.ego:33>, M<let>
[20210409144645] 1350  TRACE  : (12)             primes  65: Add                            stack[ 4]: 3, 9, F<sieve.ego:33>, M<let>
[20210409144645] 1351  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 12, F<sieve.ego:33>, M<let>
[20210409144645] 1352  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1353  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1354  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1355  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 12, F<sieve.ego:33>, M<let>
[20210409144645] 1356  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 12, F<sieve.ego:33>, M<let>
[20210409144645] 1357  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1358  TRACE  : (12)             primes  69: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1359  TRACE  : (12)             primes  70: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1360  TRACE  : (12)             primes  71: AtLine          15             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1361  TRACE  : (12)             primes  72: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1362  TRACE  : (12)             primes  73: Push            0              stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1363  TRACE  : (12)             primes  74: SymbolCreate    "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1364  TRACE  : (12)             primes  75: Store           "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1365  TRACE  : (12)             primes  76: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1366  TRACE  : (12)             primes  77: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1367  TRACE  : (12)             primes  78: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1368  TRACE  : (12)             primes  79: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1369  TRACE  : (12)             primes  80: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1370  TRACE  : (12)             primes  81: Push            1              stack[ 4]: 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1371  TRACE  : (12)             primes  82: Add                            stack[ 5]: 1, 3, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1372  TRACE  : (12)             primes  83: SymbolCreate    "n"            stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1373  TRACE  : (12)             primes  84: Store           "n"            stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1374  TRACE  : (12)             primes  85: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1375  TRACE  : (12)             primes  86: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1376  TRACE  : (12)             primes  87: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1377  TRACE  : (12)             primes  88: Load            "size"         stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1378  TRACE  : (12)             primes  89: LTEQ                           stack[ 5]: 10, 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1379  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1380  TRACE  : (12)             primes  91: AtLine          16             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1381  TRACE  : (12)             primes  92: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1382  TRACE  : (12)             primes  93: AtLine          17             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1383  TRACE  : (12)             primes  94: Load            "bool"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1384  TRACE  : (12)             primes  95: Load            "t"            stack[ 4]: functions.Bool(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1385  TRACE  : (12)             primes  96: Load            "n"            stack[ 5]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1386  TRACE  : (12)             primes  97: LoadIndex                      stack[ 6]: 4, [false, false, true, true, true, false, true, f...
[20210409144645] 1387  TRACE  : (12)             primes  98: Negate          true           stack[ 5]: true, functions.Bool(), M<let>, F<sieve.ego:33>, M...
[20210409144645] 1388  TRACE  : (12)             primes  99: Call            1              stack[ 5]: false, functions.Bool(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1389  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 4]: false, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1390  TRACE  : (12)             primes 111: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1391  TRACE  : (12)             primes 112: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1392  TRACE  : (12)             primes 113: Push            1              stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1393  TRACE  : (12)             primes 114: Add                            stack[ 5]: 1, 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1394  TRACE  : (12)             primes 115: Store           "n"            stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1395  TRACE  : (12)             primes 116: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1396  TRACE  : (12)             primes 117: Branch          @87            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1397  TRACE  : (12)             primes  87: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1398  TRACE  : (12)             primes  88: Load            "size"         stack[ 3]: 5, F<sieve.ego:33>, M<let>
[20210409144645] 1399  TRACE  : (12)             primes  89: LTEQ                           stack[ 4]: 10, 5, F<sieve.ego:33>, M<let>
[20210409144645] 1400  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1401  TRACE  : (12)             primes  91: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1402  TRACE  : (12)             primes  92: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1403  TRACE  : (12)             primes  93: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1404  TRACE  : (12)             primes  94: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1405  TRACE  : (12)             primes  95: Load            "t"            stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1406  TRACE  : (12)             primes  96: Load            "n"            stack[ 4]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1407  TRACE  : (12)             primes  97: LoadIndex                      stack[ 5]: 5, [false, false, true, true, true, false, true, f...
[20210409144645] 1408  TRACE  : (12)             primes  98: Negate          true           stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1409  TRACE  : (12)             primes  99: Call            1              stack[ 4]: true, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1410  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1411  TRACE  : (12)             primes 101: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1412  TRACE  : (12)             primes 102: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1413  TRACE  : (12)             primes 103: AtLine          18             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1414  TRACE  : (12)             primes 104: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1415  TRACE  : (12)             primes 105: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1416  TRACE  : (12)             primes 106: Store           "next"         stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1417  TRACE  : (12)             primes 107: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1418  TRACE  : (12)             primes 108: AtLine          19             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1419  TRACE  : (12)             primes 109: Branch          @118           stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1420  TRACE  : (12)             primes 118: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1421  TRACE  : (12)             primes 119: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1422  TRACE  : (12)             primes 120: AtLine          22             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1423  TRACE  : (12)             primes 121: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1424  TRACE  : (12)             primes 122: Load            "next"         stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1425  TRACE  : (12)             primes 123: Push            0              stack[ 4]: 5, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1426  TRACE  : (12)             primes 124: Equal                          stack[ 5]: 0, 5, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1427  TRACE  : (12)             primes 125: Call            1              stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1428  TRACE  : (12)             primes 126: BranchFalse     @132           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1429  TRACE  : (12)             primes 132: AtLine          25             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1430  TRACE  : (12)             primes 133: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1431  TRACE  : (12)             primes 134: Load            "append"       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1432  TRACE  : (12)             primes 135: Load            "r"            stack[ 4]: functions.Append(), M<let>, F<sieve.ego:33>, M<let...
[20210409144645] 1433  TRACE  : (12)             primes 136: Load            "next"         stack[ 5]: [3], functions.Append(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1434  TRACE  : (12)             primes 137: Call            2              stack[ 6]: 5, [3], functions.Append(), M<let>, F<sieve.ego:33...
[20210409144645] 1435  TRACE  : (12)             primes 138: Store           "r"            stack[ 4]: [3, 5], M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1436  TRACE  : (12)             primes 139: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1437  TRACE  : (12)             primes 140: AtLine          26             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1438  TRACE  : (12)             primes 141: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1439  TRACE  : (12)             primes 142: Load            "next"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1440  TRACE  : (12)             primes 143: Push            1              stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1441  TRACE  : (12)             primes 144: Sub                            stack[ 5]: 1, 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1442  TRACE  : (12)             primes 145: Store           "p"            stack[ 4]: 4, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1443  TRACE  : (12)             primes 146: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1444  TRACE  : (12)             primes 147: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1445  TRACE  : (12)             primes 148: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1446  TRACE  : (12)             primes 149: Push            1              stack[ 3]: 4, F<sieve.ego:33>, M<let>
[20210409144645] 1447  TRACE  : (12)             primes 150: Add                            stack[ 4]: 1, 4, F<sieve.ego:33>, M<let>
[20210409144645] 1448  TRACE  : (12)             primes 151: Store           "p"            stack[ 3]: 5, F<sieve.ego:33>, M<let>
[20210409144645] 1449  TRACE  : (12)             primes 152: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1450  TRACE  : (12)             primes 153: Branch          @35            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1451  TRACE  : (12)             primes  35: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1452  TRACE  : (12)             primes  36: Load            "size"         stack[ 3]: 5, F<sieve.ego:33>, M<let>
[20210409144645] 1453  TRACE  : (12)             primes  37: LTEQ                           stack[ 4]: 10, 5, F<sieve.ego:33>, M<let>
[20210409144645] 1454  TRACE  : (12)             primes  38: BranchFalse     @154           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1455  TRACE  : (12)             primes  39: AtLine          10             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1456  TRACE  : (12)             primes  40: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1457  TRACE  : (12)             primes  41: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1458  TRACE  : (12)             primes  42: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1459  TRACE  : (12)             primes  43: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1460  TRACE  : (12)             primes  44: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1461  TRACE  : (12)             primes  45: SymbolCreate    "n"            stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1462  TRACE  : (12)             primes  46: Store           "n"            stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1463  TRACE  : (12)             primes  47: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1464  TRACE  : (12)             primes  48: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1465  TRACE  : (12)             primes  49: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1466  TRACE  : (12)             primes  50: Load            "size"         stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1467  TRACE  : (12)             primes  51: LTEQ                           stack[ 5]: 10, 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1468  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1469  TRACE  : (12)             primes  53: AtLine          12             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1470  TRACE  : (12)             primes  54: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1471  TRACE  : (12)             primes  55: AtLine          13             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1472  TRACE  : (12)             primes  56: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1473  TRACE  : (12)             primes  57: Push            true           stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1474  TRACE  : (12)             primes  58: Load            "t"            stack[ 5]: true, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1475  TRACE  : (12)             primes  59: Load            "n"            stack[ 6]: [false, false, true, true, true, false, true, fals...
[20210409144645] 1476  TRACE  : (12)             primes  60: StoreIndex                     stack[ 7]: 5, [false, false, true, true, true, false, true, f...
[20210409144645] 1477  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 5]: [false, false, true, true, true, true, true, false...
[20210409144645] 1478  TRACE  : (12)             primes  62: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1479  TRACE  : (12)             primes  63: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1480  TRACE  : (12)             primes  64: Load            "p"            stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1481  TRACE  : (12)             primes  65: Add                            stack[ 5]: 5, 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1482  TRACE  : (12)             primes  66: Store           "n"            stack[ 4]: 10, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1483  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1484  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1485  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1486  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1487  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1488  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1489  TRACE  : (12)             primes  53: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1490  TRACE  : (12)             primes  54: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1491  TRACE  : (12)             primes  55: AtLine          13             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1492  TRACE  : (12)             primes  56: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1493  TRACE  : (12)             primes  57: Push            true           stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1494  TRACE  : (12)             primes  58: Load            "t"            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1495  TRACE  : (12)             primes  59: Load            "n"            stack[ 5]: [false, false, true, true, true, true, true, false...
[20210409144645] 1496  TRACE  : (12)             primes  60: StoreIndex                     stack[ 6]: 10, [false, false, true, true, true, true, true, f...
[20210409144645] 1497  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 4]: [false, false, true, true, true, true, true, false...
[20210409144645] 1498  TRACE  : (12)             primes  62: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1499  TRACE  : (12)             primes  63: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1500  TRACE  : (12)             primes  64: Load            "p"            stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1501  TRACE  : (12)             primes  65: Add                            stack[ 4]: 5, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1502  TRACE  : (12)             primes  66: Store           "n"            stack[ 3]: 15, F<sieve.ego:33>, M<let>
[20210409144645] 1503  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1504  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1505  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1506  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 15, F<sieve.ego:33>, M<let>
[20210409144645] 1507  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 15, F<sieve.ego:33>, M<let>
[20210409144645] 1508  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1509  TRACE  : (12)             primes  69: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1510  TRACE  : (12)             primes  70: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1511  TRACE  : (12)             primes  71: AtLine          15             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1512  TRACE  : (12)             primes  72: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1513  TRACE  : (12)             primes  73: Push            0              stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1514  TRACE  : (12)             primes  74: SymbolCreate    "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1515  TRACE  : (12)             primes  75: Store           "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1516  TRACE  : (12)             primes  76: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1517  TRACE  : (12)             primes  77: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1518  TRACE  : (12)             primes  78: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1519  TRACE  : (12)             primes  79: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1520  TRACE  : (12)             primes  80: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1521  TRACE  : (12)             primes  81: Push            1              stack[ 4]: 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1522  TRACE  : (12)             primes  82: Add                            stack[ 5]: 1, 5, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1523  TRACE  : (12)             primes  83: SymbolCreate    "n"            stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1524  TRACE  : (12)             primes  84: Store           "n"            stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1525  TRACE  : (12)             primes  85: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1526  TRACE  : (12)             primes  86: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1527  TRACE  : (12)             primes  87: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1528  TRACE  : (12)             primes  88: Load            "size"         stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1529  TRACE  : (12)             primes  89: LTEQ                           stack[ 5]: 10, 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1530  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1531  TRACE  : (12)             primes  91: AtLine          16             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1532  TRACE  : (12)             primes  92: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1533  TRACE  : (12)             primes  93: AtLine          17             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1534  TRACE  : (12)             primes  94: Load            "bool"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1535  TRACE  : (12)             primes  95: Load            "t"            stack[ 4]: functions.Bool(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1536  TRACE  : (12)             primes  96: Load            "n"            stack[ 5]: [false, false, true, true, true, true, true, false...
[20210409144645] 1537  TRACE  : (12)             primes  97: LoadIndex                      stack[ 6]: 6, [false, false, true, true, true, true, true, fa...
[20210409144645] 1538  TRACE  : (12)             primes  98: Negate          true           stack[ 5]: true, functions.Bool(), M<let>, F<sieve.ego:33>, M...
[20210409144645] 1539  TRACE  : (12)             primes  99: Call            1              stack[ 5]: false, functions.Bool(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1540  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 4]: false, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1541  TRACE  : (12)             primes 111: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1542  TRACE  : (12)             primes 112: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1543  TRACE  : (12)             primes 113: Push            1              stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1544  TRACE  : (12)             primes 114: Add                            stack[ 5]: 1, 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1545  TRACE  : (12)             primes 115: Store           "n"            stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1546  TRACE  : (12)             primes 116: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1547  TRACE  : (12)             primes 117: Branch          @87            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1548  TRACE  : (12)             primes  87: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1549  TRACE  : (12)             primes  88: Load            "size"         stack[ 3]: 7, F<sieve.ego:33>, M<let>
[20210409144645] 1550  TRACE  : (12)             primes  89: LTEQ                           stack[ 4]: 10, 7, F<sieve.ego:33>, M<let>
[20210409144645] 1551  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1552  TRACE  : (12)             primes  91: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1553  TRACE  : (12)             primes  92: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1554  TRACE  : (12)             primes  93: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1555  TRACE  : (12)             primes  94: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1556  TRACE  : (12)             primes  95: Load            "t"            stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1557  TRACE  : (12)             primes  96: Load            "n"            stack[ 4]: [false, false, true, true, true, true, true, false...
[20210409144645] 1558  TRACE  : (12)             primes  97: LoadIndex                      stack[ 5]: 7, [false, false, true, true, true, true, true, fa...
[20210409144645] 1559  TRACE  : (12)             primes  98: Negate          true           stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1560  TRACE  : (12)             primes  99: Call            1              stack[ 4]: true, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1561  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1562  TRACE  : (12)             primes 101: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1563  TRACE  : (12)             primes 102: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1564  TRACE  : (12)             primes 103: AtLine          18             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1565  TRACE  : (12)             primes 104: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1566  TRACE  : (12)             primes 105: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1567  TRACE  : (12)             primes 106: Store           "next"         stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1568  TRACE  : (12)             primes 107: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1569  TRACE  : (12)             primes 108: AtLine          19             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1570  TRACE  : (12)             primes 109: Branch          @118           stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1571  TRACE  : (12)             primes 118: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1572  TRACE  : (12)             primes 119: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1573  TRACE  : (12)             primes 120: AtLine          22             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1574  TRACE  : (12)             primes 121: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1575  TRACE  : (12)             primes 122: Load            "next"         stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1576  TRACE  : (12)             primes 123: Push            0              stack[ 4]: 7, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1577  TRACE  : (12)             primes 124: Equal                          stack[ 5]: 0, 7, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1578  TRACE  : (12)             primes 125: Call            1              stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1579  TRACE  : (12)             primes 126: BranchFalse     @132           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1580  TRACE  : (12)             primes 132: AtLine          25             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1581  TRACE  : (12)             primes 133: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1582  TRACE  : (12)             primes 134: Load            "append"       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1583  TRACE  : (12)             primes 135: Load            "r"            stack[ 4]: functions.Append(), M<let>, F<sieve.ego:33>, M<let...
[20210409144645] 1584  TRACE  : (12)             primes 136: Load            "next"         stack[ 5]: [3, 5], functions.Append(), M<let>, F<sieve.ego:33...
[20210409144645] 1585  TRACE  : (12)             primes 137: Call            2              stack[ 6]: 7, [3, 5], functions.Append(), M<let>, F<sieve.ego...
[20210409144645] 1586  TRACE  : (12)             primes 138: Store           "r"            stack[ 4]: [3, 5, 7], M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1587  TRACE  : (12)             primes 139: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1588  TRACE  : (12)             primes 140: AtLine          26             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1589  TRACE  : (12)             primes 141: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1590  TRACE  : (12)             primes 142: Load            "next"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1591  TRACE  : (12)             primes 143: Push            1              stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1592  TRACE  : (12)             primes 144: Sub                            stack[ 5]: 1, 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1593  TRACE  : (12)             primes 145: Store           "p"            stack[ 4]: 6, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1594  TRACE  : (12)             primes 146: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1595  TRACE  : (12)             primes 147: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1596  TRACE  : (12)             primes 148: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1597  TRACE  : (12)             primes 149: Push            1              stack[ 3]: 6, F<sieve.ego:33>, M<let>
[20210409144645] 1598  TRACE  : (12)             primes 150: Add                            stack[ 4]: 1, 6, F<sieve.ego:33>, M<let>
[20210409144645] 1599  TRACE  : (12)             primes 151: Store           "p"            stack[ 3]: 7, F<sieve.ego:33>, M<let>
[20210409144645] 1600  TRACE  : (12)             primes 152: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1601  TRACE  : (12)             primes 153: Branch          @35            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1602  TRACE  : (12)             primes  35: Load            "p"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1603  TRACE  : (12)             primes  36: Load            "size"         stack[ 3]: 7, F<sieve.ego:33>, M<let>
[20210409144645] 1604  TRACE  : (12)             primes  37: LTEQ                           stack[ 4]: 10, 7, F<sieve.ego:33>, M<let>
[20210409144645] 1605  TRACE  : (12)             primes  38: BranchFalse     @154           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1606  TRACE  : (12)             primes  39: AtLine          10             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1607  TRACE  : (12)             primes  40: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1608  TRACE  : (12)             primes  41: AtLine          12             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1609  TRACE  : (12)             primes  42: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1610  TRACE  : (12)             primes  43: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1611  TRACE  : (12)             primes  44: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1612  TRACE  : (12)             primes  45: SymbolCreate    "n"            stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1613  TRACE  : (12)             primes  46: Store           "n"            stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1614  TRACE  : (12)             primes  47: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1615  TRACE  : (12)             primes  48: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1616  TRACE  : (12)             primes  49: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1617  TRACE  : (12)             primes  50: Load            "size"         stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1618  TRACE  : (12)             primes  51: LTEQ                           stack[ 5]: 10, 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1619  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1620  TRACE  : (12)             primes  53: AtLine          12             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1621  TRACE  : (12)             primes  54: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1622  TRACE  : (12)             primes  55: AtLine          13             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1623  TRACE  : (12)             primes  56: Push            M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1624  TRACE  : (12)             primes  57: Push            true           stack[ 4]: M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1625  TRACE  : (12)             primes  58: Load            "t"            stack[ 5]: true, M<let>, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1626  TRACE  : (12)             primes  59: Load            "n"            stack[ 6]: [false, false, true, true, true, true, true, false...
[20210409144645] 1627  TRACE  : (12)             primes  60: StoreIndex                     stack[ 7]: 7, [false, false, true, true, true, true, true, fa...
[20210409144645] 1628  TRACE  : (12)             primes  61: DropToMarker    M<let>         stack[ 5]: [false, false, true, true, true, true, true, true,...
[20210409144645] 1629  TRACE  : (12)             primes  62: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1630  TRACE  : (12)             primes  63: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1631  TRACE  : (12)             primes  64: Load            "p"            stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1632  TRACE  : (12)             primes  65: Add                            stack[ 5]: 7, 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1633  TRACE  : (12)             primes  66: Store           "n"            stack[ 4]: 14, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1634  TRACE  : (12)             primes  67: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1635  TRACE  : (12)             primes  68: Branch          @49            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1636  TRACE  : (12)             primes  49: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1637  TRACE  : (12)             primes  50: Load            "size"         stack[ 3]: 14, F<sieve.ego:33>, M<let>
[20210409144645] 1638  TRACE  : (12)             primes  51: LTEQ                           stack[ 4]: 10, 14, F<sieve.ego:33>, M<let>
[20210409144645] 1639  TRACE  : (12)             primes  52: BranchFalse     @69            stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1640  TRACE  : (12)             primes  69: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1641  TRACE  : (12)             primes  70: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1642  TRACE  : (12)             primes  71: AtLine          15             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1643  TRACE  : (12)             primes  72: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1644  TRACE  : (12)             primes  73: Push            0              stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1645  TRACE  : (12)             primes  74: SymbolCreate    "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1646  TRACE  : (12)             primes  75: Store           "next"         stack[ 4]: 0, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1647  TRACE  : (12)             primes  76: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1648  TRACE  : (12)             primes  77: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1649  TRACE  : (12)             primes  78: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1650  TRACE  : (12)             primes  79: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1651  TRACE  : (12)             primes  80: Load            "p"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1652  TRACE  : (12)             primes  81: Push            1              stack[ 4]: 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1653  TRACE  : (12)             primes  82: Add                            stack[ 5]: 1, 7, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1654  TRACE  : (12)             primes  83: SymbolCreate    "n"            stack[ 4]: 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1655  TRACE  : (12)             primes  84: Store           "n"            stack[ 4]: 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1656  TRACE  : (12)             primes  85: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1657  TRACE  : (12)             primes  86: Push            M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1658  TRACE  : (12)             primes  87: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1659  TRACE  : (12)             primes  88: Load            "size"         stack[ 4]: 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1660  TRACE  : (12)             primes  89: LTEQ                           stack[ 5]: 10, 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1661  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 4]: true, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1662  TRACE  : (12)             primes  91: AtLine          16             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1663  TRACE  : (12)             primes  92: PushScope                      stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1664  TRACE  : (12)             primes  93: AtLine          17             stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1665  TRACE  : (12)             primes  94: Load            "bool"         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1666  TRACE  : (12)             primes  95: Load            "t"            stack[ 4]: functions.Bool(), M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1667  TRACE  : (12)             primes  96: Load            "n"            stack[ 5]: [false, false, true, true, true, true, true, true,...
[20210409144645] 1668  TRACE  : (12)             primes  97: LoadIndex                      stack[ 6]: 8, [false, false, true, true, true, true, true, tr...
[20210409144645] 1669  TRACE  : (12)             primes  98: Negate          true           stack[ 5]: true, functions.Bool(), M<let>, F<sieve.ego:33>, M...
[20210409144645] 1670  TRACE  : (12)             primes  99: Call            1              stack[ 5]: false, functions.Bool(), M<let>, F<sieve.ego:33>, ...
[20210409144645] 1671  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 4]: false, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1672  TRACE  : (12)             primes 111: PopScope                       stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1673  TRACE  : (12)             primes 112: Load            "n"            stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1674  TRACE  : (12)             primes 113: Push            1              stack[ 4]: 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1675  TRACE  : (12)             primes 114: Add                            stack[ 5]: 1, 8, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1676  TRACE  : (12)             primes 115: Store           "n"            stack[ 4]: 9, M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1677  TRACE  : (12)             primes 116: DropToMarker    M<let>         stack[ 3]: M<let>, F<sieve.ego:33>, M<let>
[20210409144645] 1678  TRACE  : (12)             primes 117: Branch          @87            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1679  TRACE  : (12)             primes  87: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1680  TRACE  : (12)             primes  88: Load            "size"         stack[ 3]: 9, F<sieve.ego:33>, M<let>
[20210409144645] 1681  TRACE  : (12)             primes  89: LTEQ                           stack[ 4]: 10, 9, F<sieve.ego:33>, M<let>
[20210409144645] 1682  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1683  TRACE  : (12)             primes  91: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1684  TRACE  : (12)             primes  92: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1685  TRACE  : (12)             primes  93: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1686  TRACE  : (12)             primes  94: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1687  TRACE  : (12)             primes  95: Load            "t"            stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1688  TRACE  : (12)             primes  96: Load            "n"            stack[ 4]: [false, false, true, true, true, true, true, true,...
[20210409144645] 1689  TRACE  : (12)             primes  97: LoadIndex                      stack[ 5]: 9, [false, false, true, true, true, true, true, tr...
[20210409144645] 1690  TRACE  : (12)             primes  98: Negate          true           stack[ 4]: true, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1691  TRACE  : (12)             primes  99: Call            1              stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1692  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1693  TRACE  : (12)             primes 111: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1694  TRACE  : (12)             primes 112: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1695  TRACE  : (12)             primes 113: Push            1              stack[ 3]: 9, F<sieve.ego:33>, M<let>
[20210409144645] 1696  TRACE  : (12)             primes 114: Add                            stack[ 4]: 1, 9, F<sieve.ego:33>, M<let>
[20210409144645] 1697  TRACE  : (12)             primes 115: Store           "n"            stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1698  TRACE  : (12)             primes 116: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1699  TRACE  : (12)             primes 117: Branch          @87            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1700  TRACE  : (12)             primes  87: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1701  TRACE  : (12)             primes  88: Load            "size"         stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1702  TRACE  : (12)             primes  89: LTEQ                           stack[ 4]: 10, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1703  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1704  TRACE  : (12)             primes  91: AtLine          16             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1705  TRACE  : (12)             primes  92: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1706  TRACE  : (12)             primes  93: AtLine          17             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1707  TRACE  : (12)             primes  94: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1708  TRACE  : (12)             primes  95: Load            "t"            stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1709  TRACE  : (12)             primes  96: Load            "n"            stack[ 4]: [false, false, true, true, true, true, true, true,...
[20210409144645] 1710  TRACE  : (12)             primes  97: LoadIndex                      stack[ 5]: 10, [false, false, true, true, true, true, true, t...
[20210409144645] 1711  TRACE  : (12)             primes  98: Negate          true           stack[ 4]: true, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1712  TRACE  : (12)             primes  99: Call            1              stack[ 4]: false, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1713  TRACE  : (12)             primes 100: BranchFalse     @111           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1714  TRACE  : (12)             primes 111: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1715  TRACE  : (12)             primes 112: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1716  TRACE  : (12)             primes 113: Push            1              stack[ 3]: 10, F<sieve.ego:33>, M<let>
[20210409144645] 1717  TRACE  : (12)             primes 114: Add                            stack[ 4]: 1, 10, F<sieve.ego:33>, M<let>
[20210409144645] 1718  TRACE  : (12)             primes 115: Store           "n"            stack[ 3]: 11, F<sieve.ego:33>, M<let>
[20210409144645] 1719  TRACE  : (12)             primes 116: DropToMarker    M<let>         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1720  TRACE  : (12)             primes 117: Branch          @87            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1721  TRACE  : (12)             primes  87: Load            "n"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1722  TRACE  : (12)             primes  88: Load            "size"         stack[ 3]: 11, F<sieve.ego:33>, M<let>
[20210409144645] 1723  TRACE  : (12)             primes  89: LTEQ                           stack[ 4]: 10, 11, F<sieve.ego:33>, M<let>
[20210409144645] 1724  TRACE  : (12)             primes  90: BranchFalse     @118           stack[ 3]: false, F<sieve.ego:33>, M<let>
[20210409144645] 1725  TRACE  : (12)             primes 118: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1726  TRACE  : (12)             primes 119: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1727  TRACE  : (12)             primes 120: AtLine          22             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1728  TRACE  : (12)             primes 121: Load            "bool"         stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1729  TRACE  : (12)             primes 122: Load            "next"         stack[ 3]: functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1730  TRACE  : (12)             primes 123: Push            0              stack[ 4]: 0, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1731  TRACE  : (12)             primes 124: Equal                          stack[ 5]: 0, 0, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1732  TRACE  : (12)             primes 125: Call            1              stack[ 4]: true, functions.Bool(), F<sieve.ego:33>, M<let>
[20210409144645] 1733  TRACE  : (12)             primes 126: BranchFalse     @132           stack[ 3]: true, F<sieve.ego:33>, M<let>
[20210409144645] 1734  TRACE  : (12)             primes 127: AtLine          22             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1735  TRACE  : (12)             primes 128: PushScope                      stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1736  TRACE  : (12)             primes 129: AtLine          23             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1737  TRACE  : (12)             primes 130: Branch          @154           stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1738  TRACE  : (12)             primes 154: PopScope                       stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1739  TRACE  : (12)             primes 155: DropToMarker                   stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1740  TRACE  : (12)             primes 156: AtLine          29             stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1741  TRACE  : (12)             primes 157: Load            "r"            stack[ 2]: F<sieve.ego:33>, M<let>
[20210409144645] 1742  TRACE  : (12)             primes 158: Coerce          T(interface{}) stack[ 3]: [3, 5, 7], F<sieve.ego:33>, M<let>
[20210409144645] 1743  TRACE  : (12)             primes 159: Return          true           stack[ 3]: [3, 5, 7], F<sieve.ego:33>, M<let>
[20210409144645] 1744  TRACE  : (12)          sieve.ego  22: SymbolCreate    "p"            stack[ 2]: [3, 5, 7], M<let>
[20210409144645] 1745  TRACE  : (12)          sieve.ego  23: Store           "p"            stack[ 2]: [3, 5, 7], M<let>
[20210409144645] 1746  TRACE  : (12)          sieve.ego  24: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 1747  TRACE  : (12)          sieve.ego  25: AtLine          35             stack[ 0]: <empty>
[20210409144645] 1748  TRACE  : (12)          sieve.ego  26: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1749  TRACE  : (12)          sieve.ego  27: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 1750  TRACE  : (12)          sieve.ego  28: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 1751  TRACE  : (12)          sieve.ego  29: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: seive test" }, M...
[20210409144645] 1752  TRACE  : (12)          sieve.ego  30: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 1753  TRACE  : (12)          sieve.ego  31: SetThis                        stack[ 3]: Testing{ description: "datamodel: seive test" }, c...
[20210409144645] 1754  TRACE  : (12)          sieve.ego  32: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: seive test" }, c...
[20210409144645] 1755  TRACE  : (12)          sieve.ego  33: Load            "p"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1756  TRACE  : (12)          sieve.ego  34: Push            3              stack[ 4]: [3, 5, 7], compiler.TestEqual(), compiler.TestAsse...
[20210409144645] 1757  TRACE  : (12)          sieve.ego  35: Push            5              stack[ 5]: 3, [3, 5, 7], compiler.TestEqual(), compiler.TestA...
[20210409144645] 1758  TRACE  : (12)          sieve.ego  36: Push            7              stack[ 6]: 5, 3, [3, 5, 7], compiler.TestEqual(), compiler.Te...
[20210409144645] 1759  TRACE  : (12)          sieve.ego  37: Array           3              stack[ 7]: 7, 5, 3, [3, 5, 7], compiler.TestEqual(), compiler...
[20210409144645] 1760  TRACE  : (12)          sieve.ego  38: Call            2              stack[ 5]: [3, 5, 7], [3, 5, 7], compiler.TestEqual(), compil...
[20210409144645] 1761  TRACE  : (12)          sieve.ego  39: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 1762  TRACE  : (12)          sieve.ego  40: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 1763  TRACE  : (12)          sieve.ego  41: AtLine          36             stack[ 0]: <empty>
[20210409144645] 1764  TRACE  : (12)          sieve.ego  42: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1765  TRACE  : (12)          sieve.ego  43: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 1766  TRACE  : (12)          sieve.ego  44: Print                          stack[ 1]: (PASS)  
[20210409144645] 1767  TRACE  : (12)          sieve.ego  45: Timer           1              stack[ 0]: <empty>
[20210409144645] 1768  TRACE  : (12)          sieve.ego  46: Print                          stack[ 1]: 0.007s
[20210409144645] 1769  TRACE  : (12)          sieve.ego  47: Say             true           stack[ 0]: <empty>
TEST: datamodel: seive test                             (PASS)  0.007s
[20210409144645] 1770  TRACE  : (12)          sieve.ego  48: Stop                           stack[ 0]: <empty>
[20210409144645] 1771  TRACE  : *** Tracing sorting.ego (13)  
[20210409144645] 1772  TRACE  : (13)        sorting.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 1773  TRACE  : (13)        sorting.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1774  TRACE  : (13)        sorting.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 1775  TRACE  : (13)        sorting.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1776  TRACE  : (13)        sorting.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1777  TRACE  : (13)        sorting.ego   5: Push            Testing{ description: "datamodel: sort package" } stack[ 0]: <empty>
[20210409144645] 1778  TRACE  : (13)        sorting.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: sort package" }
[20210409144645] 1779  TRACE  : (13)        sorting.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 1780  TRACE  : (13)        sorting.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 1781  TRACE  : (13)        sorting.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 1782  TRACE  : (13)        sorting.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: sort package" }
[20210409144645] 1783  TRACE  : (13)        sorting.ego  11: Print                          stack[ 1]: datamodel: sort package
[20210409144645] 1784  TRACE  : (13)        sorting.ego  12: Push            "                           " stack[ 0]: <empty>
[20210409144645] 1785  TRACE  : (13)        sorting.ego  13: Print                          stack[ 1]:                            
[20210409144645] 1786  TRACE  : (13)        sorting.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 1787  TRACE  : (13)        sorting.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 1788  TRACE  : (13)        sorting.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 1789  TRACE  : (13)        sorting.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 1790  TRACE  : (13)        sorting.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 1791  TRACE  : (13)        sorting.ego  19: Push            5              stack[ 1]: M<let>
[20210409144645] 1792  TRACE  : (13)        sorting.ego  20: Push            2              stack[ 2]: 5, M<let>
[20210409144645] 1793  TRACE  : (13)        sorting.ego  21: Push            6              stack[ 3]: 2, 5, M<let>
[20210409144645] 1794  TRACE  : (13)        sorting.ego  22: Push            4              stack[ 4]: 6, 2, 5, M<let>
[20210409144645] 1795  TRACE  : (13)        sorting.ego  23: Push            0              stack[ 5]: 4, 6, 2, 5, M<let>
[20210409144645] 1796  TRACE  : (13)        sorting.ego  24: Push            T(int)         stack[ 6]: 0, 4, 6, 2, 5, M<let>
[20210409144645] 1797  TRACE  : (13)        sorting.ego  25: MakeArray       5              stack[ 7]: T(int), 0, 4, 6, 2, 5, M<let>
[20210409144645] 1798  TRACE  : (13)        sorting.ego  26: SymbolCreate    "i"            stack[ 2]: [5, 2, 6, 4, 0], M<let>
[20210409144645] 1799  TRACE  : (13)        sorting.ego  27: Store           "i"            stack[ 2]: [5, 2, 6, 4, 0], M<let>
[20210409144645] 1800  TRACE  : (13)        sorting.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 1801  TRACE  : (13)        sorting.ego  29: AtLine          6              stack[ 0]: <empty>
[20210409144645] 1802  TRACE  : (13)        sorting.ego  30: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 1803  TRACE  : (13)        sorting.ego  31: Load            "sort"         stack[ 1]: M<let>
[20210409144645] 1804  TRACE  : (13)        sorting.ego  32: SetThis                        stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1805  TRACE  : (13)        sorting.ego  33: Member          "Ints"         stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1806  TRACE  : (13)        sorting.ego  34: Load            "i"            stack[ 2]: functions.SortInts(), M<let>
[20210409144645] 1807  TRACE  : (13)        sorting.ego  35: Call            1              stack[ 3]: [5, 2, 6, 4, 0], functions.SortInts(), M<let>
[20210409144645] 1808  TRACE  : (13)        sorting.ego  36: SymbolCreate    "i2"           stack[ 2]: [0, 2, 4, 5, 6], M<let>
[20210409144645] 1809  TRACE  : (13)        sorting.ego  37: Store           "i2"           stack[ 2]: [0, 2, 4, 5, 6], M<let>
[20210409144645] 1810  TRACE  : (13)        sorting.ego  38: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 1811  TRACE  : (13)        sorting.ego  39: AtLine          7              stack[ 0]: <empty>
[20210409144645] 1812  TRACE  : (13)        sorting.ego  40: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1813  TRACE  : (13)        sorting.ego  41: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 1814  TRACE  : (13)        sorting.ego  42: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 1815  TRACE  : (13)        sorting.ego  43: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1816  TRACE  : (13)        sorting.ego  44: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 1817  TRACE  : (13)        sorting.ego  45: SetThis                        stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1818  TRACE  : (13)        sorting.ego  46: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1819  TRACE  : (13)        sorting.ego  47: Load            "i"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1820  TRACE  : (13)        sorting.ego  48: Load            "i2"           stack[ 4]: [0, 2, 4, 5, 6], compiler.TestEqual(), compiler.Te...
[20210409144645] 1821  TRACE  : (13)        sorting.ego  49: Call            2              stack[ 5]: [0, 2, 4, 5, 6], [0, 2, 4, 5, 6], compiler.TestEqu...
[20210409144645] 1822  TRACE  : (13)        sorting.ego  50: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 1823  TRACE  : (13)        sorting.ego  51: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 1824  TRACE  : (13)        sorting.ego  52: AtLine          8              stack[ 0]: <empty>
[20210409144645] 1825  TRACE  : (13)        sorting.ego  53: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1826  TRACE  : (13)        sorting.ego  54: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 1827  TRACE  : (13)        sorting.ego  55: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 1828  TRACE  : (13)        sorting.ego  56: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1829  TRACE  : (13)        sorting.ego  57: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 1830  TRACE  : (13)        sorting.ego  58: SetThis                        stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1831  TRACE  : (13)        sorting.ego  59: Member          "Equal"        stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1832  TRACE  : (13)        sorting.ego  60: Load            "i"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1833  TRACE  : (13)        sorting.ego  61: Push            0              stack[ 4]: [0, 2, 4, 5, 6], compiler.TestEqual(), compiler.Te...
[20210409144645] 1834  TRACE  : (13)        sorting.ego  62: Push            2              stack[ 5]: 0, [0, 2, 4, 5, 6], compiler.TestEqual(), compiler...
[20210409144645] 1835  TRACE  : (13)        sorting.ego  63: Push            4              stack[ 6]: 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(), compi...
[20210409144645] 1836  TRACE  : (13)        sorting.ego  64: Push            5              stack[ 7]: 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(), co...
[20210409144645] 1837  TRACE  : (13)        sorting.ego  65: Push            6              stack[ 8]: 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(),...
[20210409144645] 1838  TRACE  : (13)        sorting.ego  66: Push            T(int)         stack[ 9]: 6, 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual...
[20210409144645] 1839  TRACE  : (13)        sorting.ego  67: MakeArray       5              stack[10]: T(int), 6, 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler.T...
[20210409144645] 1840  TRACE  : (13)        sorting.ego  68: Call            2              stack[ 5]: [0, 2, 4, 5, 6], [0, 2, 4, 5, 6], compiler.TestEqu...
[20210409144645] 1841  TRACE  : (13)        sorting.ego  69: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 1842  TRACE  : (13)        sorting.ego  70: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 1843  TRACE  : (13)        sorting.ego  71: AtLine          11             stack[ 0]: <empty>
[20210409144645] 1844  TRACE  : (13)        sorting.ego  72: Try             @89            stack[ 0]: <empty>
[20210409144645] 1845  TRACE  : (13)        sorting.ego  73: AtLine          11             stack[ 0]: <empty>
[20210409144645] 1846  TRACE  : (13)        sorting.ego  74: PushScope                      stack[ 0]: <empty>
[20210409144645] 1847  TRACE  : (13)        sorting.ego  75: AtLine          12             stack[ 0]: <empty>
[20210409144645] 1848  TRACE  : (13)        sorting.ego  76: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 1849  TRACE  : (13)        sorting.ego  77: Load            "sort"         stack[ 1]: M<call>
[20210409144645] 1850  TRACE  : (13)        sorting.ego  78: SetThis                        stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1851  TRACE  : (13)        sorting.ego  79: Member          "Strings"      stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1852  TRACE  : (13)        sorting.ego  80: Load            "i"            stack[ 2]: functions.SortStrings(), M<call>
[20210409144645] 1853  TRACE  : (13)        sorting.ego  81: Call            1              stack[ 3]: [0, 2, 4, 5, 6], functions.SortStrings(), M<call>
[20210409144645] 1854  TRACE  : (13)  *** Branch to 89 on error: at sort.Strings(line 12), wrong array value type: sort.Strings()
[20210409144645] 1855  TRACE  : (13)        sorting.ego  89: SymbolCreate    "e"            stack[ 1]: M<call>
[20210409144645] 1856  TRACE  : (13)        sorting.ego  90: Load            "_error"       stack[ 1]: M<call>
[20210409144645] 1857  TRACE  : (13)        sorting.ego  91: StoreAlways     "e"            stack[ 2]: at sort.Strings(line 12), wrong array value type: ...
[20210409144645] 1858  TRACE  : (13)        sorting.ego  92: AtLine          20             stack[ 1]: M<call>
[20210409144645] 1859  TRACE  : (13)        sorting.ego  93: PopScope                       stack[ 1]: M<call>
[20210409144645] 1860  TRACE  : (13)        sorting.ego  94: TryPop                         stack[ 1]: M<call>
[20210409144645] 1861  TRACE  : (13)        sorting.ego  95: AtLine          20             stack[ 1]: M<call>
[20210409144645] 1862  TRACE  : (13)        sorting.ego  96: Push            M<let>         stack[ 1]: M<call>
[20210409144645] 1863  TRACE  : (13)        sorting.ego  97: Push            5              stack[ 2]: M<let>, M<call>
[20210409144645] 1864  TRACE  : (13)        sorting.ego  98: Push            2              stack[ 3]: 5, M<let>, M<call>
[20210409144645] 1865  TRACE  : (13)        sorting.ego  99: Push            6              stack[ 4]: 2, 5, M<let>, M<call>
[20210409144645] 1866  TRACE  : (13)        sorting.ego 100: Push            4              stack[ 5]: 6, 2, 5, M<let>, M<call>
[20210409144645] 1867  TRACE  : (13)        sorting.ego 101: Push            0              stack[ 6]: 4, 6, 2, 5, M<let>, M<call>
[20210409144645] 1868  TRACE  : (13)        sorting.ego 102: Push            T(float)       stack[ 7]: 0, 4, 6, 2, 5, M<let>, M<call>
[20210409144645] 1869  TRACE  : (13)        sorting.ego 103: MakeArray       5              stack[ 8]: T(float), 0, 4, 6, 2, 5, M<let>, M<call>
[20210409144645] 1870  TRACE  : (13)        sorting.ego 104: SymbolCreate    "f"            stack[ 3]: [5, 2, 6, 4, 0], M<let>, M<call>
[20210409144645] 1871  TRACE  : (13)        sorting.ego 105: Store           "f"            stack[ 3]: [5, 2, 6, 4, 0], M<let>, M<call>
[20210409144645] 1872  TRACE  : (13)        sorting.ego 106: DropToMarker    M<let>         stack[ 2]: M<let>, M<call>
[20210409144645] 1873  TRACE  : (13)        sorting.ego 107: AtLine          21             stack[ 1]: M<call>
[20210409144645] 1874  TRACE  : (13)        sorting.ego 108: Push            M<let>         stack[ 1]: M<call>
[20210409144645] 1875  TRACE  : (13)        sorting.ego 109: Load            "sort"         stack[ 2]: M<let>, M<call>
[20210409144645] 1876  TRACE  : (13)        sorting.ego 110: SetThis                        stack[ 3]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1877  TRACE  : (13)        sorting.ego 111: Member          "Floats"       stack[ 3]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1878  TRACE  : (13)        sorting.ego 112: Load            "f"            stack[ 3]: functions.SortFloats(), M<let>, M<call>
[20210409144645] 1879  TRACE  : (13)        sorting.ego 113: Call            1              stack[ 4]: [5, 2, 6, 4, 0], functions.SortFloats(), M<let>, M...
[20210409144645] 1880  TRACE  : (13)        sorting.ego 114: SymbolCreate    "f2"           stack[ 3]: [0, 2, 4, 5, 6], M<let>, M<call>
[20210409144645] 1881  TRACE  : (13)        sorting.ego 115: Store           "f2"           stack[ 3]: [0, 2, 4, 5, 6], M<let>, M<call>
[20210409144645] 1882  TRACE  : (13)        sorting.ego 116: DropToMarker    M<let>         stack[ 2]: M<let>, M<call>
[20210409144645] 1883  TRACE  : (13)        sorting.ego 117: AtLine          22             stack[ 1]: M<call>
[20210409144645] 1884  TRACE  : (13)        sorting.ego 118: ModeCheck       "test"         stack[ 1]: M<call>
[20210409144645] 1885  TRACE  : (13)        sorting.ego 119: Push            M<assert>      stack[ 1]: M<call>
[20210409144645] 1886  TRACE  : (13)        sorting.ego 120: Load            "T"            stack[ 2]: M<assert>, M<call>
[20210409144645] 1887  TRACE  : (13)        sorting.ego 121: Member          "assert"       stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1888  TRACE  : (13)        sorting.ego 122: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1889  TRACE  : (13)        sorting.ego 123: SetThis                        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1890  TRACE  : (13)        sorting.ego 124: Member          "Equal"        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1891  TRACE  : (13)        sorting.ego 125: Load            "f"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1892  TRACE  : (13)        sorting.ego 126: Load            "f2"           stack[ 5]: [0, 2, 4, 5, 6], compiler.TestEqual(), compiler.Te...
[20210409144645] 1893  TRACE  : (13)        sorting.ego 127: Call            2              stack[ 6]: [0, 2, 4, 5, 6], [0, 2, 4, 5, 6], compiler.TestEqu...
[20210409144645] 1894  TRACE  : (13)        sorting.ego 128: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1895  TRACE  : (13)        sorting.ego 129: DropToMarker                   stack[ 3]: true, M<assert>, M<call>
[20210409144645] 1896  TRACE  : (13)        sorting.ego 130: AtLine          23             stack[ 1]: M<call>
[20210409144645] 1897  TRACE  : (13)        sorting.ego 131: ModeCheck       "test"         stack[ 1]: M<call>
[20210409144645] 1898  TRACE  : (13)        sorting.ego 132: Push            M<assert>      stack[ 1]: M<call>
[20210409144645] 1899  TRACE  : (13)        sorting.ego 133: Load            "T"            stack[ 2]: M<assert>, M<call>
[20210409144645] 1900  TRACE  : (13)        sorting.ego 134: Member          "assert"       stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1901  TRACE  : (13)        sorting.ego 135: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1902  TRACE  : (13)        sorting.ego 136: SetThis                        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1903  TRACE  : (13)        sorting.ego 137: Member          "Equal"        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1904  TRACE  : (13)        sorting.ego 138: Load            "f"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1905  TRACE  : (13)        sorting.ego 139: Push            0              stack[ 5]: [0, 2, 4, 5, 6], compiler.TestEqual(), compiler.Te...
[20210409144645] 1906  TRACE  : (13)        sorting.ego 140: Push            2              stack[ 6]: 0, [0, 2, 4, 5, 6], compiler.TestEqual(), compiler...
[20210409144645] 1907  TRACE  : (13)        sorting.ego 141: Push            4              stack[ 7]: 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(), compi...
[20210409144645] 1908  TRACE  : (13)        sorting.ego 142: Push            5              stack[ 8]: 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(), co...
[20210409144645] 1909  TRACE  : (13)        sorting.ego 143: Push            6              stack[ 9]: 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual(),...
[20210409144645] 1910  TRACE  : (13)        sorting.ego 144: Push            T(float)       stack[10]: 6, 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler.TestEqual...
[20210409144645] 1911  TRACE  : (13)        sorting.ego 145: MakeArray       5              stack[11]: T(float), 6, 5, 4, 2, 0, [0, 2, 4, 5, 6], compiler...
[20210409144645] 1912  TRACE  : (13)        sorting.ego 146: Call            2              stack[ 6]: [0, 2, 4, 5, 6], [0, 2, 4, 5, 6], compiler.TestEqu...
[20210409144645] 1913  TRACE  : (13)        sorting.ego 147: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1914  TRACE  : (13)        sorting.ego 148: DropToMarker                   stack[ 3]: true, M<assert>, M<call>
[20210409144645] 1915  TRACE  : (13)        sorting.ego 149: AtLine          26             stack[ 1]: M<call>
[20210409144645] 1916  TRACE  : (13)        sorting.ego 150: Push            M<let>         stack[ 1]: M<call>
[20210409144645] 1917  TRACE  : (13)        sorting.ego 151: Push            "apple"        stack[ 2]: M<let>, M<call>
[20210409144645] 1918  TRACE  : (13)        sorting.ego 152: Push            ""             stack[ 3]: apple, M<let>, M<call>
[20210409144645] 1919  TRACE  : (13)        sorting.ego 153: Push            "pear"         stack[ 4]: , apple, M<let>, M<call>
[20210409144645] 1920  TRACE  : (13)        sorting.ego 154: Push            "cherry"       stack[ 5]: pear, , apple, M<let>, M<call>
[20210409144645] 1921  TRACE  : (13)        sorting.ego 155: Push            T(string)      stack[ 6]: cherry, pear, , apple, M<let>, M<call>
[20210409144645] 1922  TRACE  : (13)        sorting.ego 156: MakeArray       4              stack[ 7]: T(string), cherry, pear, , apple, M<let>, M<call>
[20210409144645] 1923  TRACE  : (13)        sorting.ego 157: SymbolCreate    "s"            stack[ 3]: ["apple", "", "pear", "cherry"], M<let>, M<call>
[20210409144645] 1924  TRACE  : (13)        sorting.ego 158: Store           "s"            stack[ 3]: ["apple", "", "pear", "cherry"], M<let>, M<call>
[20210409144645] 1925  TRACE  : (13)        sorting.ego 159: DropToMarker    M<let>         stack[ 2]: M<let>, M<call>
[20210409144645] 1926  TRACE  : (13)        sorting.ego 160: AtLine          27             stack[ 1]: M<call>
[20210409144645] 1927  TRACE  : (13)        sorting.ego 161: Push            M<let>         stack[ 1]: M<call>
[20210409144645] 1928  TRACE  : (13)        sorting.ego 162: Load            "sort"         stack[ 2]: M<let>, M<call>
[20210409144645] 1929  TRACE  : (13)        sorting.ego 163: SetThis                        stack[ 3]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1930  TRACE  : (13)        sorting.ego 164: Member          "Strings"      stack[ 3]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 1931  TRACE  : (13)        sorting.ego 165: Load            "s"            stack[ 3]: functions.SortStrings(), M<let>, M<call>
[20210409144645] 1932  TRACE  : (13)        sorting.ego 166: Call            1              stack[ 4]: ["apple", "", "pear", "cherry"], functions.SortStr...
[20210409144645] 1933  TRACE  : (13)        sorting.ego 167: SymbolCreate    "s2"           stack[ 3]: ["", "apple", "cherry", "pear"], M<let>, M<call>
[20210409144645] 1934  TRACE  : (13)        sorting.ego 168: Store           "s2"           stack[ 3]: ["", "apple", "cherry", "pear"], M<let>, M<call>
[20210409144645] 1935  TRACE  : (13)        sorting.ego 169: DropToMarker    M<let>         stack[ 2]: M<let>, M<call>
[20210409144645] 1936  TRACE  : (13)        sorting.ego 170: AtLine          28             stack[ 1]: M<call>
[20210409144645] 1937  TRACE  : (13)        sorting.ego 171: ModeCheck       "test"         stack[ 1]: M<call>
[20210409144645] 1938  TRACE  : (13)        sorting.ego 172: Push            M<assert>      stack[ 1]: M<call>
[20210409144645] 1939  TRACE  : (13)        sorting.ego 173: Load            "T"            stack[ 2]: M<assert>, M<call>
[20210409144645] 1940  TRACE  : (13)        sorting.ego 174: Member          "assert"       stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1941  TRACE  : (13)        sorting.ego 175: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1942  TRACE  : (13)        sorting.ego 176: SetThis                        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1943  TRACE  : (13)        sorting.ego 177: Member          "Equal"        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1944  TRACE  : (13)        sorting.ego 178: Load            "s"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1945  TRACE  : (13)        sorting.ego 179: Load            "s2"           stack[ 5]: ["", "apple", "cherry", "pear"], compiler.TestEqua...
[20210409144645] 1946  TRACE  : (13)        sorting.ego 180: Call            2              stack[ 6]: ["", "apple", "cherry", "pear"], ["", "apple", "ch...
[20210409144645] 1947  TRACE  : (13)        sorting.ego 181: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1948  TRACE  : (13)        sorting.ego 182: DropToMarker                   stack[ 3]: true, M<assert>, M<call>
[20210409144645] 1949  TRACE  : (13)        sorting.ego 183: AtLine          29             stack[ 1]: M<call>
[20210409144645] 1950  TRACE  : (13)        sorting.ego 184: ModeCheck       "test"         stack[ 1]: M<call>
[20210409144645] 1951  TRACE  : (13)        sorting.ego 185: Push            M<assert>      stack[ 1]: M<call>
[20210409144645] 1952  TRACE  : (13)        sorting.ego 186: Load            "T"            stack[ 2]: M<assert>, M<call>
[20210409144645] 1953  TRACE  : (13)        sorting.ego 187: Member          "assert"       stack[ 3]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1954  TRACE  : (13)        sorting.ego 188: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1955  TRACE  : (13)        sorting.ego 189: SetThis                        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1956  TRACE  : (13)        sorting.ego 190: Member          "Equal"        stack[ 4]: Testing{ description: "datamodel: sort package" },...
[20210409144645] 1957  TRACE  : (13)        sorting.ego 191: Load            "s"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 1958  TRACE  : (13)        sorting.ego 192: Push            ""             stack[ 5]: ["", "apple", "cherry", "pear"], compiler.TestEqua...
[20210409144645] 1959  TRACE  : (13)        sorting.ego 193: Push            "apple"        stack[ 6]: , ["", "apple", "cherry", "pear"], compiler.TestEq...
[20210409144645] 1960  TRACE  : (13)        sorting.ego 194: Push            "cherry"       stack[ 7]: apple, , ["", "apple", "cherry", "pear"], compiler...
[20210409144645] 1961  TRACE  : (13)        sorting.ego 195: Push            "pear"         stack[ 8]: cherry, apple, , ["", "apple", "cherry", "pear"], ...
[20210409144645] 1962  TRACE  : (13)        sorting.ego 196: Push            T(string)      stack[ 9]: pear, cherry, apple, , ["", "apple", "cherry", "pe...
[20210409144645] 1963  TRACE  : (13)        sorting.ego 197: MakeArray       4              stack[10]: T(string), pear, cherry, apple, , ["", "apple", "c...
[20210409144645] 1964  TRACE  : (13)        sorting.ego 198: Call            2              stack[ 6]: ["", "apple", "cherry", "pear"], ["", "apple", "ch...
[20210409144645] 1965  TRACE  : (13)        sorting.ego 199: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<call>
[20210409144645] 1966  TRACE  : (13)        sorting.ego 200: DropToMarker                   stack[ 3]: true, M<assert>, M<call>
[20210409144645] 1967  TRACE  : (13)        sorting.ego 201: PopScope                       stack[ 1]: M<call>
[20210409144645] 1968  TRACE  : (13)        sorting.ego 202: AtLine          31             stack[ 1]: M<call>
[20210409144645] 1969  TRACE  : (13)        sorting.ego 203: ModeCheck       "test"         stack[ 1]: M<call>
[20210409144645] 1970  TRACE  : (13)        sorting.ego 204: Push            "(PASS)  "     stack[ 1]: M<call>
[20210409144645] 1971  TRACE  : (13)        sorting.ego 205: Print                          stack[ 2]: (PASS)  , M<call>
[20210409144645] 1972  TRACE  : (13)        sorting.ego 206: Timer           1              stack[ 1]: M<call>
[20210409144645] 1973  TRACE  : (13)        sorting.ego 207: Print                          stack[ 2]: 0.002s, M<call>
[20210409144645] 1974  TRACE  : (13)        sorting.ego 208: Say             true           stack[ 1]: M<call>
TEST: datamodel: sort package                           (PASS)  0.002s
[20210409144645] 1975  TRACE  : (13)        sorting.ego 209: Stop                           stack[ 1]: M<call>
[20210409144645] 1976  TRACE  : *** Tracing unicode_strings.ego (14)  
[20210409144645] 1977  TRACE  : (14) unicode_strings.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 1978  TRACE  : (14) unicode_strings.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 1979  TRACE  : (14) unicode_strings.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 1980  TRACE  : (14) unicode_strings.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1981  TRACE  : (14) unicode_strings.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 1982  TRACE  : (14) unicode_strings.ego   5: Push            Testing{ description: "datamodel: non-ascii string values" } stack[ 0]: <empty>
[20210409144645] 1983  TRACE  : (14) unicode_strings.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: non-ascii string...
[20210409144645] 1984  TRACE  : (14) unicode_strings.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 1985  TRACE  : (14) unicode_strings.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 1986  TRACE  : (14) unicode_strings.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 1987  TRACE  : (14) unicode_strings.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: non-ascii string...
[20210409144645] 1988  TRACE  : (14) unicode_strings.ego  11: Print                          stack[ 1]: datamodel: non-ascii string values
[20210409144645] 1989  TRACE  : (14) unicode_strings.ego  12: Push            "                " stack[ 0]: <empty>
[20210409144645] 1990  TRACE  : (14) unicode_strings.ego  13: Print                          stack[ 1]:                 
[20210409144645] 1991  TRACE  : (14) unicode_strings.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 1992  TRACE  : (14) unicode_strings.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 1993  TRACE  : (14) unicode_strings.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 1994  TRACE  : (14) unicode_strings.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 1995  TRACE  : (14) unicode_strings.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 1996  TRACE  : (14) unicode_strings.ego  19: Push            "دانش"         stack[ 1]: M<let>
[20210409144645] 1997  TRACE  : (14) unicode_strings.ego  20: SymbolCreate    "x"            stack[ 2]: دانش, M<let>
[20210409144645] 1998  TRACE  : (14) unicode_strings.ego  21: Store           "x"            stack[ 2]: دانش, M<let>
[20210409144645] 1999  TRACE  : (14) unicode_strings.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2000  TRACE  : (14) unicode_strings.ego  23: AtLine          6              stack[ 0]: <empty>
[20210409144645] 2001  TRACE  : (14) unicode_strings.ego  24: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2002  TRACE  : (14) unicode_strings.ego  25: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2003  TRACE  : (14) unicode_strings.ego  26: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2004  TRACE  : (14) unicode_strings.ego  27: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: non-ascii string...
[20210409144645] 2005  TRACE  : (14) unicode_strings.ego  28: Load            "len"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2006  TRACE  : (14) unicode_strings.ego  29: Load            "x"            stack[ 3]: functions.Length(), compiler.TestAssert(), M<asser...
[20210409144645] 2007  TRACE  : (14) unicode_strings.ego  30: Call            1              stack[ 4]: دانش, functions.Length(), compiler.TestAssert(...
[20210409144645] 2008  TRACE  : (14) unicode_strings.ego  31: Push            8              stack[ 3]: 8, compiler.TestAssert(), M<assert>
[20210409144645] 2009  TRACE  : (14) unicode_strings.ego  32: Equal                          stack[ 4]: 8, 8, compiler.TestAssert(), M<assert>
[20210409144645] 2010  TRACE  : (14) unicode_strings.ego  33: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2011  TRACE  : (14) unicode_strings.ego  34: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2012  TRACE  : (14) unicode_strings.ego  35: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2013  TRACE  : (14) unicode_strings.ego  36: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2014  TRACE  : (14) unicode_strings.ego  37: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2015  TRACE  : (14) unicode_strings.ego  38: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2016  TRACE  : (14) unicode_strings.ego  39: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: non-ascii string...
[20210409144645] 2017  TRACE  : (14) unicode_strings.ego  40: Load            "strings"      stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2018  TRACE  : (14) unicode_strings.ego  41: SetThis                        stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2019  TRACE  : (14) unicode_strings.ego  42: Member          "Length"       stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2020  TRACE  : (14) unicode_strings.ego  43: Load            "x"            stack[ 3]: functions.StrLen(), compiler.TestAssert(), M<asser...
[20210409144645] 2021  TRACE  : (14) unicode_strings.ego  44: Call            1              stack[ 4]: دانش, functions.StrLen(), compiler.TestAssert(...
[20210409144645] 2022  TRACE  : (14) unicode_strings.ego  45: Push            4              stack[ 3]: 4, compiler.TestAssert(), M<assert>
[20210409144645] 2023  TRACE  : (14) unicode_strings.ego  46: Equal                          stack[ 4]: 4, 4, compiler.TestAssert(), M<assert>
[20210409144645] 2024  TRACE  : (14) unicode_strings.ego  47: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2025  TRACE  : (14) unicode_strings.ego  48: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2026  TRACE  : (14) unicode_strings.ego  49: AtLine          8              stack[ 0]: <empty>
[20210409144645] 2027  TRACE  : (14) unicode_strings.ego  50: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2028  TRACE  : (14) unicode_strings.ego  51: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2029  TRACE  : (14) unicode_strings.ego  52: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2030  TRACE  : (14) unicode_strings.ego  53: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: non-ascii string...
[20210409144645] 2031  TRACE  : (14) unicode_strings.ego  54: Load            "strings"      stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2032  TRACE  : (14) unicode_strings.ego  55: SetThis                        stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2033  TRACE  : (14) unicode_strings.ego  56: Member          "Left"         stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2034  TRACE  : (14) unicode_strings.ego  57: Load            "x"            stack[ 3]: functions.Left(), compiler.TestAssert(), M<assert>
[20210409144645] 2035  TRACE  : (14) unicode_strings.ego  58: Push            1              stack[ 4]: دانش, functions.Left(), compiler.TestAssert(),...
[20210409144645] 2036  TRACE  : (14) unicode_strings.ego  59: Call            2              stack[ 5]: 1, دانش, functions.Left(), compiler.TestAssert...
[20210409144645] 2037  TRACE  : (14) unicode_strings.ego  60: Push            "د"            stack[ 3]: د, compiler.TestAssert(), M<assert>
[20210409144645] 2038  TRACE  : (14) unicode_strings.ego  61: Equal                          stack[ 4]: د, د, compiler.TestAssert(), M<assert>
[20210409144645] 2039  TRACE  : (14) unicode_strings.ego  62: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2040  TRACE  : (14) unicode_strings.ego  63: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2041  TRACE  : (14) unicode_strings.ego  64: PopScope                       stack[ 0]: <empty>
[20210409144645] 2042  TRACE  : (14) unicode_strings.ego  65: AtLine          11             stack[ 0]: <empty>
[20210409144645] 2043  TRACE  : (14) unicode_strings.ego  66: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2044  TRACE  : (14) unicode_strings.ego  67: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2045  TRACE  : (14) unicode_strings.ego  68: Print                          stack[ 1]: (PASS)  
[20210409144645] 2046  TRACE  : (14) unicode_strings.ego  69: Timer           1              stack[ 0]: <empty>
[20210409144645] 2047  TRACE  : (14) unicode_strings.ego  70: Print                          stack[ 1]: 0.588ms
[20210409144645] 2048  TRACE  : (14) unicode_strings.ego  71: Say             true           stack[ 0]: <empty>
TEST: datamodel: non-ascii string values                (PASS)  0.588ms
[20210409144645] 2049  TRACE  : (14) unicode_strings.ego  72: Stop                           stack[ 0]: <empty>
[20210409144645] 2050  TRACE  : *** Tracing unicode_symbols.ego (15)  
[20210409144645] 2051  TRACE  : (15) unicode_symbols.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 2052  TRACE  : (15) unicode_symbols.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2053  TRACE  : (15) unicode_symbols.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2054  TRACE  : (15) unicode_symbols.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2055  TRACE  : (15) unicode_symbols.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2056  TRACE  : (15) unicode_symbols.ego   5: Push            Testing{ description: "datamodel: non-ascii identifiers" } stack[ 0]: <empty>
[20210409144645] 2057  TRACE  : (15) unicode_symbols.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "datamodel: non-ascii identi...
[20210409144645] 2058  TRACE  : (15) unicode_symbols.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2059  TRACE  : (15) unicode_symbols.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2060  TRACE  : (15) unicode_symbols.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2061  TRACE  : (15) unicode_symbols.ego  10: Member          "description"  stack[ 1]: Testing{ description: "datamodel: non-ascii identi...
[20210409144645] 2062  TRACE  : (15) unicode_symbols.ego  11: Print                          stack[ 1]: datamodel: non-ascii identifiers
[20210409144645] 2063  TRACE  : (15) unicode_symbols.ego  12: Push            "                  " stack[ 0]: <empty>
[20210409144645] 2064  TRACE  : (15) unicode_symbols.ego  13: Print                          stack[ 1]:                   
[20210409144645] 2065  TRACE  : (15) unicode_symbols.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2066  TRACE  : (15) unicode_symbols.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 2067  TRACE  : (15) unicode_symbols.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 2068  TRACE  : (15) unicode_symbols.ego  17: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2069  TRACE  : (15) unicode_symbols.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2070  TRACE  : (15) unicode_symbols.ego  19: Push            "test"         stack[ 1]: M<let>
[20210409144645] 2071  TRACE  : (15) unicode_symbols.ego  20: SymbolCreate    "دانش"         stack[ 2]: test, M<let>
[20210409144645] 2072  TRACE  : (15) unicode_symbols.ego  21: Store           "دانش"         stack[ 2]: test, M<let>
[20210409144645] 2073  TRACE  : (15) unicode_symbols.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2074  TRACE  : (15) unicode_symbols.ego  23: AtLine          12             stack[ 0]: <empty>
[20210409144645] 2075  TRACE  : (15) unicode_symbols.ego  24: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2076  TRACE  : (15) unicode_symbols.ego  25: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2077  TRACE  : (15) unicode_symbols.ego  26: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2078  TRACE  : (15) unicode_symbols.ego  27: Member          "assert"       stack[ 2]: Testing{ description: "datamodel: non-ascii identi...
[20210409144645] 2079  TRACE  : (15) unicode_symbols.ego  28: Load            "دانش"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2080  TRACE  : (15) unicode_symbols.ego  29: Push            "test"         stack[ 3]: test, compiler.TestAssert(), M<assert>
[20210409144645] 2081  TRACE  : (15) unicode_symbols.ego  30: Equal                          stack[ 4]: test, test, compiler.TestAssert(), M<assert>
[20210409144645] 2082  TRACE  : (15) unicode_symbols.ego  31: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2083  TRACE  : (15) unicode_symbols.ego  32: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2084  TRACE  : (15) unicode_symbols.ego  33: PopScope                       stack[ 0]: <empty>
[20210409144645] 2085  TRACE  : (15) unicode_symbols.ego  34: AtLine          15             stack[ 0]: <empty>
[20210409144645] 2086  TRACE  : (15) unicode_symbols.ego  35: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2087  TRACE  : (15) unicode_symbols.ego  36: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2088  TRACE  : (15) unicode_symbols.ego  37: Print                          stack[ 1]: (PASS)  
[20210409144645] 2089  TRACE  : (15) unicode_symbols.ego  38: Timer           1              stack[ 0]: <empty>
[20210409144645] 2090  TRACE  : (15) unicode_symbols.ego  39: Print                          stack[ 1]: 0.192ms
[20210409144645] 2091  TRACE  : (15) unicode_symbols.ego  40: Say             true           stack[ 0]: <empty>
TEST: datamodel: non-ascii identifiers                  (PASS)  0.192ms
[20210409144645] 2092  TRACE  : (15) unicode_symbols.ego  41: Stop                           stack[ 0]: <empty>
[20210409144645] 2093  TRACE  : *** Tracing error.ego (16)  
[20210409144645] 2094  TRACE  : (16)          error.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 2095  TRACE  : (16)          error.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2096  TRACE  : (16)          error.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2097  TRACE  : (16)          error.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2098  TRACE  : (16)          error.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2099  TRACE  : (16)          error.ego   5: Push            Testing{ description: "directives: @error with a try/catch block" } stack[ 0]: <empty>
[20210409144645] 2100  TRACE  : (16)          error.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "directives: @error with a t...
[20210409144645] 2101  TRACE  : (16)          error.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2102  TRACE  : (16)          error.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2103  TRACE  : (16)          error.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2104  TRACE  : (16)          error.ego  10: Member          "description"  stack[ 1]: Testing{ description: "directives: @error with a t...
[20210409144645] 2105  TRACE  : (16)          error.ego  11: Print                          stack[ 1]: directives: @error with a try/catch block
[20210409144645] 2106  TRACE  : (16)          error.ego  12: Push            "         "    stack[ 0]: <empty>
[20210409144645] 2107  TRACE  : (16)          error.ego  13: Print                          stack[ 1]:          
[20210409144645] 2108  TRACE  : (16)          error.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2109  TRACE  : (16)          error.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 2110  TRACE  : (16)          error.ego  16: Try             @28            stack[ 0]: <empty>
[20210409144645] 2111  TRACE  : (16)          error.ego  17: AtLine          3              stack[ 0]: <empty>
[20210409144645] 2112  TRACE  : (16)          error.ego  18: PushScope                      stack[ 0]: <empty>
[20210409144645] 2113  TRACE  : (16)          error.ego  19: AtLine          4              stack[ 0]: <empty>
[20210409144645] 2114  TRACE  : (16)          error.ego  20: Push            "test error"   stack[ 0]: <empty>
[20210409144645] 2115  TRACE  : (16)          error.ego  21: Panic           false          stack[ 1]: test error
[20210409144645] 2116  TRACE  : (16)  *** Branch to 28 on error: at error.ego(line 4), Panic: test error
[20210409144645] 2117  TRACE  : (16)          error.ego  28: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2118  TRACE  : (16)          error.ego  29: PopScope                       stack[ 0]: <empty>
[20210409144645] 2119  TRACE  : (16)          error.ego  30: TryPop                         stack[ 0]: <empty>
[20210409144645] 2120  TRACE  : (16)          error.ego  31: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2121  TRACE  : (16)          error.ego  32: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2122  TRACE  : (16)          error.ego  33: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2123  TRACE  : (16)          error.ego  34: Print                          stack[ 1]: (PASS)  
[20210409144645] 2124  TRACE  : (16)          error.ego  35: Timer           1              stack[ 0]: <empty>
[20210409144645] 2125  TRACE  : (16)          error.ego  36: Print                          stack[ 1]: 0.111ms
[20210409144645] 2126  TRACE  : (16)          error.ego  37: Say             true           stack[ 0]: <empty>
TEST: directives: @error with a try/catch block         (PASS)  0.111ms
[20210409144645] 2127  TRACE  : (16)          error.ego  38: Stop                           stack[ 0]: <empty>
[20210409144645] 2128  TRACE  : *** Tracing template.ego (17)  
[20210409144645] 2129  TRACE  : (17)       template.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 2130  TRACE  : (17)       template.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2131  TRACE  : (17)       template.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2132  TRACE  : (17)       template.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2133  TRACE  : (17)       template.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2134  TRACE  : (17)       template.ego   5: Push            Testing{ description: "directives: @template test" } stack[ 0]: <empty>
[20210409144645] 2135  TRACE  : (17)       template.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "directives: @template test"...
[20210409144645] 2136  TRACE  : (17)       template.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2137  TRACE  : (17)       template.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2138  TRACE  : (17)       template.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2139  TRACE  : (17)       template.ego  10: Member          "description"  stack[ 1]: Testing{ description: "directives: @template test"...
[20210409144645] 2140  TRACE  : (17)       template.ego  11: Print                          stack[ 1]: directives: @template test
[20210409144645] 2141  TRACE  : (17)       template.ego  12: Push            "                        " stack[ 0]: <empty>
[20210409144645] 2142  TRACE  : (17)       template.ego  13: Print                          stack[ 1]:                         
[20210409144645] 2143  TRACE  : (17)       template.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2144  TRACE  : (17)       template.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 2145  TRACE  : (17)       template.ego  16: Push            "g.V()"        stack[ 0]: <empty>
[20210409144645] 2146  TRACE  : (17)       template.ego  17: Template        "g_prefix"     stack[ 1]: g.V()
[20210409144645] 2147  TRACE  : (17)       template.ego  18: SymbolCreate    "g_prefix"     stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2148  TRACE  : (17)       template.ego  19: Store           "g_prefix"     stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2149  TRACE  : (17)       template.ego  20: AtLine          6              stack[ 0]: <empty>
[20210409144645] 2150  TRACE  : (17)       template.ego  21: Push            ".label().dedup()" stack[ 0]: <empty>
[20210409144645] 2151  TRACE  : (17)       template.ego  22: Template        "g_labels"     stack[ 1]: .label().dedup()
[20210409144645] 2152  TRACE  : (17)       template.ego  23: SymbolCreate    "g_labels"     stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2153  TRACE  : (17)       template.ego  24: Store           "g_labels"     stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2154  TRACE  : (17)       template.ego  25: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2155  TRACE  : (17)       template.ego  26: Push            "{{template "g_prefix"}}{{template "g_labels"}}" stack[ 0]: <empty>
[20210409144645] 2156  TRACE  : (17)       template.ego  27: Template        "g_getlabels"  stack[ 1]: {{template "g_prefix"}}{{template "g_labels"}}
[20210409144645] 2157  TRACE  : (17)       template.ego  28: SymbolCreate    "g_getlabels"  stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2158  TRACE  : (17)       template.ego  29: Store           "g_getlabels"  stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2159  TRACE  : (17)       template.ego  30: AtLine          9              stack[ 0]: <empty>
[20210409144645] 2160  TRACE  : (17)       template.ego  31: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2161  TRACE  : (17)       template.ego  32: Load            "strings"      stack[ 1]: M<let>
[20210409144645] 2162  TRACE  : (17)       template.ego  33: SetThis                        stack[ 2]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2163  TRACE  : (17)       template.ego  34: Member          "Template"     stack[ 2]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2164  TRACE  : (17)       template.ego  35: Load            "g_getlabels"  stack[ 2]: functions.Template(), M<let>
[20210409144645] 2165  TRACE  : (17)       template.ego  36: Call            1              stack[ 3]: ptr <*template.Template Value>, functions.Template...
[20210409144645] 2166  TRACE  : (17)       template.ego  37: SymbolCreate    "s1"           stack[ 4]: g.V().label().dedup(), <nil>, M<results>, M<let>
[20210409144645] 2167  TRACE  : (17)       template.ego  38: Store           "s1"           stack[ 4]: g.V().label().dedup(), <nil>, M<results>, M<let>
[20210409144645] 2168  TRACE  : (17)       template.ego  39: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 2169  TRACE  : (17)       template.ego  40: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2170  TRACE  : (17)       template.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2171  TRACE  : (17)       template.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2172  TRACE  : (17)       template.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2173  TRACE  : (17)       template.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "directives: @template test"...
[20210409144645] 2174  TRACE  : (17)       template.ego  45: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2175  TRACE  : (17)       template.ego  46: SetThis                        stack[ 3]: Testing{ description: "directives: @template test"...
[20210409144645] 2176  TRACE  : (17)       template.ego  47: Member          "Equal"        stack[ 3]: Testing{ description: "directives: @template test"...
[20210409144645] 2177  TRACE  : (17)       template.ego  48: Load            "s1"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2178  TRACE  : (17)       template.ego  49: Push            "g.V().label().dedup()" stack[ 4]: g.V().label().dedup(), compiler.TestEqual(), compi...
[20210409144645] 2179  TRACE  : (17)       template.ego  50: Call            2              stack[ 5]: g.V().label().dedup(), g.V().label().dedup(), comp...
[20210409144645] 2180  TRACE  : (17)       template.ego  51: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2181  TRACE  : (17)       template.ego  52: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2182  TRACE  : (17)       template.ego  53: AtLine          13             stack[ 0]: <empty>
[20210409144645] 2183  TRACE  : (17)       template.ego  54: Push            "{{template "g_prefix"}}.hasLabel("{{.Label}}")" stack[ 0]: <empty>
[20210409144645] 2184  TRACE  : (17)       template.ego  55: Template        "g_getbytype"  stack[ 1]: {{template "g_prefix"}}.hasLabel("{{.Label}}")
[20210409144645] 2185  TRACE  : (17)       template.ego  56: SymbolCreate    "g_getbytype"  stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2186  TRACE  : (17)       template.ego  57: Store           "g_getbytype"  stack[ 1]: ptr <*template.Template Value>
[20210409144645] 2187  TRACE  : (17)       template.ego  58: AtLine          15             stack[ 0]: <empty>
[20210409144645] 2188  TRACE  : (17)       template.ego  59: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2189  TRACE  : (17)       template.ego  60: Push            "cars"         stack[ 1]: M<let>
[20210409144645] 2190  TRACE  : (17)       template.ego  61: Push            "Label"        stack[ 2]: cars, M<let>
[20210409144645] 2191  TRACE  : (17)       template.ego  62: Struct          1              stack[ 3]: Label, cars, M<let>
[20210409144645] 2192  TRACE  : (17)       template.ego  63: SymbolCreate    "parms"        stack[ 2]: { Label: "cars" }, M<let>
[20210409144645] 2193  TRACE  : (17)       template.ego  64: Store           "parms"        stack[ 2]: { Label: "cars" }, M<let>
[20210409144645] 2194  TRACE  : (17)       template.ego  65: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2195  TRACE  : (17)       template.ego  66: AtLine          16             stack[ 0]: <empty>
[20210409144645] 2196  TRACE  : (17)       template.ego  67: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2197  TRACE  : (17)       template.ego  68: Load            "strings"      stack[ 1]: M<let>
[20210409144645] 2198  TRACE  : (17)       template.ego  69: SetThis                        stack[ 2]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2199  TRACE  : (17)       template.ego  70: Member          "Template"     stack[ 2]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 2200  TRACE  : (17)       template.ego  71: Load            "g_getbytype"  stack[ 2]: functions.Template(), M<let>
[20210409144645] 2201  TRACE  : (17)       template.ego  72: Load            "parms"        stack[ 3]: ptr <*template.Template Value>, functions.Template...
[20210409144645] 2202  TRACE  : (17)       template.ego  73: Call            2              stack[ 4]: { Label: "cars" }, ptr <*template.Template Value>,...
[20210409144645] 2203  TRACE  : (17)       template.ego  74: SymbolCreate    "s2"           stack[ 4]: g.V().hasLabel("cars"), <nil>, M<results>, M<let>
[20210409144645] 2204  TRACE  : (17)       template.ego  75: Store           "s2"           stack[ 4]: g.V().hasLabel("cars"), <nil>, M<results>, M<let>
[20210409144645] 2205  TRACE  : (17)       template.ego  76: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 2206  TRACE  : (17)       template.ego  77: AtLine          17             stack[ 0]: <empty>
[20210409144645] 2207  TRACE  : (17)       template.ego  78: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2208  TRACE  : (17)       template.ego  79: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2209  TRACE  : (17)       template.ego  80: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2210  TRACE  : (17)       template.ego  81: Member          "assert"       stack[ 2]: Testing{ description: "directives: @template test"...
[20210409144645] 2211  TRACE  : (17)       template.ego  82: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2212  TRACE  : (17)       template.ego  83: SetThis                        stack[ 3]: Testing{ description: "directives: @template test"...
[20210409144645] 2213  TRACE  : (17)       template.ego  84: Member          "Equal"        stack[ 3]: Testing{ description: "directives: @template test"...
[20210409144645] 2214  TRACE  : (17)       template.ego  85: Load            "s2"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2215  TRACE  : (17)       template.ego  86: Push            "g.V().hasLabel("cars")" stack[ 4]: g.V().hasLabel("cars"), compiler.TestEqual(), comp...
[20210409144645] 2216  TRACE  : (17)       template.ego  87: Call            2              stack[ 5]: g.V().hasLabel("cars"), g.V().hasLabel("cars"), co...
[20210409144645] 2217  TRACE  : (17)       template.ego  88: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2218  TRACE  : (17)       template.ego  89: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2219  TRACE  : (17)       template.ego  90: AtLine          19             stack[ 0]: <empty>
[20210409144645] 2220  TRACE  : (17)       template.ego  91: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2221  TRACE  : (17)       template.ego  92: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2222  TRACE  : (17)       template.ego  93: Print                          stack[ 1]: (PASS)  
[20210409144645] 2223  TRACE  : (17)       template.ego  94: Timer           1              stack[ 0]: <empty>
[20210409144645] 2224  TRACE  : (17)       template.ego  95: Print                          stack[ 1]: 0.956ms
[20210409144645] 2225  TRACE  : (17)       template.ego  96: Say             true           stack[ 0]: <empty>
TEST: directives: @template test                        (PASS)  0.956ms
[20210409144645] 2226  TRACE  : (17)       template.ego  97: Stop                           stack[ 0]: <empty>
[20210409144645] 2227  TRACE  : *** Tracing breakcontinue.ego (18)  
[20210409144645] 2228  TRACE  : (18)  breakcontinue.ego   0: AtLine          3              stack[ 0]: <empty>
[20210409144645] 2229  TRACE  : (18)  breakcontinue.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2230  TRACE  : (18)  breakcontinue.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2231  TRACE  : (18)  breakcontinue.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2232  TRACE  : (18)  breakcontinue.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2233  TRACE  : (18)  breakcontinue.ego   5: Push            Testing{ description: "flow: break and continue from loop" } stack[ 0]: <empty>
[20210409144645] 2234  TRACE  : (18)  breakcontinue.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: break and continue fr...
[20210409144645] 2235  TRACE  : (18)  breakcontinue.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2236  TRACE  : (18)  breakcontinue.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2237  TRACE  : (18)  breakcontinue.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2238  TRACE  : (18)  breakcontinue.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: break and continue fr...
[20210409144645] 2239  TRACE  : (18)  breakcontinue.ego  11: Print                          stack[ 1]: flow: break and continue from loop
[20210409144645] 2240  TRACE  : (18)  breakcontinue.ego  12: Push            "                " stack[ 0]: <empty>
[20210409144645] 2241  TRACE  : (18)  breakcontinue.ego  13: Print                          stack[ 1]:                 
[20210409144645] 2242  TRACE  : (18)  breakcontinue.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2243  TRACE  : (18)  breakcontinue.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 2244  TRACE  : (18)  breakcontinue.ego  16: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2245  TRACE  : (18)  breakcontinue.ego  17: Push            1              stack[ 1]: M<let>
[20210409144645] 2246  TRACE  : (18)  breakcontinue.ego  18: Push            5              stack[ 2]: 1, M<let>
[20210409144645] 2247  TRACE  : (18)  breakcontinue.ego  19: Push            3              stack[ 3]: 5, 1, M<let>
[20210409144645] 2248  TRACE  : (18)  breakcontinue.ego  20: Push            6              stack[ 4]: 3, 5, 1, M<let>
[20210409144645] 2249  TRACE  : (18)  breakcontinue.ego  21: Push            9              stack[ 5]: 6, 3, 5, 1, M<let>
[20210409144645] 2250  TRACE  : (18)  breakcontinue.ego  22: Push            10             stack[ 6]: 9, 6, 3, 5, 1, M<let>
[20210409144645] 2251  TRACE  : (18)  breakcontinue.ego  23: Array           6              stack[ 7]: 10, 9, 6, 3, 5, 1, M<let>
[20210409144645] 2252  TRACE  : (18)  breakcontinue.ego  24: SymbolCreate    "x"            stack[ 2]: [1, 5, 3, 6, 9, 10], M<let>
[20210409144645] 2253  TRACE  : (18)  breakcontinue.ego  25: Store           "x"            stack[ 2]: [1, 5, 3, 6, 9, 10], M<let>
[20210409144645] 2254  TRACE  : (18)  breakcontinue.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2255  TRACE  : (18)  breakcontinue.ego  27: AtLine          5              stack[ 0]: <empty>
[20210409144645] 2256  TRACE  : (18)  breakcontinue.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2257  TRACE  : (18)  breakcontinue.ego  29: Push            0              stack[ 1]: M<let>
[20210409144645] 2258  TRACE  : (18)  breakcontinue.ego  30: SymbolCreate    "t"            stack[ 2]: 0, M<let>
[20210409144645] 2259  TRACE  : (18)  breakcontinue.ego  31: Store           "t"            stack[ 2]: 0, M<let>
[20210409144645] 2260  TRACE  : (18)  breakcontinue.ego  32: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2261  TRACE  : (18)  breakcontinue.ego  33: AtLine          6              stack[ 0]: <empty>
[20210409144645] 2262  TRACE  : (18)  breakcontinue.ego  34: PushScope                      stack[ 0]: <empty>
[20210409144645] 2263  TRACE  : (18)  breakcontinue.ego  35: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2264  TRACE  : (18)  breakcontinue.ego  36: Load            "x"            stack[ 1]: M<let>
[20210409144645] 2265  TRACE  : (18)  breakcontinue.ego  37: RangeInit       [i ]           stack[ 2]: [1, 5, 3, 6, 9, 10], M<let>
[20210409144645] 2266  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2267  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2268  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2269  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2270  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2271  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2272  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 0, functions.Bool(), M<let>
[20210409144645] 2273  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 0, functions.Bool(), M<let>
[20210409144645] 2274  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2275  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: false, M<let>
[20210409144645] 2276  TRACE  : (18)  breakcontinue.ego  53: AtLine          11             stack[ 1]: M<let>
[20210409144645] 2277  TRACE  : (18)  breakcontinue.ego  54: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2278  TRACE  : (18)  breakcontinue.ego  55: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2279  TRACE  : (18)  breakcontinue.ego  56: Push            9              stack[ 3]: 0, functions.Bool(), M<let>
[20210409144645] 2280  TRACE  : (18)  breakcontinue.ego  57: Equal                          stack[ 4]: 9, 0, functions.Bool(), M<let>
[20210409144645] 2281  TRACE  : (18)  breakcontinue.ego  58: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2282  TRACE  : (18)  breakcontinue.ego  59: BranchFalse     @65            stack[ 2]: false, M<let>
[20210409144645] 2283  TRACE  : (18)  breakcontinue.ego  65: AtLine          14             stack[ 1]: M<let>
[20210409144645] 2284  TRACE  : (18)  breakcontinue.ego  66: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2285  TRACE  : (18)  breakcontinue.ego  67: Load            "t"            stack[ 2]: M<let>, M<let>
[20210409144645] 2286  TRACE  : (18)  breakcontinue.ego  68: Load            "i"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 2287  TRACE  : (18)  breakcontinue.ego  69: Add                            stack[ 4]: 0, 0, M<let>, M<let>
[20210409144645] 2288  TRACE  : (18)  breakcontinue.ego  70: Store           "t"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 2289  TRACE  : (18)  breakcontinue.ego  71: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2290  TRACE  : (18)  breakcontinue.ego  72: PopScope                       stack[ 1]: M<let>
[20210409144645] 2291  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2292  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2293  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2294  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2295  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2296  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2297  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2298  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 1, functions.Bool(), M<let>
[20210409144645] 2299  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 1, functions.Bool(), M<let>
[20210409144645] 2300  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2301  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: false, M<let>
[20210409144645] 2302  TRACE  : (18)  breakcontinue.ego  53: AtLine          11             stack[ 1]: M<let>
[20210409144645] 2303  TRACE  : (18)  breakcontinue.ego  54: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2304  TRACE  : (18)  breakcontinue.ego  55: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2305  TRACE  : (18)  breakcontinue.ego  56: Push            9              stack[ 3]: 1, functions.Bool(), M<let>
[20210409144645] 2306  TRACE  : (18)  breakcontinue.ego  57: Equal                          stack[ 4]: 9, 1, functions.Bool(), M<let>
[20210409144645] 2307  TRACE  : (18)  breakcontinue.ego  58: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2308  TRACE  : (18)  breakcontinue.ego  59: BranchFalse     @65            stack[ 2]: false, M<let>
[20210409144645] 2309  TRACE  : (18)  breakcontinue.ego  65: AtLine          14             stack[ 1]: M<let>
[20210409144645] 2310  TRACE  : (18)  breakcontinue.ego  66: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2311  TRACE  : (18)  breakcontinue.ego  67: Load            "t"            stack[ 2]: M<let>, M<let>
[20210409144645] 2312  TRACE  : (18)  breakcontinue.ego  68: Load            "i"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 2313  TRACE  : (18)  breakcontinue.ego  69: Add                            stack[ 4]: 1, 0, M<let>, M<let>
[20210409144645] 2314  TRACE  : (18)  breakcontinue.ego  70: Store           "t"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 2315  TRACE  : (18)  breakcontinue.ego  71: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2316  TRACE  : (18)  breakcontinue.ego  72: PopScope                       stack[ 1]: M<let>
[20210409144645] 2317  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2318  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2319  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2320  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2321  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2322  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2323  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2324  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 2, functions.Bool(), M<let>
[20210409144645] 2325  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 2, functions.Bool(), M<let>
[20210409144645] 2326  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2327  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: false, M<let>
[20210409144645] 2328  TRACE  : (18)  breakcontinue.ego  53: AtLine          11             stack[ 1]: M<let>
[20210409144645] 2329  TRACE  : (18)  breakcontinue.ego  54: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2330  TRACE  : (18)  breakcontinue.ego  55: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2331  TRACE  : (18)  breakcontinue.ego  56: Push            9              stack[ 3]: 2, functions.Bool(), M<let>
[20210409144645] 2332  TRACE  : (18)  breakcontinue.ego  57: Equal                          stack[ 4]: 9, 2, functions.Bool(), M<let>
[20210409144645] 2333  TRACE  : (18)  breakcontinue.ego  58: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2334  TRACE  : (18)  breakcontinue.ego  59: BranchFalse     @65            stack[ 2]: false, M<let>
[20210409144645] 2335  TRACE  : (18)  breakcontinue.ego  65: AtLine          14             stack[ 1]: M<let>
[20210409144645] 2336  TRACE  : (18)  breakcontinue.ego  66: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2337  TRACE  : (18)  breakcontinue.ego  67: Load            "t"            stack[ 2]: M<let>, M<let>
[20210409144645] 2338  TRACE  : (18)  breakcontinue.ego  68: Load            "i"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 2339  TRACE  : (18)  breakcontinue.ego  69: Add                            stack[ 4]: 2, 1, M<let>, M<let>
[20210409144645] 2340  TRACE  : (18)  breakcontinue.ego  70: Store           "t"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 2341  TRACE  : (18)  breakcontinue.ego  71: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2342  TRACE  : (18)  breakcontinue.ego  72: PopScope                       stack[ 1]: M<let>
[20210409144645] 2343  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2344  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2345  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2346  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2347  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2348  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2349  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2350  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 3, functions.Bool(), M<let>
[20210409144645] 2351  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 3, functions.Bool(), M<let>
[20210409144645] 2352  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 2353  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: true, M<let>
[20210409144645] 2354  TRACE  : (18)  breakcontinue.ego  48: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2355  TRACE  : (18)  breakcontinue.ego  49: PushScope                      stack[ 1]: M<let>
[20210409144645] 2356  TRACE  : (18)  breakcontinue.ego  50: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2357  TRACE  : (18)  breakcontinue.ego  51: Branch          @73            stack[ 1]: M<let>
[20210409144645] 2358  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2359  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2360  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2361  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2362  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2363  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2364  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2365  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 4, functions.Bool(), M<let>
[20210409144645] 2366  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 4, functions.Bool(), M<let>
[20210409144645] 2367  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2368  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: false, M<let>
[20210409144645] 2369  TRACE  : (18)  breakcontinue.ego  53: AtLine          11             stack[ 1]: M<let>
[20210409144645] 2370  TRACE  : (18)  breakcontinue.ego  54: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2371  TRACE  : (18)  breakcontinue.ego  55: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2372  TRACE  : (18)  breakcontinue.ego  56: Push            9              stack[ 3]: 4, functions.Bool(), M<let>
[20210409144645] 2373  TRACE  : (18)  breakcontinue.ego  57: Equal                          stack[ 4]: 9, 4, functions.Bool(), M<let>
[20210409144645] 2374  TRACE  : (18)  breakcontinue.ego  58: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2375  TRACE  : (18)  breakcontinue.ego  59: BranchFalse     @65            stack[ 2]: false, M<let>
[20210409144645] 2376  TRACE  : (18)  breakcontinue.ego  65: AtLine          14             stack[ 1]: M<let>
[20210409144645] 2377  TRACE  : (18)  breakcontinue.ego  66: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2378  TRACE  : (18)  breakcontinue.ego  67: Load            "t"            stack[ 2]: M<let>, M<let>
[20210409144645] 2379  TRACE  : (18)  breakcontinue.ego  68: Load            "i"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 2380  TRACE  : (18)  breakcontinue.ego  69: Add                            stack[ 4]: 4, 3, M<let>, M<let>
[20210409144645] 2381  TRACE  : (18)  breakcontinue.ego  70: Store           "t"            stack[ 3]: 7, M<let>, M<let>
[20210409144645] 2382  TRACE  : (18)  breakcontinue.ego  71: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2383  TRACE  : (18)  breakcontinue.ego  72: PopScope                       stack[ 1]: M<let>
[20210409144645] 2384  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2385  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2386  TRACE  : (18)  breakcontinue.ego  39: AtLine          6              stack[ 1]: M<let>
[20210409144645] 2387  TRACE  : (18)  breakcontinue.ego  40: PushScope                      stack[ 1]: M<let>
[20210409144645] 2388  TRACE  : (18)  breakcontinue.ego  41: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2389  TRACE  : (18)  breakcontinue.ego  42: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2390  TRACE  : (18)  breakcontinue.ego  43: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2391  TRACE  : (18)  breakcontinue.ego  44: Push            3              stack[ 3]: 5, functions.Bool(), M<let>
[20210409144645] 2392  TRACE  : (18)  breakcontinue.ego  45: Equal                          stack[ 4]: 3, 5, functions.Bool(), M<let>
[20210409144645] 2393  TRACE  : (18)  breakcontinue.ego  46: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2394  TRACE  : (18)  breakcontinue.ego  47: BranchFalse     @53            stack[ 2]: false, M<let>
[20210409144645] 2395  TRACE  : (18)  breakcontinue.ego  53: AtLine          11             stack[ 1]: M<let>
[20210409144645] 2396  TRACE  : (18)  breakcontinue.ego  54: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 2397  TRACE  : (18)  breakcontinue.ego  55: Load            "i"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 2398  TRACE  : (18)  breakcontinue.ego  56: Push            9              stack[ 3]: 5, functions.Bool(), M<let>
[20210409144645] 2399  TRACE  : (18)  breakcontinue.ego  57: Equal                          stack[ 4]: 9, 5, functions.Bool(), M<let>
[20210409144645] 2400  TRACE  : (18)  breakcontinue.ego  58: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 2401  TRACE  : (18)  breakcontinue.ego  59: BranchFalse     @65            stack[ 2]: false, M<let>
[20210409144645] 2402  TRACE  : (18)  breakcontinue.ego  65: AtLine          14             stack[ 1]: M<let>
[20210409144645] 2403  TRACE  : (18)  breakcontinue.ego  66: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2404  TRACE  : (18)  breakcontinue.ego  67: Load            "t"            stack[ 2]: M<let>, M<let>
[20210409144645] 2405  TRACE  : (18)  breakcontinue.ego  68: Load            "i"            stack[ 3]: 7, M<let>, M<let>
[20210409144645] 2406  TRACE  : (18)  breakcontinue.ego  69: Add                            stack[ 4]: 5, 7, M<let>, M<let>
[20210409144645] 2407  TRACE  : (18)  breakcontinue.ego  70: Store           "t"            stack[ 3]: 12, M<let>, M<let>
[20210409144645] 2408  TRACE  : (18)  breakcontinue.ego  71: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2409  TRACE  : (18)  breakcontinue.ego  72: PopScope                       stack[ 1]: M<let>
[20210409144645] 2410  TRACE  : (18)  breakcontinue.ego  73: Branch          @38            stack[ 1]: M<let>
[20210409144645] 2411  TRACE  : (18)  breakcontinue.ego  38: RangeNext       74             stack[ 1]: M<let>
[20210409144645] 2412  TRACE  : (18)  breakcontinue.ego  74: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 2413  TRACE  : (18)  breakcontinue.ego  75: PopScope                       stack[ 1]: M<let>
[20210409144645] 2414  TRACE  : (18)  breakcontinue.ego  76: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 2415  TRACE  : (18)  breakcontinue.ego  77: AtLine          17             stack[ 0]: <empty>
[20210409144645] 2416  TRACE  : (18)  breakcontinue.ego  78: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2417  TRACE  : (18)  breakcontinue.ego  79: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2418  TRACE  : (18)  breakcontinue.ego  80: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2419  TRACE  : (18)  breakcontinue.ego  81: Member          "assert"       stack[ 2]: Testing{ description: "flow: break and continue fr...
[20210409144645] 2420  TRACE  : (18)  breakcontinue.ego  82: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2421  TRACE  : (18)  breakcontinue.ego  83: SetThis                        stack[ 3]: Testing{ description: "flow: break and continue fr...
[20210409144645] 2422  TRACE  : (18)  breakcontinue.ego  84: Member          "Equal"        stack[ 3]: Testing{ description: "flow: break and continue fr...
[20210409144645] 2423  TRACE  : (18)  breakcontinue.ego  85: Load            "t"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2424  TRACE  : (18)  breakcontinue.ego  86: Push            12             stack[ 4]: 12, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 2425  TRACE  : (18)  breakcontinue.ego  87: Call            2              stack[ 5]: 12, 12, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 2426  TRACE  : (18)  breakcontinue.ego  88: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2427  TRACE  : (18)  breakcontinue.ego  89: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2428  TRACE  : (18)  breakcontinue.ego  90: AtLine          18             stack[ 0]: <empty>
[20210409144645] 2429  TRACE  : (18)  breakcontinue.ego  91: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2430  TRACE  : (18)  breakcontinue.ego  92: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2431  TRACE  : (18)  breakcontinue.ego  93: Print                          stack[ 1]: (PASS)  
[20210409144645] 2432  TRACE  : (18)  breakcontinue.ego  94: Timer           1              stack[ 0]: <empty>
[20210409144645] 2433  TRACE  : (18)  breakcontinue.ego  95: Print                          stack[ 1]: 0.001s
[20210409144645] 2434  TRACE  : (18)  breakcontinue.ego  96: Say             true           stack[ 0]: <empty>
TEST: flow: break and continue from loop                (PASS)  0.001s
[20210409144645] 2435  TRACE  : (18)  breakcontinue.ego  97: Stop                           stack[ 0]: <empty>
[20210409144645] 2436  TRACE  : *** Tracing defer.ego (19)  
[20210409144645] 2437  TRACE  : (19)          defer.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 2438  TRACE  : (19)          defer.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2439  TRACE  : (19)          defer.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2440  TRACE  : (19)          defer.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2441  TRACE  : (19)          defer.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2442  TRACE  : (19)          defer.ego   5: Push            Testing{ description: "flow: defer statement" } stack[ 0]: <empty>
[20210409144645] 2443  TRACE  : (19)          defer.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: defer statement" }
[20210409144645] 2444  TRACE  : (19)          defer.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2445  TRACE  : (19)          defer.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2446  TRACE  : (19)          defer.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2447  TRACE  : (19)          defer.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: defer statement" }
[20210409144645] 2448  TRACE  : (19)          defer.ego  11: Print                          stack[ 1]: flow: defer statement
[20210409144645] 2449  TRACE  : (19)          defer.ego  12: Push            "                             " stack[ 0]: <empty>
[20210409144645] 2450  TRACE  : (19)          defer.ego  13: Print                          stack[ 1]:                              
[20210409144645] 2451  TRACE  : (19)          defer.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2452  TRACE  : (19)          defer.ego  15: Push            defer_test()   stack[ 0]: <empty>
[20210409144645] 2453  TRACE  : (19)          defer.ego  16: StoreAlways     "defer_test"   stack[ 1]: defer_test()
[20210409144645] 2454  TRACE  : (19)          defer.ego  17: AtLine          15             stack[ 0]: <empty>
[20210409144645] 2455  TRACE  : (19)          defer.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2456  TRACE  : (19)          defer.ego  19: Load            "defer_test"   stack[ 1]: M<let>
[20210409144645] 2457  TRACE  : (19)          defer.ego  20: Call            0              stack[ 2]: defer_test(), M<let>
[20210409144645] 2458  TRACE  : (19)         defer_test   0: ArgCheck        [0 0 defer_test] stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2459  TRACE  : (19)         defer_test   1: AtLine          4              stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2460  TRACE  : (19)         defer_test   2: PushScope                      stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2461  TRACE  : (19)         defer_test   3: AtLine          6              stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2462  TRACE  : (19)         defer_test   4: Branch          @14            stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2463  TRACE  : (19)         defer_test  14: AtLine          10             stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2464  TRACE  : (19)         defer_test  15: Push            M<let>         stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2465  TRACE  : (19)         defer_test  16: Push            "result string" stack[ 3]: M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2466  TRACE  : (19)         defer_test  17: SymbolCreate    "r"            stack[ 4]: result string, M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2467  TRACE  : (19)         defer_test  18: Store           "r"            stack[ 4]: result string, M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2468  TRACE  : (19)         defer_test  19: DropToMarker    M<let>         stack[ 3]: M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2469  TRACE  : (19)         defer_test  20: AtLine          11             stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2470  TRACE  : (19)         defer_test  21: LocalCall       @5             stack[ 2]: F<defer.ego:15>, M<let>
[20210409144645] 2471  TRACE  : (19)         defer_test   5: AtLine          6              stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2472  TRACE  : (19)         defer_test   6: PushScope                      stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2473  TRACE  : (19)         defer_test   7: AtLine          7              stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2474  TRACE  : (19)         defer_test   8: Push            M<let>         stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2475  TRACE  : (19)         defer_test   9: Push            "better result" stack[ 4]: M<let>, F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2476  TRACE  : (19)         defer_test  10: Store           "r"            stack[ 5]: better result, M<let>, F<defer_test:11>, F<defer.e...
[20210409144645] 2477  TRACE  : (19)         defer_test  11: DropToMarker    M<let>         stack[ 4]: M<let>, F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2478  TRACE  : (19)         defer_test  12: PopScope                       stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2479  TRACE  : (19)         defer_test  13: Return                         stack[ 3]: F<defer_test:11>, F<defer.ego:15>, M<let>
[20210409144645] 2480  TRACE  : (19)         defer_test  22: Load            "r"            stack[ 3]: M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2481  TRACE  : (19)         defer_test  23: Coerce          T(string)      stack[ 4]: better result, M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2482  TRACE  : (19)         defer_test  24: Return          true           stack[ 4]: better result, M<let>, F<defer.ego:15>, M<let>
[20210409144645] 2483  TRACE  : (19)          defer.ego  21: SymbolCreate    "result"       stack[ 3]: better result, M<let>, M<let>
[20210409144645] 2484  TRACE  : (19)          defer.ego  22: Store           "result"       stack[ 3]: better result, M<let>, M<let>
[20210409144645] 2485  TRACE  : (19)          defer.ego  23: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2486  TRACE  : (19)          defer.ego  24: AtLine          16             stack[ 1]: M<let>
[20210409144645] 2487  TRACE  : (19)          defer.ego  25: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 2488  TRACE  : (19)          defer.ego  26: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 2489  TRACE  : (19)          defer.ego  27: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 2490  TRACE  : (19)          defer.ego  28: Member          "assert"       stack[ 3]: Testing{ description: "flow: defer statement" }, M...
[20210409144645] 2491  TRACE  : (19)          defer.ego  29: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 2492  TRACE  : (19)          defer.ego  30: SetThis                        stack[ 4]: Testing{ description: "flow: defer statement" }, c...
[20210409144645] 2493  TRACE  : (19)          defer.ego  31: Member          "Equal"        stack[ 4]: Testing{ description: "flow: defer statement" }, c...
[20210409144645] 2494  TRACE  : (19)          defer.ego  32: Load            "result"       stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2495  TRACE  : (19)          defer.ego  33: Push            "better result" stack[ 5]: better result, compiler.TestEqual(), compiler.Test...
[20210409144645] 2496  TRACE  : (19)          defer.ego  34: Call            2              stack[ 6]: better result, better result, compiler.TestEqual()...
[20210409144645] 2497  TRACE  : (19)          defer.ego  35: Call            1              stack[ 4]: true, compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 2498  TRACE  : (19)          defer.ego  36: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 2499  TRACE  : (19)          defer.ego  37: AtLine          17             stack[ 1]: M<let>
[20210409144645] 2500  TRACE  : (19)          defer.ego  38: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 2501  TRACE  : (19)          defer.ego  39: Push            "(PASS)  "     stack[ 1]: M<let>
[20210409144645] 2502  TRACE  : (19)          defer.ego  40: Print                          stack[ 2]: (PASS)  , M<let>
[20210409144645] 2503  TRACE  : (19)          defer.ego  41: Timer           1              stack[ 1]: M<let>
[20210409144645] 2504  TRACE  : (19)          defer.ego  42: Print                          stack[ 2]: 0.485ms, M<let>
[20210409144645] 2505  TRACE  : (19)          defer.ego  43: Say             true           stack[ 1]: M<let>
TEST: flow: defer statement                             (PASS)  0.485ms
[20210409144645] 2506  TRACE  : (19)          defer.ego  44: Stop                           stack[ 1]: M<let>
[20210409144645] 2507  TRACE  : *** Tracing divbyzero.ego (20)  
[20210409144645] 2508  TRACE  : (20)      divbyzero.ego   0: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2509  TRACE  : (20)      divbyzero.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2510  TRACE  : (20)      divbyzero.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2511  TRACE  : (20)      divbyzero.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2512  TRACE  : (20)      divbyzero.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2513  TRACE  : (20)      divbyzero.ego   5: Push            Testing{ description: "flow: divide by zero error trap" } stack[ 0]: <empty>
[20210409144645] 2514  TRACE  : (20)      divbyzero.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: divide by zero error ...
[20210409144645] 2515  TRACE  : (20)      divbyzero.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2516  TRACE  : (20)      divbyzero.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2517  TRACE  : (20)      divbyzero.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2518  TRACE  : (20)      divbyzero.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: divide by zero error ...
[20210409144645] 2519  TRACE  : (20)      divbyzero.ego  11: Print                          stack[ 1]: flow: divide by zero error trap
[20210409144645] 2520  TRACE  : (20)      divbyzero.ego  12: Push            "                   " stack[ 0]: <empty>
[20210409144645] 2521  TRACE  : (20)      divbyzero.ego  13: Print                          stack[ 1]:                    
[20210409144645] 2522  TRACE  : (20)      divbyzero.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2523  TRACE  : (20)      divbyzero.ego  15: Push            half()         stack[ 0]: <empty>
[20210409144645] 2524  TRACE  : (20)      divbyzero.ego  16: StoreAlways     "half"         stack[ 1]: half()
[20210409144645] 2525  TRACE  : (20)      divbyzero.ego  17: AtLine          20             stack[ 0]: <empty>
[20210409144645] 2526  TRACE  : (20)      divbyzero.ego  18: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2527  TRACE  : (20)      divbyzero.ego  19: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2528  TRACE  : (20)      divbyzero.ego  20: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2529  TRACE  : (20)      divbyzero.ego  21: Member          "assert"       stack[ 2]: Testing{ description: "flow: divide by zero error ...
[20210409144645] 2530  TRACE  : (20)      divbyzero.ego  22: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2531  TRACE  : (20)      divbyzero.ego  23: SetThis                        stack[ 3]: Testing{ description: "flow: divide by zero error ...
[20210409144645] 2532  TRACE  : (20)      divbyzero.ego  24: Member          "Equal"        stack[ 3]: Testing{ description: "flow: divide by zero error ...
[20210409144645] 2533  TRACE  : (20)      divbyzero.ego  25: Load            "half"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2534  TRACE  : (20)      divbyzero.ego  26: Push            1              stack[ 4]: half(), compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 2535  TRACE  : (20)      divbyzero.ego  27: Call            1              stack[ 5]: 1, half(), compiler.TestEqual(), compiler.TestAsse...
[20210409144645] 2536  TRACE  : (20)               half   0: ArgCheck        [1 1 half]     stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2537  TRACE  : (20)               half   1: Load            "__args"       stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2538  TRACE  : (20)               half   2: LoadIndex       0              stack[ 5]: [1], F<divbyzero.ego:20>, compiler.TestEqual(), co...
[20210409144645] 2539  TRACE  : (20)               half   3: RequiredType    T(int)         stack[ 5]: 1, F<divbyzero.ego:20>, compiler.TestEqual(), comp...
[20210409144645] 2540  TRACE  : (20)               half   4: StoreAlways     "x"            stack[ 5]: 1, F<divbyzero.ego:20>, compiler.TestEqual(), comp...
[20210409144645] 2541  TRACE  : (20)               half   5: AtLine          9              stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2542  TRACE  : (20)               half   6: PushScope                      stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2543  TRACE  : (20)               half   7: AtLine          10             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2544  TRACE  : (20)               half   8: Try             @19            stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2545  TRACE  : (20)               half   9: AtLine          10             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2546  TRACE  : (20)               half  10: PushScope                      stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2547  TRACE  : (20)               half  11: AtLine          11             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2548  TRACE  : (20)               half  12: Load            "x"            stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2549  TRACE  : (20)               half  13: Push            0              stack[ 5]: 1, F<divbyzero.ego:20>, compiler.TestEqual(), comp...
[20210409144645] 2550  TRACE  : (20)               half  14: Div                            stack[ 6]: 0, 1, F<divbyzero.ego:20>, compiler.TestEqual(), c...
[20210409144645] 2551  TRACE  : (20)  *** Branch to 19 on error: at divbyzero.ego(line 11), division by zero
[20210409144645] 2552  TRACE  : (20)               half  19: SymbolCreate    "e"            stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2553  TRACE  : (20)               half  20: Load            "_error"       stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2554  TRACE  : (20)               half  21: StoreAlways     "e"            stack[ 5]: at divbyzero.ego(line 11), division by zero, F<div...
[20210409144645] 2555  TRACE  : (20)               half  22: AtLine          12             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2556  TRACE  : (20)               half  23: PushScope                      stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2557  TRACE  : (20)               half  24: AtLine          13             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2558  TRACE  : (20)               half  25: Load            "bool"         stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2559  TRACE  : (20)               half  26: Load            "type"         stack[ 5]: functions.Bool(), F<divbyzero.ego:20>, compiler.Te...
[20210409144645] 2560  TRACE  : (20)               half  27: Load            "e"            stack[ 6]: functions.Type(), functions.Bool(), F<divbyzero.eg...
[20210409144645] 2561  TRACE  : (20)               half  28: Call            1              stack[ 7]: at divbyzero.ego(line 11), division by zero, funct...
[20210409144645] 2562  TRACE  : (20)               half  29: Push            "error"        stack[ 6]: error, functions.Bool(), F<divbyzero.ego:20>, comp...
[20210409144645] 2563  TRACE  : (20)               half  30: NotEqual                       stack[ 7]: error, error, functions.Bool(), F<divbyzero.ego:20...
[20210409144645] 2564  TRACE  : (20)               half  31: Call            1              stack[ 6]: false, functions.Bool(), F<divbyzero.ego:20>, comp...
[20210409144645] 2565  TRACE  : (20)               half  32: BranchFalse     @40            stack[ 5]: false, F<divbyzero.ego:20>, compiler.TestEqual(), ...
[20210409144645] 2566  TRACE  : (20)               half  40: AtLine          16             stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2567  TRACE  : (20)               half  41: Push            -55            stack[ 4]: F<divbyzero.ego:20>, compiler.TestEqual(), compile...
[20210409144645] 2568  TRACE  : (20)               half  42: Coerce          T(float)       stack[ 5]: -55, F<divbyzero.ego:20>, compiler.TestEqual(), co...
[20210409144645] 2569  TRACE  : (20)               half  43: Return          true           stack[ 5]: -55, F<divbyzero.ego:20>, compiler.TestEqual(), co...
[20210409144645] 2570  TRACE  : (20)      divbyzero.ego  28: Push            -55            stack[ 4]: -55, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 2571  TRACE  : (20)      divbyzero.ego  29: Call            2              stack[ 5]: -55, -55, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 2572  TRACE  : (20)      divbyzero.ego  30: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2573  TRACE  : (20)      divbyzero.ego  31: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2574  TRACE  : (20)      divbyzero.ego  32: AtLine          21             stack[ 0]: <empty>
[20210409144645] 2575  TRACE  : (20)      divbyzero.ego  33: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2576  TRACE  : (20)      divbyzero.ego  34: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2577  TRACE  : (20)      divbyzero.ego  35: Print                          stack[ 1]: (PASS)  
[20210409144645] 2578  TRACE  : (20)      divbyzero.ego  36: Timer           1              stack[ 0]: <empty>
[20210409144645] 2579  TRACE  : (20)      divbyzero.ego  37: Print                          stack[ 1]: 0.566ms
[20210409144645] 2580  TRACE  : (20)      divbyzero.ego  38: Say             true           stack[ 0]: <empty>
TEST: flow: divide by zero error trap                   (PASS)  0.566ms
[20210409144645] 2581  TRACE  : (20)      divbyzero.ego  39: Stop                           stack[ 0]: <empty>
[20210409144645] 2582  TRACE  : *** Tracing forloops.ego (21)  
[20210409144645] 2583  TRACE  : (21)       forloops.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 2584  TRACE  : (21)       forloops.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2585  TRACE  : (21)       forloops.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2586  TRACE  : (21)       forloops.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2587  TRACE  : (21)       forloops.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2588  TRACE  : (21)       forloops.ego   5: Push            Testing{ description: "flow: basic for-loops" } stack[ 0]: <empty>
[20210409144645] 2589  TRACE  : (21)       forloops.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: basic for-loops" }
[20210409144645] 2590  TRACE  : (21)       forloops.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2591  TRACE  : (21)       forloops.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2592  TRACE  : (21)       forloops.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2593  TRACE  : (21)       forloops.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: basic for-loops" }
[20210409144645] 2594  TRACE  : (21)       forloops.ego  11: Print                          stack[ 1]: flow: basic for-loops
[20210409144645] 2595  TRACE  : (21)       forloops.ego  12: Push            "                             " stack[ 0]: <empty>
[20210409144645] 2596  TRACE  : (21)       forloops.ego  13: Print                          stack[ 1]:                              
[20210409144645] 2597  TRACE  : (21)       forloops.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2598  TRACE  : (21)       forloops.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 2599  TRACE  : (21)       forloops.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 2600  TRACE  : (21)       forloops.ego  17: AtLine          6              stack[ 0]: <empty>
[20210409144645] 2601  TRACE  : (21)       forloops.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2602  TRACE  : (21)       forloops.ego  19: Push            0              stack[ 1]: M<let>
[20210409144645] 2603  TRACE  : (21)       forloops.ego  20: SymbolCreate    "s"            stack[ 2]: 0, M<let>
[20210409144645] 2604  TRACE  : (21)       forloops.ego  21: Store           "s"            stack[ 2]: 0, M<let>
[20210409144645] 2605  TRACE  : (21)       forloops.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2606  TRACE  : (21)       forloops.ego  23: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2607  TRACE  : (21)       forloops.ego  24: PushScope                      stack[ 0]: <empty>
[20210409144645] 2608  TRACE  : (21)       forloops.ego  25: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2609  TRACE  : (21)       forloops.ego  26: Push            1              stack[ 1]: M<let>
[20210409144645] 2610  TRACE  : (21)       forloops.ego  27: SymbolCreate    "n"            stack[ 2]: 1, M<let>
[20210409144645] 2611  TRACE  : (21)       forloops.ego  28: Store           "n"            stack[ 2]: 1, M<let>
[20210409144645] 2612  TRACE  : (21)       forloops.ego  29: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2613  TRACE  : (21)       forloops.ego  30: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2614  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 1]: M<let>
[20210409144645] 2615  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 2]: 1, M<let>
[20210409144645] 2616  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 3]: 5, 1, M<let>
[20210409144645] 2617  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 2]: true, M<let>
[20210409144645] 2618  TRACE  : (21)       forloops.ego  35: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2619  TRACE  : (21)       forloops.ego  36: PushScope                      stack[ 1]: M<let>
[20210409144645] 2620  TRACE  : (21)       forloops.ego  37: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2621  TRACE  : (21)       forloops.ego  38: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2622  TRACE  : (21)       forloops.ego  39: Load            "s"            stack[ 2]: M<let>, M<let>
[20210409144645] 2623  TRACE  : (21)       forloops.ego  40: Load            "n"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 2624  TRACE  : (21)       forloops.ego  41: Add                            stack[ 4]: 1, 0, M<let>, M<let>
[20210409144645] 2625  TRACE  : (21)       forloops.ego  42: Store           "s"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 2626  TRACE  : (21)       forloops.ego  43: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2627  TRACE  : (21)       forloops.ego  44: PopScope                       stack[ 1]: M<let>
[20210409144645] 2628  TRACE  : (21)       forloops.ego  45: Load            "n"            stack[ 1]: M<let>
[20210409144645] 2629  TRACE  : (21)       forloops.ego  46: Push            1              stack[ 2]: 1, M<let>
[20210409144645] 2630  TRACE  : (21)       forloops.ego  47: Add                            stack[ 3]: 1, 1, M<let>
[20210409144645] 2631  TRACE  : (21)       forloops.ego  48: Store           "n"            stack[ 2]: 2, M<let>
[20210409144645] 2632  TRACE  : (21)       forloops.ego  49: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2633  TRACE  : (21)       forloops.ego  50: Branch          @31            stack[ 0]: <empty>
[20210409144645] 2634  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2635  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 1]: 2
[20210409144645] 2636  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 2]: 5, 2
[20210409144645] 2637  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 1]: true
[20210409144645] 2638  TRACE  : (21)       forloops.ego  35: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2639  TRACE  : (21)       forloops.ego  36: PushScope                      stack[ 0]: <empty>
[20210409144645] 2640  TRACE  : (21)       forloops.ego  37: AtLine          8              stack[ 0]: <empty>
[20210409144645] 2641  TRACE  : (21)       forloops.ego  38: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2642  TRACE  : (21)       forloops.ego  39: Load            "s"            stack[ 1]: M<let>
[20210409144645] 2643  TRACE  : (21)       forloops.ego  40: Load            "n"            stack[ 2]: 1, M<let>
[20210409144645] 2644  TRACE  : (21)       forloops.ego  41: Add                            stack[ 3]: 2, 1, M<let>
[20210409144645] 2645  TRACE  : (21)       forloops.ego  42: Store           "s"            stack[ 2]: 3, M<let>
[20210409144645] 2646  TRACE  : (21)       forloops.ego  43: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2647  TRACE  : (21)       forloops.ego  44: PopScope                       stack[ 0]: <empty>
[20210409144645] 2648  TRACE  : (21)       forloops.ego  45: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2649  TRACE  : (21)       forloops.ego  46: Push            1              stack[ 1]: 2
[20210409144645] 2650  TRACE  : (21)       forloops.ego  47: Add                            stack[ 2]: 1, 2
[20210409144645] 2651  TRACE  : (21)       forloops.ego  48: Store           "n"            stack[ 1]: 3
[20210409144645] 2652  TRACE  : (21)       forloops.ego  49: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 2653  TRACE  : (21)       forloops.ego  50: Branch          @31            stack[ 0]: <empty>
[20210409144645] 2654  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2655  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 1]: 3
[20210409144645] 2656  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 2]: 5, 3
[20210409144645] 2657  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 1]: true
[20210409144645] 2658  TRACE  : (21)       forloops.ego  35: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2659  TRACE  : (21)       forloops.ego  36: PushScope                      stack[ 0]: <empty>
[20210409144645] 2660  TRACE  : (21)       forloops.ego  37: AtLine          8              stack[ 0]: <empty>
[20210409144645] 2661  TRACE  : (21)       forloops.ego  38: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2662  TRACE  : (21)       forloops.ego  39: Load            "s"            stack[ 1]: M<let>
[20210409144645] 2663  TRACE  : (21)       forloops.ego  40: Load            "n"            stack[ 2]: 3, M<let>
[20210409144645] 2664  TRACE  : (21)       forloops.ego  41: Add                            stack[ 3]: 3, 3, M<let>
[20210409144645] 2665  TRACE  : (21)       forloops.ego  42: Store           "s"            stack[ 2]: 6, M<let>
[20210409144645] 2666  TRACE  : (21)       forloops.ego  43: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2667  TRACE  : (21)       forloops.ego  44: PopScope                       stack[ 0]: <empty>
[20210409144645] 2668  TRACE  : (21)       forloops.ego  45: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2669  TRACE  : (21)       forloops.ego  46: Push            1              stack[ 1]: 3
[20210409144645] 2670  TRACE  : (21)       forloops.ego  47: Add                            stack[ 2]: 1, 3
[20210409144645] 2671  TRACE  : (21)       forloops.ego  48: Store           "n"            stack[ 1]: 4
[20210409144645] 2672  TRACE  : (21)       forloops.ego  49: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 2673  TRACE  : (21)       forloops.ego  50: Branch          @31            stack[ 0]: <empty>
[20210409144645] 2674  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2675  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 1]: 4
[20210409144645] 2676  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 2]: 5, 4
[20210409144645] 2677  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 1]: true
[20210409144645] 2678  TRACE  : (21)       forloops.ego  35: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2679  TRACE  : (21)       forloops.ego  36: PushScope                      stack[ 0]: <empty>
[20210409144645] 2680  TRACE  : (21)       forloops.ego  37: AtLine          8              stack[ 0]: <empty>
[20210409144645] 2681  TRACE  : (21)       forloops.ego  38: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2682  TRACE  : (21)       forloops.ego  39: Load            "s"            stack[ 1]: M<let>
[20210409144645] 2683  TRACE  : (21)       forloops.ego  40: Load            "n"            stack[ 2]: 6, M<let>
[20210409144645] 2684  TRACE  : (21)       forloops.ego  41: Add                            stack[ 3]: 4, 6, M<let>
[20210409144645] 2685  TRACE  : (21)       forloops.ego  42: Store           "s"            stack[ 2]: 10, M<let>
[20210409144645] 2686  TRACE  : (21)       forloops.ego  43: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2687  TRACE  : (21)       forloops.ego  44: PopScope                       stack[ 0]: <empty>
[20210409144645] 2688  TRACE  : (21)       forloops.ego  45: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2689  TRACE  : (21)       forloops.ego  46: Push            1              stack[ 1]: 4
[20210409144645] 2690  TRACE  : (21)       forloops.ego  47: Add                            stack[ 2]: 1, 4
[20210409144645] 2691  TRACE  : (21)       forloops.ego  48: Store           "n"            stack[ 1]: 5
[20210409144645] 2692  TRACE  : (21)       forloops.ego  49: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 2693  TRACE  : (21)       forloops.ego  50: Branch          @31            stack[ 0]: <empty>
[20210409144645] 2694  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2695  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 1]: 5
[20210409144645] 2696  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 2]: 5, 5
[20210409144645] 2697  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 1]: true
[20210409144645] 2698  TRACE  : (21)       forloops.ego  35: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2699  TRACE  : (21)       forloops.ego  36: PushScope                      stack[ 0]: <empty>
[20210409144645] 2700  TRACE  : (21)       forloops.ego  37: AtLine          8              stack[ 0]: <empty>
[20210409144645] 2701  TRACE  : (21)       forloops.ego  38: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2702  TRACE  : (21)       forloops.ego  39: Load            "s"            stack[ 1]: M<let>
[20210409144645] 2703  TRACE  : (21)       forloops.ego  40: Load            "n"            stack[ 2]: 10, M<let>
[20210409144645] 2704  TRACE  : (21)       forloops.ego  41: Add                            stack[ 3]: 5, 10, M<let>
[20210409144645] 2705  TRACE  : (21)       forloops.ego  42: Store           "s"            stack[ 2]: 15, M<let>
[20210409144645] 2706  TRACE  : (21)       forloops.ego  43: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2707  TRACE  : (21)       forloops.ego  44: PopScope                       stack[ 0]: <empty>
[20210409144645] 2708  TRACE  : (21)       forloops.ego  45: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2709  TRACE  : (21)       forloops.ego  46: Push            1              stack[ 1]: 5
[20210409144645] 2710  TRACE  : (21)       forloops.ego  47: Add                            stack[ 2]: 1, 5
[20210409144645] 2711  TRACE  : (21)       forloops.ego  48: Store           "n"            stack[ 1]: 6
[20210409144645] 2712  TRACE  : (21)       forloops.ego  49: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 2713  TRACE  : (21)       forloops.ego  50: Branch          @31            stack[ 0]: <empty>
[20210409144645] 2714  TRACE  : (21)       forloops.ego  31: Load            "n"            stack[ 0]: <empty>
[20210409144645] 2715  TRACE  : (21)       forloops.ego  32: Push            5              stack[ 1]: 6
[20210409144645] 2716  TRACE  : (21)       forloops.ego  33: LTEQ                           stack[ 2]: 5, 6
[20210409144645] 2717  TRACE  : (21)       forloops.ego  34: BranchFalse     @51            stack[ 1]: false
[20210409144645] 2718  TRACE  : (21)       forloops.ego  51: PopScope                       stack[ 0]: <empty>
[20210409144645] 2719  TRACE  : (21)       forloops.ego  52: DropToMarker                   stack[ 0]: <empty>
[20210409144645] 2720  TRACE  : (21)       forloops.ego  53: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2721  TRACE  : (21)       forloops.ego  54: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2722  TRACE  : (21)       forloops.ego  55: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2723  TRACE  : (21)       forloops.ego  56: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2724  TRACE  : (21)       forloops.ego  57: Member          "assert"       stack[ 2]: Testing{ description: "flow: basic for-loops" }, M...
[20210409144645] 2725  TRACE  : (21)       forloops.ego  58: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2726  TRACE  : (21)       forloops.ego  59: SetThis                        stack[ 3]: Testing{ description: "flow: basic for-loops" }, c...
[20210409144645] 2727  TRACE  : (21)       forloops.ego  60: Member          "Equal"        stack[ 3]: Testing{ description: "flow: basic for-loops" }, c...
[20210409144645] 2728  TRACE  : (21)       forloops.ego  61: Load            "s"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2729  TRACE  : (21)       forloops.ego  62: Push            15             stack[ 4]: 15, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 2730  TRACE  : (21)       forloops.ego  63: Call            2              stack[ 5]: 15, 15, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 2731  TRACE  : (21)       forloops.ego  64: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2732  TRACE  : (21)       forloops.ego  65: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2733  TRACE  : (21)       forloops.ego  66: PopScope                       stack[ 0]: <empty>
[20210409144645] 2734  TRACE  : (21)       forloops.ego  67: AtLine          19             stack[ 0]: <empty>
[20210409144645] 2735  TRACE  : (21)       forloops.ego  68: PushScope                      stack[ 0]: <empty>
[20210409144645] 2736  TRACE  : (21)       forloops.ego  69: AtLine          20             stack[ 0]: <empty>
[20210409144645] 2737  TRACE  : (21)       forloops.ego  70: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2738  TRACE  : (21)       forloops.ego  71: Push            ""             stack[ 1]: M<let>
[20210409144645] 2739  TRACE  : (21)       forloops.ego  72: SymbolCreate    "s"            stack[ 2]: , M<let>
[20210409144645] 2740  TRACE  : (21)       forloops.ego  73: Store           "s"            stack[ 2]: , M<let>
[20210409144645] 2741  TRACE  : (21)       forloops.ego  74: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2742  TRACE  : (21)       forloops.ego  75: AtLine          21             stack[ 0]: <empty>
[20210409144645] 2743  TRACE  : (21)       forloops.ego  76: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2744  TRACE  : (21)       forloops.ego  77: Load            "append"       stack[ 1]: M<let>
[20210409144645] 2745  TRACE  : (21)       forloops.ego  78: Push            true           stack[ 2]: functions.Append(), M<let>
[20210409144645] 2746  TRACE  : (21)       forloops.ego  79: Push            "Tom"          stack[ 3]: true, functions.Append(), M<let>
[20210409144645] 2747  TRACE  : (21)       forloops.ego  80: Push            3.14           stack[ 4]: Tom, true, functions.Append(), M<let>
[20210409144645] 2748  TRACE  : (21)       forloops.ego  81: Push            42             stack[ 5]: 3.14, Tom, true, functions.Append(), M<let>
[20210409144645] 2749  TRACE  : (21)       forloops.ego  82: Call            4              stack[ 6]: 42, 3.14, Tom, true, functions.Append(), M<let>
[20210409144645] 2750  TRACE  : (21)       forloops.ego  83: SymbolCreate    "hlist"        stack[ 2]: [true, "Tom", 3.14, 42], M<let>
[20210409144645] 2751  TRACE  : (21)       forloops.ego  84: Store           "hlist"        stack[ 2]: [true, "Tom", 3.14, 42], M<let>
[20210409144645] 2752  TRACE  : (21)       forloops.ego  85: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2753  TRACE  : (21)       forloops.ego  86: AtLine          22             stack[ 0]: <empty>
[20210409144645] 2754  TRACE  : (21)       forloops.ego  87: PushScope                      stack[ 0]: <empty>
[20210409144645] 2755  TRACE  : (21)       forloops.ego  88: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2756  TRACE  : (21)       forloops.ego  89: Load            "hlist"        stack[ 1]: M<let>
[20210409144645] 2757  TRACE  : (21)       forloops.ego  90: RangeInit       [i j]          stack[ 2]: [true, "Tom", 3.14, 42], M<let>
[20210409144645] 2758  TRACE  : (21)       forloops.ego  91: RangeNext       105            stack[ 1]: M<let>
[20210409144645] 2759  TRACE  : (21)       forloops.ego  92: AtLine          22             stack[ 1]: M<let>
[20210409144645] 2760  TRACE  : (21)       forloops.ego  93: PushScope                      stack[ 1]: M<let>
[20210409144645] 2761  TRACE  : (21)       forloops.ego  94: AtLine          23             stack[ 1]: M<let>
[20210409144645] 2762  TRACE  : (21)       forloops.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2763  TRACE  : (21)       forloops.ego  96: Load            "s"            stack[ 2]: M<let>, M<let>
[20210409144645] 2764  TRACE  : (21)       forloops.ego  97: Load            "string"       stack[ 3]: , M<let>, M<let>
[20210409144645] 2765  TRACE  : (21)       forloops.ego  98: Load            "j"            stack[ 4]: functions.String(), , M<let>, M<let>
[20210409144645] 2766  TRACE  : (21)       forloops.ego  99: Call            1              stack[ 5]: true, functions.String(), , M<let>, M<let>
[20210409144645] 2767  TRACE  : (21)       forloops.ego 100: Add                            stack[ 4]: true, , M<let>, M<let>
[20210409144645] 2768  TRACE  : (21)       forloops.ego 101: Store           "s"            stack[ 3]: true, M<let>, M<let>
[20210409144645] 2769  TRACE  : (21)       forloops.ego 102: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2770  TRACE  : (21)       forloops.ego 103: PopScope                       stack[ 1]: M<let>
[20210409144645] 2771  TRACE  : (21)       forloops.ego 104: Branch          @91            stack[ 1]: M<let>
[20210409144645] 2772  TRACE  : (21)       forloops.ego  91: RangeNext       105            stack[ 1]: M<let>
[20210409144645] 2773  TRACE  : (21)       forloops.ego  92: AtLine          22             stack[ 1]: M<let>
[20210409144645] 2774  TRACE  : (21)       forloops.ego  93: PushScope                      stack[ 1]: M<let>
[20210409144645] 2775  TRACE  : (21)       forloops.ego  94: AtLine          23             stack[ 1]: M<let>
[20210409144645] 2776  TRACE  : (21)       forloops.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2777  TRACE  : (21)       forloops.ego  96: Load            "s"            stack[ 2]: M<let>, M<let>
[20210409144645] 2778  TRACE  : (21)       forloops.ego  97: Load            "string"       stack[ 3]: true, M<let>, M<let>
[20210409144645] 2779  TRACE  : (21)       forloops.ego  98: Load            "j"            stack[ 4]: functions.String(), true, M<let>, M<let>
[20210409144645] 2780  TRACE  : (21)       forloops.ego  99: Call            1              stack[ 5]: Tom, functions.String(), true, M<let>, M<let>
[20210409144645] 2781  TRACE  : (21)       forloops.ego 100: Add                            stack[ 4]: Tom, true, M<let>, M<let>
[20210409144645] 2782  TRACE  : (21)       forloops.ego 101: Store           "s"            stack[ 3]: trueTom, M<let>, M<let>
[20210409144645] 2783  TRACE  : (21)       forloops.ego 102: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2784  TRACE  : (21)       forloops.ego 103: PopScope                       stack[ 1]: M<let>
[20210409144645] 2785  TRACE  : (21)       forloops.ego 104: Branch          @91            stack[ 1]: M<let>
[20210409144645] 2786  TRACE  : (21)       forloops.ego  91: RangeNext       105            stack[ 1]: M<let>
[20210409144645] 2787  TRACE  : (21)       forloops.ego  92: AtLine          22             stack[ 1]: M<let>
[20210409144645] 2788  TRACE  : (21)       forloops.ego  93: PushScope                      stack[ 1]: M<let>
[20210409144645] 2789  TRACE  : (21)       forloops.ego  94: AtLine          23             stack[ 1]: M<let>
[20210409144645] 2790  TRACE  : (21)       forloops.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2791  TRACE  : (21)       forloops.ego  96: Load            "s"            stack[ 2]: M<let>, M<let>
[20210409144645] 2792  TRACE  : (21)       forloops.ego  97: Load            "string"       stack[ 3]: trueTom, M<let>, M<let>
[20210409144645] 2793  TRACE  : (21)       forloops.ego  98: Load            "j"            stack[ 4]: functions.String(), trueTom, M<let>, M<let>
[20210409144645] 2794  TRACE  : (21)       forloops.ego  99: Call            1              stack[ 5]: 3.14, functions.String(), trueTom, M<let>, M<let>
[20210409144645] 2795  TRACE  : (21)       forloops.ego 100: Add                            stack[ 4]: 3.14, trueTom, M<let>, M<let>
[20210409144645] 2796  TRACE  : (21)       forloops.ego 101: Store           "s"            stack[ 3]: trueTom3.14, M<let>, M<let>
[20210409144645] 2797  TRACE  : (21)       forloops.ego 102: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2798  TRACE  : (21)       forloops.ego 103: PopScope                       stack[ 1]: M<let>
[20210409144645] 2799  TRACE  : (21)       forloops.ego 104: Branch          @91            stack[ 1]: M<let>
[20210409144645] 2800  TRACE  : (21)       forloops.ego  91: RangeNext       105            stack[ 1]: M<let>
[20210409144645] 2801  TRACE  : (21)       forloops.ego  92: AtLine          22             stack[ 1]: M<let>
[20210409144645] 2802  TRACE  : (21)       forloops.ego  93: PushScope                      stack[ 1]: M<let>
[20210409144645] 2803  TRACE  : (21)       forloops.ego  94: AtLine          23             stack[ 1]: M<let>
[20210409144645] 2804  TRACE  : (21)       forloops.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2805  TRACE  : (21)       forloops.ego  96: Load            "s"            stack[ 2]: M<let>, M<let>
[20210409144645] 2806  TRACE  : (21)       forloops.ego  97: Load            "string"       stack[ 3]: trueTom3.14, M<let>, M<let>
[20210409144645] 2807  TRACE  : (21)       forloops.ego  98: Load            "j"            stack[ 4]: functions.String(), trueTom3.14, M<let>, M<let>
[20210409144645] 2808  TRACE  : (21)       forloops.ego  99: Call            1              stack[ 5]: 42, functions.String(), trueTom3.14, M<let>, M<let...
[20210409144645] 2809  TRACE  : (21)       forloops.ego 100: Add                            stack[ 4]: 42, trueTom3.14, M<let>, M<let>
[20210409144645] 2810  TRACE  : (21)       forloops.ego 101: Store           "s"            stack[ 3]: trueTom3.1442, M<let>, M<let>
[20210409144645] 2811  TRACE  : (21)       forloops.ego 102: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2812  TRACE  : (21)       forloops.ego 103: PopScope                       stack[ 1]: M<let>
[20210409144645] 2813  TRACE  : (21)       forloops.ego 104: Branch          @91            stack[ 1]: M<let>
[20210409144645] 2814  TRACE  : (21)       forloops.ego  91: RangeNext       105            stack[ 1]: M<let>
[20210409144645] 2815  TRACE  : (21)       forloops.ego 105: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 2816  TRACE  : (21)       forloops.ego 106: SymbolDelete    "j"            stack[ 1]: M<let>
[20210409144645] 2817  TRACE  : (21)       forloops.ego 107: PopScope                       stack[ 1]: M<let>
[20210409144645] 2818  TRACE  : (21)       forloops.ego 108: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 2819  TRACE  : (21)       forloops.ego 109: AtLine          25             stack[ 0]: <empty>
[20210409144645] 2820  TRACE  : (21)       forloops.ego 110: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2821  TRACE  : (21)       forloops.ego 111: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2822  TRACE  : (21)       forloops.ego 112: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2823  TRACE  : (21)       forloops.ego 113: Member          "assert"       stack[ 2]: Testing{ description: "flow: basic for-loops" }, M...
[20210409144645] 2824  TRACE  : (21)       forloops.ego 114: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2825  TRACE  : (21)       forloops.ego 115: SetThis                        stack[ 3]: Testing{ description: "flow: basic for-loops" }, c...
[20210409144645] 2826  TRACE  : (21)       forloops.ego 116: Member          "Equal"        stack[ 3]: Testing{ description: "flow: basic for-loops" }, c...
[20210409144645] 2827  TRACE  : (21)       forloops.ego 117: Load            "s"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2828  TRACE  : (21)       forloops.ego 118: Push            "trueTom3.1442" stack[ 4]: trueTom3.1442, compiler.TestEqual(), compiler.Test...
[20210409144645] 2829  TRACE  : (21)       forloops.ego 119: Call            2              stack[ 5]: trueTom3.1442, trueTom3.1442, compiler.TestEqual()...
[20210409144645] 2830  TRACE  : (21)       forloops.ego 120: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 2831  TRACE  : (21)       forloops.ego 121: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2832  TRACE  : (21)       forloops.ego 122: PopScope                       stack[ 0]: <empty>
[20210409144645] 2833  TRACE  : (21)       forloops.ego 123: AtLine          28             stack[ 0]: <empty>
[20210409144645] 2834  TRACE  : (21)       forloops.ego 124: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2835  TRACE  : (21)       forloops.ego 125: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 2836  TRACE  : (21)       forloops.ego 126: Print                          stack[ 1]: (PASS)  
[20210409144645] 2837  TRACE  : (21)       forloops.ego 127: Timer           1              stack[ 0]: <empty>
[20210409144645] 2838  TRACE  : (21)       forloops.ego 128: Print                          stack[ 1]: 0.001s
[20210409144645] 2839  TRACE  : (21)       forloops.ego 129: Say             true           stack[ 0]: <empty>
TEST: flow: basic for-loops                             (PASS)  0.001s
[20210409144645] 2840  TRACE  : (21)       forloops.ego 130: Stop                           stack[ 0]: <empty>
[20210409144645] 2841  TRACE  : *** Tracing forrange.ego (22)  
[20210409144645] 2842  TRACE  : (22)       forrange.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 2843  TRACE  : (22)       forrange.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2844  TRACE  : (22)       forrange.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 2845  TRACE  : (22)       forrange.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2846  TRACE  : (22)       forrange.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 2847  TRACE  : (22)       forrange.ego   5: Push            Testing{ description: "flow: for loops with ranges" } stack[ 0]: <empty>
[20210409144645] 2848  TRACE  : (22)       forrange.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 2849  TRACE  : (22)       forrange.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 2850  TRACE  : (22)       forrange.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 2851  TRACE  : (22)       forrange.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 2852  TRACE  : (22)       forrange.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 2853  TRACE  : (22)       forrange.ego  11: Print                          stack[ 1]: flow: for loops with ranges
[20210409144645] 2854  TRACE  : (22)       forrange.ego  12: Push            "                       " stack[ 0]: <empty>
[20210409144645] 2855  TRACE  : (22)       forrange.ego  13: Print                          stack[ 1]:                        
[20210409144645] 2856  TRACE  : (22)       forrange.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 2857  TRACE  : (22)       forrange.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 2858  TRACE  : (22)       forrange.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 2859  TRACE  : (22)       forrange.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 2860  TRACE  : (22)       forrange.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2861  TRACE  : (22)       forrange.ego  19: Push            10             stack[ 1]: M<let>
[20210409144645] 2862  TRACE  : (22)       forrange.ego  20: Push            20             stack[ 2]: 10, M<let>
[20210409144645] 2863  TRACE  : (22)       forrange.ego  21: Push            30             stack[ 3]: 20, 10, M<let>
[20210409144645] 2864  TRACE  : (22)       forrange.ego  22: Push            40             stack[ 4]: 30, 20, 10, M<let>
[20210409144645] 2865  TRACE  : (22)       forrange.ego  23: Push            50             stack[ 5]: 40, 30, 20, 10, M<let>
[20210409144645] 2866  TRACE  : (22)       forrange.ego  24: Array           5              stack[ 6]: 50, 40, 30, 20, 10, M<let>
[20210409144645] 2867  TRACE  : (22)       forrange.ego  25: SymbolCreate    "a"            stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 2868  TRACE  : (22)       forrange.ego  26: Store           "a"            stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 2869  TRACE  : (22)       forrange.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2870  TRACE  : (22)       forrange.ego  28: AtLine          6              stack[ 0]: <empty>
[20210409144645] 2871  TRACE  : (22)       forrange.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2872  TRACE  : (22)       forrange.ego  30: Push            0              stack[ 1]: M<let>
[20210409144645] 2873  TRACE  : (22)       forrange.ego  31: SymbolCreate    "n"            stack[ 2]: 0, M<let>
[20210409144645] 2874  TRACE  : (22)       forrange.ego  32: Store           "n"            stack[ 2]: 0, M<let>
[20210409144645] 2875  TRACE  : (22)       forrange.ego  33: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2876  TRACE  : (22)       forrange.ego  34: AtLine          7              stack[ 0]: <empty>
[20210409144645] 2877  TRACE  : (22)       forrange.ego  35: PushScope                      stack[ 0]: <empty>
[20210409144645] 2878  TRACE  : (22)       forrange.ego  36: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2879  TRACE  : (22)       forrange.ego  37: Load            "a"            stack[ 1]: M<let>
[20210409144645] 2880  TRACE  : (22)       forrange.ego  38: RangeInit       [i j]          stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 2881  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2882  TRACE  : (22)       forrange.ego  40: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2883  TRACE  : (22)       forrange.ego  41: PushScope                      stack[ 1]: M<let>
[20210409144645] 2884  TRACE  : (22)       forrange.ego  42: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2885  TRACE  : (22)       forrange.ego  43: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2886  TRACE  : (22)       forrange.ego  44: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 2887  TRACE  : (22)       forrange.ego  45: Load            "j"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 2888  TRACE  : (22)       forrange.ego  46: Add                            stack[ 4]: 10, 0, M<let>, M<let>
[20210409144645] 2889  TRACE  : (22)       forrange.ego  47: Load            "i"            stack[ 3]: 10, M<let>, M<let>
[20210409144645] 2890  TRACE  : (22)       forrange.ego  48: Add                            stack[ 4]: 0, 10, M<let>, M<let>
[20210409144645] 2891  TRACE  : (22)       forrange.ego  49: Store           "n"            stack[ 3]: 10, M<let>, M<let>
[20210409144645] 2892  TRACE  : (22)       forrange.ego  50: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2893  TRACE  : (22)       forrange.ego  51: PopScope                       stack[ 1]: M<let>
[20210409144645] 2894  TRACE  : (22)       forrange.ego  52: Branch          @39            stack[ 1]: M<let>
[20210409144645] 2895  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2896  TRACE  : (22)       forrange.ego  40: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2897  TRACE  : (22)       forrange.ego  41: PushScope                      stack[ 1]: M<let>
[20210409144645] 2898  TRACE  : (22)       forrange.ego  42: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2899  TRACE  : (22)       forrange.ego  43: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2900  TRACE  : (22)       forrange.ego  44: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 2901  TRACE  : (22)       forrange.ego  45: Load            "j"            stack[ 3]: 10, M<let>, M<let>
[20210409144645] 2902  TRACE  : (22)       forrange.ego  46: Add                            stack[ 4]: 20, 10, M<let>, M<let>
[20210409144645] 2903  TRACE  : (22)       forrange.ego  47: Load            "i"            stack[ 3]: 30, M<let>, M<let>
[20210409144645] 2904  TRACE  : (22)       forrange.ego  48: Add                            stack[ 4]: 1, 30, M<let>, M<let>
[20210409144645] 2905  TRACE  : (22)       forrange.ego  49: Store           "n"            stack[ 3]: 31, M<let>, M<let>
[20210409144645] 2906  TRACE  : (22)       forrange.ego  50: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2907  TRACE  : (22)       forrange.ego  51: PopScope                       stack[ 1]: M<let>
[20210409144645] 2908  TRACE  : (22)       forrange.ego  52: Branch          @39            stack[ 1]: M<let>
[20210409144645] 2909  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2910  TRACE  : (22)       forrange.ego  40: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2911  TRACE  : (22)       forrange.ego  41: PushScope                      stack[ 1]: M<let>
[20210409144645] 2912  TRACE  : (22)       forrange.ego  42: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2913  TRACE  : (22)       forrange.ego  43: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2914  TRACE  : (22)       forrange.ego  44: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 2915  TRACE  : (22)       forrange.ego  45: Load            "j"            stack[ 3]: 31, M<let>, M<let>
[20210409144645] 2916  TRACE  : (22)       forrange.ego  46: Add                            stack[ 4]: 30, 31, M<let>, M<let>
[20210409144645] 2917  TRACE  : (22)       forrange.ego  47: Load            "i"            stack[ 3]: 61, M<let>, M<let>
[20210409144645] 2918  TRACE  : (22)       forrange.ego  48: Add                            stack[ 4]: 2, 61, M<let>, M<let>
[20210409144645] 2919  TRACE  : (22)       forrange.ego  49: Store           "n"            stack[ 3]: 63, M<let>, M<let>
[20210409144645] 2920  TRACE  : (22)       forrange.ego  50: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2921  TRACE  : (22)       forrange.ego  51: PopScope                       stack[ 1]: M<let>
[20210409144645] 2922  TRACE  : (22)       forrange.ego  52: Branch          @39            stack[ 1]: M<let>
[20210409144645] 2923  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2924  TRACE  : (22)       forrange.ego  40: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2925  TRACE  : (22)       forrange.ego  41: PushScope                      stack[ 1]: M<let>
[20210409144645] 2926  TRACE  : (22)       forrange.ego  42: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2927  TRACE  : (22)       forrange.ego  43: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2928  TRACE  : (22)       forrange.ego  44: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 2929  TRACE  : (22)       forrange.ego  45: Load            "j"            stack[ 3]: 63, M<let>, M<let>
[20210409144645] 2930  TRACE  : (22)       forrange.ego  46: Add                            stack[ 4]: 40, 63, M<let>, M<let>
[20210409144645] 2931  TRACE  : (22)       forrange.ego  47: Load            "i"            stack[ 3]: 103, M<let>, M<let>
[20210409144645] 2932  TRACE  : (22)       forrange.ego  48: Add                            stack[ 4]: 3, 103, M<let>, M<let>
[20210409144645] 2933  TRACE  : (22)       forrange.ego  49: Store           "n"            stack[ 3]: 106, M<let>, M<let>
[20210409144645] 2934  TRACE  : (22)       forrange.ego  50: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2935  TRACE  : (22)       forrange.ego  51: PopScope                       stack[ 1]: M<let>
[20210409144645] 2936  TRACE  : (22)       forrange.ego  52: Branch          @39            stack[ 1]: M<let>
[20210409144645] 2937  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2938  TRACE  : (22)       forrange.ego  40: AtLine          7              stack[ 1]: M<let>
[20210409144645] 2939  TRACE  : (22)       forrange.ego  41: PushScope                      stack[ 1]: M<let>
[20210409144645] 2940  TRACE  : (22)       forrange.ego  42: AtLine          8              stack[ 1]: M<let>
[20210409144645] 2941  TRACE  : (22)       forrange.ego  43: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 2942  TRACE  : (22)       forrange.ego  44: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 2943  TRACE  : (22)       forrange.ego  45: Load            "j"            stack[ 3]: 106, M<let>, M<let>
[20210409144645] 2944  TRACE  : (22)       forrange.ego  46: Add                            stack[ 4]: 50, 106, M<let>, M<let>
[20210409144645] 2945  TRACE  : (22)       forrange.ego  47: Load            "i"            stack[ 3]: 156, M<let>, M<let>
[20210409144645] 2946  TRACE  : (22)       forrange.ego  48: Add                            stack[ 4]: 4, 156, M<let>, M<let>
[20210409144645] 2947  TRACE  : (22)       forrange.ego  49: Store           "n"            stack[ 3]: 160, M<let>, M<let>
[20210409144645] 2948  TRACE  : (22)       forrange.ego  50: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 2949  TRACE  : (22)       forrange.ego  51: PopScope                       stack[ 1]: M<let>
[20210409144645] 2950  TRACE  : (22)       forrange.ego  52: Branch          @39            stack[ 1]: M<let>
[20210409144645] 2951  TRACE  : (22)       forrange.ego  39: RangeNext       53             stack[ 1]: M<let>
[20210409144645] 2952  TRACE  : (22)       forrange.ego  53: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 2953  TRACE  : (22)       forrange.ego  54: SymbolDelete    "j"            stack[ 1]: M<let>
[20210409144645] 2954  TRACE  : (22)       forrange.ego  55: PopScope                       stack[ 1]: M<let>
[20210409144645] 2955  TRACE  : (22)       forrange.ego  56: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 2956  TRACE  : (22)       forrange.ego  57: AtLine          10             stack[ 0]: <empty>
[20210409144645] 2957  TRACE  : (22)       forrange.ego  58: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2958  TRACE  : (22)       forrange.ego  59: Load            "math"         stack[ 1]: M<let>
[20210409144645] 2959  TRACE  : (22)       forrange.ego  60: SetThis                        stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 2960  TRACE  : (22)       forrange.ego  61: Member          "Sum"          stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 2961  TRACE  : (22)       forrange.ego  62: Push            10             stack[ 2]: functions.Sum(), M<let>
[20210409144645] 2962  TRACE  : (22)       forrange.ego  63: Push            21             stack[ 3]: 10, functions.Sum(), M<let>
[20210409144645] 2963  TRACE  : (22)       forrange.ego  64: Push            32             stack[ 4]: 21, 10, functions.Sum(), M<let>
[20210409144645] 2964  TRACE  : (22)       forrange.ego  65: Push            43             stack[ 5]: 32, 21, 10, functions.Sum(), M<let>
[20210409144645] 2965  TRACE  : (22)       forrange.ego  66: Push            54             stack[ 6]: 43, 32, 21, 10, functions.Sum(), M<let>
[20210409144645] 2966  TRACE  : (22)       forrange.ego  67: Call            5              stack[ 7]: 54, 43, 32, 21, 10, functions.Sum(), M<let>
[20210409144645] 2967  TRACE  : (22)       forrange.ego  68: SymbolCreate    "want"         stack[ 2]: 160, M<let>
[20210409144645] 2968  TRACE  : (22)       forrange.ego  69: Store           "want"         stack[ 2]: 160, M<let>
[20210409144645] 2969  TRACE  : (22)       forrange.ego  70: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2970  TRACE  : (22)       forrange.ego  71: AtLine          11             stack[ 0]: <empty>
[20210409144645] 2971  TRACE  : (22)       forrange.ego  72: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 2972  TRACE  : (22)       forrange.ego  73: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 2973  TRACE  : (22)       forrange.ego  74: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 2974  TRACE  : (22)       forrange.ego  75: Member          "assert"       stack[ 2]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 2975  TRACE  : (22)       forrange.ego  76: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 2976  TRACE  : (22)       forrange.ego  77: SetThis                        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 2977  TRACE  : (22)       forrange.ego  78: Member          "Equal"        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 2978  TRACE  : (22)       forrange.ego  79: Load            "want"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 2979  TRACE  : (22)       forrange.ego  80: Load            "n"            stack[ 4]: 160, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 2980  TRACE  : (22)       forrange.ego  81: Push            "range over array failed" stack[ 5]: 160, 160, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 2981  TRACE  : (22)       forrange.ego  82: Call            3              stack[ 6]: range over array failed, 160, 160, compiler.TestEq...
[20210409144645] 2982  TRACE  : (22)       forrange.ego  83: Call            1              stack[ 3]: [true range over array failed], compiler.TestAsser...
[20210409144645] 2983  TRACE  : (22)       forrange.ego  84: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 2984  TRACE  : (22)       forrange.ego  85: PopScope                       stack[ 0]: <empty>
[20210409144645] 2985  TRACE  : (22)       forrange.ego  86: AtLine          14             stack[ 0]: <empty>
[20210409144645] 2986  TRACE  : (22)       forrange.ego  87: PushScope                      stack[ 0]: <empty>
[20210409144645] 2987  TRACE  : (22)       forrange.ego  88: AtLine          16             stack[ 0]: <empty>
[20210409144645] 2988  TRACE  : (22)       forrange.ego  89: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 2989  TRACE  : (22)       forrange.ego  90: Push            10             stack[ 1]: M<let>
[20210409144645] 2990  TRACE  : (22)       forrange.ego  91: Push            20             stack[ 2]: 10, M<let>
[20210409144645] 2991  TRACE  : (22)       forrange.ego  92: Push            30             stack[ 3]: 20, 10, M<let>
[20210409144645] 2992  TRACE  : (22)       forrange.ego  93: Push            40             stack[ 4]: 30, 20, 10, M<let>
[20210409144645] 2993  TRACE  : (22)       forrange.ego  94: Push            50             stack[ 5]: 40, 30, 20, 10, M<let>
[20210409144645] 2994  TRACE  : (22)       forrange.ego  95: Array           5              stack[ 6]: 50, 40, 30, 20, 10, M<let>
[20210409144645] 2995  TRACE  : (22)       forrange.ego  96: SymbolCreate    "a"            stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 2996  TRACE  : (22)       forrange.ego  97: Store           "a"            stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 2997  TRACE  : (22)       forrange.ego  98: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 2998  TRACE  : (22)       forrange.ego  99: AtLine          17             stack[ 0]: <empty>
[20210409144645] 2999  TRACE  : (22)       forrange.ego 100: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3000  TRACE  : (22)       forrange.ego 101: Push            0              stack[ 1]: M<let>
[20210409144645] 3001  TRACE  : (22)       forrange.ego 102: SymbolCreate    "n"            stack[ 2]: 0, M<let>
[20210409144645] 3002  TRACE  : (22)       forrange.ego 103: Store           "n"            stack[ 2]: 0, M<let>
[20210409144645] 3003  TRACE  : (22)       forrange.ego 104: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3004  TRACE  : (22)       forrange.ego 105: AtLine          18             stack[ 0]: <empty>
[20210409144645] 3005  TRACE  : (22)       forrange.ego 106: PushScope                      stack[ 0]: <empty>
[20210409144645] 3006  TRACE  : (22)       forrange.ego 107: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3007  TRACE  : (22)       forrange.ego 108: Load            "a"            stack[ 1]: M<let>
[20210409144645] 3008  TRACE  : (22)       forrange.ego 109: RangeInit       [i ]           stack[ 2]: [10, 20, 30, 40, 50], M<let>
[20210409144645] 3009  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3010  TRACE  : (22)       forrange.ego 111: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3011  TRACE  : (22)       forrange.ego 112: PushScope                      stack[ 1]: M<let>
[20210409144645] 3012  TRACE  : (22)       forrange.ego 113: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3013  TRACE  : (22)       forrange.ego 114: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3014  TRACE  : (22)       forrange.ego 115: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3015  TRACE  : (22)       forrange.ego 116: Load            "i"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 3016  TRACE  : (22)       forrange.ego 117: Add                            stack[ 4]: 0, 0, M<let>, M<let>
[20210409144645] 3017  TRACE  : (22)       forrange.ego 118: Store           "n"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 3018  TRACE  : (22)       forrange.ego 119: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3019  TRACE  : (22)       forrange.ego 120: PopScope                       stack[ 1]: M<let>
[20210409144645] 3020  TRACE  : (22)       forrange.ego 121: Branch          @110           stack[ 1]: M<let>
[20210409144645] 3021  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3022  TRACE  : (22)       forrange.ego 111: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3023  TRACE  : (22)       forrange.ego 112: PushScope                      stack[ 1]: M<let>
[20210409144645] 3024  TRACE  : (22)       forrange.ego 113: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3025  TRACE  : (22)       forrange.ego 114: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3026  TRACE  : (22)       forrange.ego 115: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3027  TRACE  : (22)       forrange.ego 116: Load            "i"            stack[ 3]: 0, M<let>, M<let>
[20210409144645] 3028  TRACE  : (22)       forrange.ego 117: Add                            stack[ 4]: 1, 0, M<let>, M<let>
[20210409144645] 3029  TRACE  : (22)       forrange.ego 118: Store           "n"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3030  TRACE  : (22)       forrange.ego 119: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3031  TRACE  : (22)       forrange.ego 120: PopScope                       stack[ 1]: M<let>
[20210409144645] 3032  TRACE  : (22)       forrange.ego 121: Branch          @110           stack[ 1]: M<let>
[20210409144645] 3033  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3034  TRACE  : (22)       forrange.ego 111: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3035  TRACE  : (22)       forrange.ego 112: PushScope                      stack[ 1]: M<let>
[20210409144645] 3036  TRACE  : (22)       forrange.ego 113: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3037  TRACE  : (22)       forrange.ego 114: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3038  TRACE  : (22)       forrange.ego 115: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3039  TRACE  : (22)       forrange.ego 116: Load            "i"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3040  TRACE  : (22)       forrange.ego 117: Add                            stack[ 4]: 2, 1, M<let>, M<let>
[20210409144645] 3041  TRACE  : (22)       forrange.ego 118: Store           "n"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3042  TRACE  : (22)       forrange.ego 119: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3043  TRACE  : (22)       forrange.ego 120: PopScope                       stack[ 1]: M<let>
[20210409144645] 3044  TRACE  : (22)       forrange.ego 121: Branch          @110           stack[ 1]: M<let>
[20210409144645] 3045  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3046  TRACE  : (22)       forrange.ego 111: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3047  TRACE  : (22)       forrange.ego 112: PushScope                      stack[ 1]: M<let>
[20210409144645] 3048  TRACE  : (22)       forrange.ego 113: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3049  TRACE  : (22)       forrange.ego 114: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3050  TRACE  : (22)       forrange.ego 115: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3051  TRACE  : (22)       forrange.ego 116: Load            "i"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3052  TRACE  : (22)       forrange.ego 117: Add                            stack[ 4]: 3, 3, M<let>, M<let>
[20210409144645] 3053  TRACE  : (22)       forrange.ego 118: Store           "n"            stack[ 3]: 6, M<let>, M<let>
[20210409144645] 3054  TRACE  : (22)       forrange.ego 119: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3055  TRACE  : (22)       forrange.ego 120: PopScope                       stack[ 1]: M<let>
[20210409144645] 3056  TRACE  : (22)       forrange.ego 121: Branch          @110           stack[ 1]: M<let>
[20210409144645] 3057  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3058  TRACE  : (22)       forrange.ego 111: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3059  TRACE  : (22)       forrange.ego 112: PushScope                      stack[ 1]: M<let>
[20210409144645] 3060  TRACE  : (22)       forrange.ego 113: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3061  TRACE  : (22)       forrange.ego 114: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3062  TRACE  : (22)       forrange.ego 115: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3063  TRACE  : (22)       forrange.ego 116: Load            "i"            stack[ 3]: 6, M<let>, M<let>
[20210409144645] 3064  TRACE  : (22)       forrange.ego 117: Add                            stack[ 4]: 4, 6, M<let>, M<let>
[20210409144645] 3065  TRACE  : (22)       forrange.ego 118: Store           "n"            stack[ 3]: 10, M<let>, M<let>
[20210409144645] 3066  TRACE  : (22)       forrange.ego 119: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3067  TRACE  : (22)       forrange.ego 120: PopScope                       stack[ 1]: M<let>
[20210409144645] 3068  TRACE  : (22)       forrange.ego 121: Branch          @110           stack[ 1]: M<let>
[20210409144645] 3069  TRACE  : (22)       forrange.ego 110: RangeNext       122            stack[ 1]: M<let>
[20210409144645] 3070  TRACE  : (22)       forrange.ego 122: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 3071  TRACE  : (22)       forrange.ego 123: PopScope                       stack[ 1]: M<let>
[20210409144645] 3072  TRACE  : (22)       forrange.ego 124: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 3073  TRACE  : (22)       forrange.ego 125: AtLine          21             stack[ 0]: <empty>
[20210409144645] 3074  TRACE  : (22)       forrange.ego 126: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3075  TRACE  : (22)       forrange.ego 127: Load            "math"         stack[ 1]: M<let>
[20210409144645] 3076  TRACE  : (22)       forrange.ego 128: SetThis                        stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 3077  TRACE  : (22)       forrange.ego 129: Member          "Sum"          stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 3078  TRACE  : (22)       forrange.ego 130: Push            0              stack[ 2]: functions.Sum(), M<let>
[20210409144645] 3079  TRACE  : (22)       forrange.ego 131: Push            1              stack[ 3]: 0, functions.Sum(), M<let>
[20210409144645] 3080  TRACE  : (22)       forrange.ego 132: Push            2              stack[ 4]: 1, 0, functions.Sum(), M<let>
[20210409144645] 3081  TRACE  : (22)       forrange.ego 133: Push            3              stack[ 5]: 2, 1, 0, functions.Sum(), M<let>
[20210409144645] 3082  TRACE  : (22)       forrange.ego 134: Push            4              stack[ 6]: 3, 2, 1, 0, functions.Sum(), M<let>
[20210409144645] 3083  TRACE  : (22)       forrange.ego 135: Call            5              stack[ 7]: 4, 3, 2, 1, 0, functions.Sum(), M<let>
[20210409144645] 3084  TRACE  : (22)       forrange.ego 136: SymbolCreate    "want"         stack[ 2]: 10, M<let>
[20210409144645] 3085  TRACE  : (22)       forrange.ego 137: Store           "want"         stack[ 2]: 10, M<let>
[20210409144645] 3086  TRACE  : (22)       forrange.ego 138: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3087  TRACE  : (22)       forrange.ego 139: AtLine          22             stack[ 0]: <empty>
[20210409144645] 3088  TRACE  : (22)       forrange.ego 140: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3089  TRACE  : (22)       forrange.ego 141: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 3090  TRACE  : (22)       forrange.ego 142: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 3091  TRACE  : (22)       forrange.ego 143: Member          "assert"       stack[ 2]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3092  TRACE  : (22)       forrange.ego 144: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 3093  TRACE  : (22)       forrange.ego 145: SetThis                        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3094  TRACE  : (22)       forrange.ego 146: Member          "Equal"        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3095  TRACE  : (22)       forrange.ego 147: Load            "want"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3096  TRACE  : (22)       forrange.ego 148: Load            "n"            stack[ 4]: 10, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 3097  TRACE  : (22)       forrange.ego 149: Push            "range over array with just indexes failed" stack[ 5]: 10, 10, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 3098  TRACE  : (22)       forrange.ego 150: Call            3              stack[ 6]: range over array with just indexes failed, 10, 10,...
[20210409144645] 3099  TRACE  : (22)       forrange.ego 151: Call            1              stack[ 3]: [true range over array with just indexes failed], ...
[20210409144645] 3100  TRACE  : (22)       forrange.ego 152: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 3101  TRACE  : (22)       forrange.ego 153: PopScope                       stack[ 0]: <empty>
[20210409144645] 3102  TRACE  : (22)       forrange.ego 154: AtLine          25             stack[ 0]: <empty>
[20210409144645] 3103  TRACE  : (22)       forrange.ego 155: PushScope                      stack[ 0]: <empty>
[20210409144645] 3104  TRACE  : (22)       forrange.ego 156: AtLine          29             stack[ 0]: <empty>
[20210409144645] 3105  TRACE  : (22)       forrange.ego 157: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3106  TRACE  : (22)       forrange.ego 158: Push            "⌘foo⌘"        stack[ 1]: M<let>
[20210409144645] 3107  TRACE  : (22)       forrange.ego 159: SymbolCreate    "a"            stack[ 2]: ⌘foo⌘, M<let>
[20210409144645] 3108  TRACE  : (22)       forrange.ego 160: Store           "a"            stack[ 2]: ⌘foo⌘, M<let>
[20210409144645] 3109  TRACE  : (22)       forrange.ego 161: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3110  TRACE  : (22)       forrange.ego 162: AtLine          30             stack[ 0]: <empty>
[20210409144645] 3111  TRACE  : (22)       forrange.ego 163: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3112  TRACE  : (22)       forrange.ego 164: Push            "⌘"            stack[ 1]: M<let>
[20210409144645] 3113  TRACE  : (22)       forrange.ego 165: Push            "f"            stack[ 2]: ⌘, M<let>
[20210409144645] 3114  TRACE  : (22)       forrange.ego 166: Push            "o"            stack[ 3]: f, ⌘, M<let>
[20210409144645] 3115  TRACE  : (22)       forrange.ego 167: Push            "o"            stack[ 4]: o, f, ⌘, M<let>
[20210409144645] 3116  TRACE  : (22)       forrange.ego 168: Push            "⌘"            stack[ 5]: o, o, f, ⌘, M<let>
[20210409144645] 3117  TRACE  : (22)       forrange.ego 169: Array           5              stack[ 6]: ⌘, o, o, f, ⌘, M<let>
[20210409144645] 3118  TRACE  : (22)       forrange.ego 170: SymbolCreate    "b"            stack[ 2]: ["⌘", "f", "o", "o", "⌘"], M<let>
[20210409144645] 3119  TRACE  : (22)       forrange.ego 171: Store           "b"            stack[ 2]: ["⌘", "f", "o", "o", "⌘"], M<let>
[20210409144645] 3120  TRACE  : (22)       forrange.ego 172: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3121  TRACE  : (22)       forrange.ego 173: AtLine          31             stack[ 0]: <empty>
[20210409144645] 3122  TRACE  : (22)       forrange.ego 174: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3123  TRACE  : (22)       forrange.ego 175: Push            0              stack[ 1]: M<let>
[20210409144645] 3124  TRACE  : (22)       forrange.ego 176: Push            3              stack[ 2]: 0, M<let>
[20210409144645] 3125  TRACE  : (22)       forrange.ego 177: Push            4              stack[ 3]: 3, 0, M<let>
[20210409144645] 3126  TRACE  : (22)       forrange.ego 178: Push            5              stack[ 4]: 4, 3, 0, M<let>
[20210409144645] 3127  TRACE  : (22)       forrange.ego 179: Push            6              stack[ 5]: 5, 4, 3, 0, M<let>
[20210409144645] 3128  TRACE  : (22)       forrange.ego 180: Array           5              stack[ 6]: 6, 5, 4, 3, 0, M<let>
[20210409144645] 3129  TRACE  : (22)       forrange.ego 181: SymbolCreate    "c"            stack[ 2]: [0, 3, 4, 5, 6], M<let>
[20210409144645] 3130  TRACE  : (22)       forrange.ego 182: Store           "c"            stack[ 2]: [0, 3, 4, 5, 6], M<let>
[20210409144645] 3131  TRACE  : (22)       forrange.ego 183: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3132  TRACE  : (22)       forrange.ego 184: AtLine          32             stack[ 0]: <empty>
[20210409144645] 3133  TRACE  : (22)       forrange.ego 185: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3134  TRACE  : (22)       forrange.ego 186: Push            0              stack[ 1]: M<let>
[20210409144645] 3135  TRACE  : (22)       forrange.ego 187: SymbolCreate    "p"            stack[ 2]: 0, M<let>
[20210409144645] 3136  TRACE  : (22)       forrange.ego 188: Store           "p"            stack[ 2]: 0, M<let>
[20210409144645] 3137  TRACE  : (22)       forrange.ego 189: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3138  TRACE  : (22)       forrange.ego 190: AtLine          33             stack[ 0]: <empty>
[20210409144645] 3139  TRACE  : (22)       forrange.ego 191: PushScope                      stack[ 0]: <empty>
[20210409144645] 3140  TRACE  : (22)       forrange.ego 192: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3141  TRACE  : (22)       forrange.ego 193: Load            "a"            stack[ 1]: M<let>
[20210409144645] 3142  TRACE  : (22)       forrange.ego 194: RangeInit       [i ch]         stack[ 2]: ⌘foo⌘, M<let>
[20210409144645] 3143  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3144  TRACE  : (22)       forrange.ego 196: AtLine          33             stack[ 1]: M<let>
[20210409144645] 3145  TRACE  : (22)       forrange.ego 197: PushScope                      stack[ 1]: M<let>
[20210409144645] 3146  TRACE  : (22)       forrange.ego 198: AtLine          34             stack[ 1]: M<let>
[20210409144645] 3147  TRACE  : (22)       forrange.ego 199: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3148  TRACE  : (22)       forrange.ego 200: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3149  TRACE  : (22)       forrange.ego 201: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3150  TRACE  : (22)       forrange.ego 202: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3151  TRACE  : (22)       forrange.ego 203: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3152  TRACE  : (22)       forrange.ego 204: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3153  TRACE  : (22)       forrange.ego 205: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3154  TRACE  : (22)       forrange.ego 206: Load            "ch"           stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3155  TRACE  : (22)       forrange.ego 207: Load            "b"            stack[ 5]: ⌘, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 3156  TRACE  : (22)       forrange.ego 208: Load            "p"            stack[ 6]: ["⌘", "f", "o", "o", "⌘"], ⌘, compiler.TestE...
[20210409144645] 3157  TRACE  : (22)       forrange.ego 209: LoadIndex                      stack[ 7]: 0, ["⌘", "f", "o", "o", "⌘"], ⌘, compiler.Te...
[20210409144645] 3158  TRACE  : (22)       forrange.ego 210: Push            "range over string failed" stack[ 6]: ⌘, ⌘, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 3159  TRACE  : (22)       forrange.ego 211: Call            3              stack[ 7]: range over string failed, ⌘, ⌘, compiler.TestE...
[20210409144645] 3160  TRACE  : (22)       forrange.ego 212: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3161  TRACE  : (22)       forrange.ego 213: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3162  TRACE  : (22)       forrange.ego 214: AtLine          35             stack[ 1]: M<let>
[20210409144645] 3163  TRACE  : (22)       forrange.ego 215: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3164  TRACE  : (22)       forrange.ego 216: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3165  TRACE  : (22)       forrange.ego 217: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3166  TRACE  : (22)       forrange.ego 218: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3167  TRACE  : (22)       forrange.ego 219: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3168  TRACE  : (22)       forrange.ego 220: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3169  TRACE  : (22)       forrange.ego 221: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3170  TRACE  : (22)       forrange.ego 222: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3171  TRACE  : (22)       forrange.ego 223: Load            "c"            stack[ 5]: 0, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3172  TRACE  : (22)       forrange.ego 224: Load            "p"            stack[ 6]: [0, 3, 4, 5, 6], 0, compiler.TestEqual(), compiler...
[20210409144645] 3173  TRACE  : (22)       forrange.ego 225: LoadIndex                      stack[ 7]: 0, [0, 3, 4, 5, 6], 0, compiler.TestEqual(), compi...
[20210409144645] 3174  TRACE  : (22)       forrange.ego 226: Push            "range over string failed" stack[ 6]: 0, 0, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3175  TRACE  : (22)       forrange.ego 227: Call            3              stack[ 7]: range over string failed, 0, 0, compiler.TestEqual...
[20210409144645] 3176  TRACE  : (22)       forrange.ego 228: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3177  TRACE  : (22)       forrange.ego 229: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3178  TRACE  : (22)       forrange.ego 230: AtLine          36             stack[ 1]: M<let>
[20210409144645] 3179  TRACE  : (22)       forrange.ego 231: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3180  TRACE  : (22)       forrange.ego 232: Load            "p"            stack[ 2]: M<let>, M<let>
[20210409144645] 3181  TRACE  : (22)       forrange.ego 233: Push            1              stack[ 3]: 0, M<let>, M<let>
[20210409144645] 3182  TRACE  : (22)       forrange.ego 234: Add                            stack[ 4]: 1, 0, M<let>, M<let>
[20210409144645] 3183  TRACE  : (22)       forrange.ego 235: Store           "p"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3184  TRACE  : (22)       forrange.ego 236: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3185  TRACE  : (22)       forrange.ego 237: PopScope                       stack[ 1]: M<let>
[20210409144645] 3186  TRACE  : (22)       forrange.ego 238: Branch          @195           stack[ 1]: M<let>
[20210409144645] 3187  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3188  TRACE  : (22)       forrange.ego 196: AtLine          33             stack[ 1]: M<let>
[20210409144645] 3189  TRACE  : (22)       forrange.ego 197: PushScope                      stack[ 1]: M<let>
[20210409144645] 3190  TRACE  : (22)       forrange.ego 198: AtLine          34             stack[ 1]: M<let>
[20210409144645] 3191  TRACE  : (22)       forrange.ego 199: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3192  TRACE  : (22)       forrange.ego 200: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3193  TRACE  : (22)       forrange.ego 201: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3194  TRACE  : (22)       forrange.ego 202: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3195  TRACE  : (22)       forrange.ego 203: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3196  TRACE  : (22)       forrange.ego 204: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3197  TRACE  : (22)       forrange.ego 205: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3198  TRACE  : (22)       forrange.ego 206: Load            "ch"           stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3199  TRACE  : (22)       forrange.ego 207: Load            "b"            stack[ 5]: f, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3200  TRACE  : (22)       forrange.ego 208: Load            "p"            stack[ 6]: ["⌘", "f", "o", "o", "⌘"], f, compiler.TestEqu...
[20210409144645] 3201  TRACE  : (22)       forrange.ego 209: LoadIndex                      stack[ 7]: 1, ["⌘", "f", "o", "o", "⌘"], f, compiler.Test...
[20210409144645] 3202  TRACE  : (22)       forrange.ego 210: Push            "range over string failed" stack[ 6]: f, f, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3203  TRACE  : (22)       forrange.ego 211: Call            3              stack[ 7]: range over string failed, f, f, compiler.TestEqual...
[20210409144645] 3204  TRACE  : (22)       forrange.ego 212: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3205  TRACE  : (22)       forrange.ego 213: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3206  TRACE  : (22)       forrange.ego 214: AtLine          35             stack[ 1]: M<let>
[20210409144645] 3207  TRACE  : (22)       forrange.ego 215: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3208  TRACE  : (22)       forrange.ego 216: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3209  TRACE  : (22)       forrange.ego 217: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3210  TRACE  : (22)       forrange.ego 218: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3211  TRACE  : (22)       forrange.ego 219: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3212  TRACE  : (22)       forrange.ego 220: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3213  TRACE  : (22)       forrange.ego 221: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3214  TRACE  : (22)       forrange.ego 222: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3215  TRACE  : (22)       forrange.ego 223: Load            "c"            stack[ 5]: 3, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3216  TRACE  : (22)       forrange.ego 224: Load            "p"            stack[ 6]: [0, 3, 4, 5, 6], 3, compiler.TestEqual(), compiler...
[20210409144645] 3217  TRACE  : (22)       forrange.ego 225: LoadIndex                      stack[ 7]: 1, [0, 3, 4, 5, 6], 3, compiler.TestEqual(), compi...
[20210409144645] 3218  TRACE  : (22)       forrange.ego 226: Push            "range over string failed" stack[ 6]: 3, 3, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3219  TRACE  : (22)       forrange.ego 227: Call            3              stack[ 7]: range over string failed, 3, 3, compiler.TestEqual...
[20210409144645] 3220  TRACE  : (22)       forrange.ego 228: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3221  TRACE  : (22)       forrange.ego 229: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3222  TRACE  : (22)       forrange.ego 230: AtLine          36             stack[ 1]: M<let>
[20210409144645] 3223  TRACE  : (22)       forrange.ego 231: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3224  TRACE  : (22)       forrange.ego 232: Load            "p"            stack[ 2]: M<let>, M<let>
[20210409144645] 3225  TRACE  : (22)       forrange.ego 233: Push            1              stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3226  TRACE  : (22)       forrange.ego 234: Add                            stack[ 4]: 1, 1, M<let>, M<let>
[20210409144645] 3227  TRACE  : (22)       forrange.ego 235: Store           "p"            stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3228  TRACE  : (22)       forrange.ego 236: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3229  TRACE  : (22)       forrange.ego 237: PopScope                       stack[ 1]: M<let>
[20210409144645] 3230  TRACE  : (22)       forrange.ego 238: Branch          @195           stack[ 1]: M<let>
[20210409144645] 3231  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3232  TRACE  : (22)       forrange.ego 196: AtLine          33             stack[ 1]: M<let>
[20210409144645] 3233  TRACE  : (22)       forrange.ego 197: PushScope                      stack[ 1]: M<let>
[20210409144645] 3234  TRACE  : (22)       forrange.ego 198: AtLine          34             stack[ 1]: M<let>
[20210409144645] 3235  TRACE  : (22)       forrange.ego 199: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3236  TRACE  : (22)       forrange.ego 200: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3237  TRACE  : (22)       forrange.ego 201: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3238  TRACE  : (22)       forrange.ego 202: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3239  TRACE  : (22)       forrange.ego 203: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3240  TRACE  : (22)       forrange.ego 204: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3241  TRACE  : (22)       forrange.ego 205: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3242  TRACE  : (22)       forrange.ego 206: Load            "ch"           stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3243  TRACE  : (22)       forrange.ego 207: Load            "b"            stack[ 5]: o, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3244  TRACE  : (22)       forrange.ego 208: Load            "p"            stack[ 6]: ["⌘", "f", "o", "o", "⌘"], o, compiler.TestEqu...
[20210409144645] 3245  TRACE  : (22)       forrange.ego 209: LoadIndex                      stack[ 7]: 2, ["⌘", "f", "o", "o", "⌘"], o, compiler.Test...
[20210409144645] 3246  TRACE  : (22)       forrange.ego 210: Push            "range over string failed" stack[ 6]: o, o, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3247  TRACE  : (22)       forrange.ego 211: Call            3              stack[ 7]: range over string failed, o, o, compiler.TestEqual...
[20210409144645] 3248  TRACE  : (22)       forrange.ego 212: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3249  TRACE  : (22)       forrange.ego 213: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3250  TRACE  : (22)       forrange.ego 214: AtLine          35             stack[ 1]: M<let>
[20210409144645] 3251  TRACE  : (22)       forrange.ego 215: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3252  TRACE  : (22)       forrange.ego 216: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3253  TRACE  : (22)       forrange.ego 217: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3254  TRACE  : (22)       forrange.ego 218: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3255  TRACE  : (22)       forrange.ego 219: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3256  TRACE  : (22)       forrange.ego 220: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3257  TRACE  : (22)       forrange.ego 221: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3258  TRACE  : (22)       forrange.ego 222: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3259  TRACE  : (22)       forrange.ego 223: Load            "c"            stack[ 5]: 4, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3260  TRACE  : (22)       forrange.ego 224: Load            "p"            stack[ 6]: [0, 3, 4, 5, 6], 4, compiler.TestEqual(), compiler...
[20210409144645] 3261  TRACE  : (22)       forrange.ego 225: LoadIndex                      stack[ 7]: 2, [0, 3, 4, 5, 6], 4, compiler.TestEqual(), compi...
[20210409144645] 3262  TRACE  : (22)       forrange.ego 226: Push            "range over string failed" stack[ 6]: 4, 4, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3263  TRACE  : (22)       forrange.ego 227: Call            3              stack[ 7]: range over string failed, 4, 4, compiler.TestEqual...
[20210409144645] 3264  TRACE  : (22)       forrange.ego 228: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3265  TRACE  : (22)       forrange.ego 229: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3266  TRACE  : (22)       forrange.ego 230: AtLine          36             stack[ 1]: M<let>
[20210409144645] 3267  TRACE  : (22)       forrange.ego 231: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3268  TRACE  : (22)       forrange.ego 232: Load            "p"            stack[ 2]: M<let>, M<let>
[20210409144645] 3269  TRACE  : (22)       forrange.ego 233: Push            1              stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3270  TRACE  : (22)       forrange.ego 234: Add                            stack[ 4]: 1, 2, M<let>, M<let>
[20210409144645] 3271  TRACE  : (22)       forrange.ego 235: Store           "p"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3272  TRACE  : (22)       forrange.ego 236: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3273  TRACE  : (22)       forrange.ego 237: PopScope                       stack[ 1]: M<let>
[20210409144645] 3274  TRACE  : (22)       forrange.ego 238: Branch          @195           stack[ 1]: M<let>
[20210409144645] 3275  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3276  TRACE  : (22)       forrange.ego 196: AtLine          33             stack[ 1]: M<let>
[20210409144645] 3277  TRACE  : (22)       forrange.ego 197: PushScope                      stack[ 1]: M<let>
[20210409144645] 3278  TRACE  : (22)       forrange.ego 198: AtLine          34             stack[ 1]: M<let>
[20210409144645] 3279  TRACE  : (22)       forrange.ego 199: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3280  TRACE  : (22)       forrange.ego 200: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3281  TRACE  : (22)       forrange.ego 201: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3282  TRACE  : (22)       forrange.ego 202: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3283  TRACE  : (22)       forrange.ego 203: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3284  TRACE  : (22)       forrange.ego 204: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3285  TRACE  : (22)       forrange.ego 205: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3286  TRACE  : (22)       forrange.ego 206: Load            "ch"           stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3287  TRACE  : (22)       forrange.ego 207: Load            "b"            stack[ 5]: o, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3288  TRACE  : (22)       forrange.ego 208: Load            "p"            stack[ 6]: ["⌘", "f", "o", "o", "⌘"], o, compiler.TestEqu...
[20210409144645] 3289  TRACE  : (22)       forrange.ego 209: LoadIndex                      stack[ 7]: 3, ["⌘", "f", "o", "o", "⌘"], o, compiler.Test...
[20210409144645] 3290  TRACE  : (22)       forrange.ego 210: Push            "range over string failed" stack[ 6]: o, o, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3291  TRACE  : (22)       forrange.ego 211: Call            3              stack[ 7]: range over string failed, o, o, compiler.TestEqual...
[20210409144645] 3292  TRACE  : (22)       forrange.ego 212: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3293  TRACE  : (22)       forrange.ego 213: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3294  TRACE  : (22)       forrange.ego 214: AtLine          35             stack[ 1]: M<let>
[20210409144645] 3295  TRACE  : (22)       forrange.ego 215: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3296  TRACE  : (22)       forrange.ego 216: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3297  TRACE  : (22)       forrange.ego 217: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3298  TRACE  : (22)       forrange.ego 218: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3299  TRACE  : (22)       forrange.ego 219: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3300  TRACE  : (22)       forrange.ego 220: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3301  TRACE  : (22)       forrange.ego 221: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3302  TRACE  : (22)       forrange.ego 222: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3303  TRACE  : (22)       forrange.ego 223: Load            "c"            stack[ 5]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3304  TRACE  : (22)       forrange.ego 224: Load            "p"            stack[ 6]: [0, 3, 4, 5, 6], 5, compiler.TestEqual(), compiler...
[20210409144645] 3305  TRACE  : (22)       forrange.ego 225: LoadIndex                      stack[ 7]: 3, [0, 3, 4, 5, 6], 5, compiler.TestEqual(), compi...
[20210409144645] 3306  TRACE  : (22)       forrange.ego 226: Push            "range over string failed" stack[ 6]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3307  TRACE  : (22)       forrange.ego 227: Call            3              stack[ 7]: range over string failed, 5, 5, compiler.TestEqual...
[20210409144645] 3308  TRACE  : (22)       forrange.ego 228: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3309  TRACE  : (22)       forrange.ego 229: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3310  TRACE  : (22)       forrange.ego 230: AtLine          36             stack[ 1]: M<let>
[20210409144645] 3311  TRACE  : (22)       forrange.ego 231: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3312  TRACE  : (22)       forrange.ego 232: Load            "p"            stack[ 2]: M<let>, M<let>
[20210409144645] 3313  TRACE  : (22)       forrange.ego 233: Push            1              stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3314  TRACE  : (22)       forrange.ego 234: Add                            stack[ 4]: 1, 3, M<let>, M<let>
[20210409144645] 3315  TRACE  : (22)       forrange.ego 235: Store           "p"            stack[ 3]: 4, M<let>, M<let>
[20210409144645] 3316  TRACE  : (22)       forrange.ego 236: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3317  TRACE  : (22)       forrange.ego 237: PopScope                       stack[ 1]: M<let>
[20210409144645] 3318  TRACE  : (22)       forrange.ego 238: Branch          @195           stack[ 1]: M<let>
[20210409144645] 3319  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3320  TRACE  : (22)       forrange.ego 196: AtLine          33             stack[ 1]: M<let>
[20210409144645] 3321  TRACE  : (22)       forrange.ego 197: PushScope                      stack[ 1]: M<let>
[20210409144645] 3322  TRACE  : (22)       forrange.ego 198: AtLine          34             stack[ 1]: M<let>
[20210409144645] 3323  TRACE  : (22)       forrange.ego 199: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3324  TRACE  : (22)       forrange.ego 200: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3325  TRACE  : (22)       forrange.ego 201: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3326  TRACE  : (22)       forrange.ego 202: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3327  TRACE  : (22)       forrange.ego 203: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3328  TRACE  : (22)       forrange.ego 204: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3329  TRACE  : (22)       forrange.ego 205: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3330  TRACE  : (22)       forrange.ego 206: Load            "ch"           stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3331  TRACE  : (22)       forrange.ego 207: Load            "b"            stack[ 5]: ⌘, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 3332  TRACE  : (22)       forrange.ego 208: Load            "p"            stack[ 6]: ["⌘", "f", "o", "o", "⌘"], ⌘, compiler.TestE...
[20210409144645] 3333  TRACE  : (22)       forrange.ego 209: LoadIndex                      stack[ 7]: 4, ["⌘", "f", "o", "o", "⌘"], ⌘, compiler.Te...
[20210409144645] 3334  TRACE  : (22)       forrange.ego 210: Push            "range over string failed" stack[ 6]: ⌘, ⌘, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 3335  TRACE  : (22)       forrange.ego 211: Call            3              stack[ 7]: range over string failed, ⌘, ⌘, compiler.TestE...
[20210409144645] 3336  TRACE  : (22)       forrange.ego 212: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3337  TRACE  : (22)       forrange.ego 213: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3338  TRACE  : (22)       forrange.ego 214: AtLine          35             stack[ 1]: M<let>
[20210409144645] 3339  TRACE  : (22)       forrange.ego 215: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3340  TRACE  : (22)       forrange.ego 216: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3341  TRACE  : (22)       forrange.ego 217: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3342  TRACE  : (22)       forrange.ego 218: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3343  TRACE  : (22)       forrange.ego 219: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3344  TRACE  : (22)       forrange.ego 220: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3345  TRACE  : (22)       forrange.ego 221: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3346  TRACE  : (22)       forrange.ego 222: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3347  TRACE  : (22)       forrange.ego 223: Load            "c"            stack[ 5]: 6, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3348  TRACE  : (22)       forrange.ego 224: Load            "p"            stack[ 6]: [0, 3, 4, 5, 6], 6, compiler.TestEqual(), compiler...
[20210409144645] 3349  TRACE  : (22)       forrange.ego 225: LoadIndex                      stack[ 7]: 4, [0, 3, 4, 5, 6], 6, compiler.TestEqual(), compi...
[20210409144645] 3350  TRACE  : (22)       forrange.ego 226: Push            "range over string failed" stack[ 6]: 6, 6, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3351  TRACE  : (22)       forrange.ego 227: Call            3              stack[ 7]: range over string failed, 6, 6, compiler.TestEqual...
[20210409144645] 3352  TRACE  : (22)       forrange.ego 228: Call            1              stack[ 4]: [true range over string failed], compiler.TestAsse...
[20210409144645] 3353  TRACE  : (22)       forrange.ego 229: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3354  TRACE  : (22)       forrange.ego 230: AtLine          36             stack[ 1]: M<let>
[20210409144645] 3355  TRACE  : (22)       forrange.ego 231: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3356  TRACE  : (22)       forrange.ego 232: Load            "p"            stack[ 2]: M<let>, M<let>
[20210409144645] 3357  TRACE  : (22)       forrange.ego 233: Push            1              stack[ 3]: 4, M<let>, M<let>
[20210409144645] 3358  TRACE  : (22)       forrange.ego 234: Add                            stack[ 4]: 1, 4, M<let>, M<let>
[20210409144645] 3359  TRACE  : (22)       forrange.ego 235: Store           "p"            stack[ 3]: 5, M<let>, M<let>
[20210409144645] 3360  TRACE  : (22)       forrange.ego 236: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3361  TRACE  : (22)       forrange.ego 237: PopScope                       stack[ 1]: M<let>
[20210409144645] 3362  TRACE  : (22)       forrange.ego 238: Branch          @195           stack[ 1]: M<let>
[20210409144645] 3363  TRACE  : (22)       forrange.ego 195: RangeNext       239            stack[ 1]: M<let>
[20210409144645] 3364  TRACE  : (22)       forrange.ego 239: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 3365  TRACE  : (22)       forrange.ego 240: SymbolDelete    "ch"           stack[ 1]: M<let>
[20210409144645] 3366  TRACE  : (22)       forrange.ego 241: PopScope                       stack[ 1]: M<let>
[20210409144645] 3367  TRACE  : (22)       forrange.ego 242: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 3368  TRACE  : (22)       forrange.ego 243: PopScope                       stack[ 0]: <empty>
[20210409144645] 3369  TRACE  : (22)       forrange.ego 244: AtLine          40             stack[ 0]: <empty>
[20210409144645] 3370  TRACE  : (22)       forrange.ego 245: PushScope                      stack[ 0]: <empty>
[20210409144645] 3371  TRACE  : (22)       forrange.ego 246: AtLine          42             stack[ 0]: <empty>
[20210409144645] 3372  TRACE  : (22)       forrange.ego 247: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3373  TRACE  : (22)       forrange.ego 248: Load            "new"          stack[ 1]: M<let>
[20210409144645] 3374  TRACE  : (22)       forrange.ego 249: Push            T(map[int]string) stack[ 2]: functions.New(), M<let>
[20210409144645] 3375  TRACE  : (22)       forrange.ego 250: Call            1              stack[ 3]: T(map[int]string), functions.New(), M<let>
[20210409144645] 3376  TRACE  : (22)       forrange.ego 251: SymbolCreate    "a"            stack[ 2]: [], M<let>
[20210409144645] 3377  TRACE  : (22)       forrange.ego 252: Store           "a"            stack[ 2]: [], M<let>
[20210409144645] 3378  TRACE  : (22)       forrange.ego 253: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3379  TRACE  : (22)       forrange.ego 254: AtLine          43             stack[ 0]: <empty>
[20210409144645] 3380  TRACE  : (22)       forrange.ego 255: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3381  TRACE  : (22)       forrange.ego 256: Push            "abc"          stack[ 1]: M<let>
[20210409144645] 3382  TRACE  : (22)       forrange.ego 257: Load            "a"            stack[ 2]: abc, M<let>
[20210409144645] 3383  TRACE  : (22)       forrange.ego 258: Push            101            stack[ 3]: [], abc, M<let>
[20210409144645] 3384  TRACE  : (22)       forrange.ego 259: StoreIndex                     stack[ 4]: 101, [], abc, M<let>
[20210409144645] 3385  TRACE  : (22)       forrange.ego 260: DropToMarker    M<let>         stack[ 2]: [101: "abc"], M<let>
[20210409144645] 3386  TRACE  : (22)       forrange.ego 261: AtLine          44             stack[ 0]: <empty>
[20210409144645] 3387  TRACE  : (22)       forrange.ego 262: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3388  TRACE  : (22)       forrange.ego 263: Push            "def"          stack[ 1]: M<let>
[20210409144645] 3389  TRACE  : (22)       forrange.ego 264: Load            "a"            stack[ 2]: def, M<let>
[20210409144645] 3390  TRACE  : (22)       forrange.ego 265: Push            102            stack[ 3]: [101: "abc"], def, M<let>
[20210409144645] 3391  TRACE  : (22)       forrange.ego 266: StoreIndex                     stack[ 4]: 102, [101: "abc"], def, M<let>
[20210409144645] 3392  TRACE  : (22)       forrange.ego 267: DropToMarker    M<let>         stack[ 2]: [101: "abc", 102: "def"], M<let>
[20210409144645] 3393  TRACE  : (22)       forrange.ego 268: AtLine          45             stack[ 0]: <empty>
[20210409144645] 3394  TRACE  : (22)       forrange.ego 269: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3395  TRACE  : (22)       forrange.ego 270: Push            "ghi"          stack[ 1]: M<let>
[20210409144645] 3396  TRACE  : (22)       forrange.ego 271: Load            "a"            stack[ 2]: ghi, M<let>
[20210409144645] 3397  TRACE  : (22)       forrange.ego 272: Push            103            stack[ 3]: [101: "abc", 102: "def"], ghi, M<let>
[20210409144645] 3398  TRACE  : (22)       forrange.ego 273: StoreIndex                     stack[ 4]: 103, [101: "abc", 102: "def"], ghi, M<let>
[20210409144645] 3399  TRACE  : (22)       forrange.ego 274: DropToMarker    M<let>         stack[ 2]: [101: "abc", 102: "def", 103: "ghi"], M<let>
[20210409144645] 3400  TRACE  : (22)       forrange.ego 275: AtLine          46             stack[ 0]: <empty>
[20210409144645] 3401  TRACE  : (22)       forrange.ego 276: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3402  TRACE  : (22)       forrange.ego 277: Push            0              stack[ 1]: M<let>
[20210409144645] 3403  TRACE  : (22)       forrange.ego 278: SymbolCreate    "n"            stack[ 2]: 0, M<let>
[20210409144645] 3404  TRACE  : (22)       forrange.ego 279: Store           "n"            stack[ 2]: 0, M<let>
[20210409144645] 3405  TRACE  : (22)       forrange.ego 280: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3406  TRACE  : (22)       forrange.ego 281: AtLine          47             stack[ 0]: <empty>
[20210409144645] 3407  TRACE  : (22)       forrange.ego 282: PushScope                      stack[ 0]: <empty>
[20210409144645] 3408  TRACE  : (22)       forrange.ego 283: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3409  TRACE  : (22)       forrange.ego 284: Load            "a"            stack[ 1]: M<let>
[20210409144645] 3410  TRACE  : (22)       forrange.ego 285: RangeInit       [k v]          stack[ 2]: [101: "abc", 102: "def", 103: "ghi"], M<let>
[20210409144645] 3411  TRACE  : (22)       forrange.ego 286: RangeNext       361            stack[ 1]: M<let>
[20210409144645] 3412  TRACE  : (22)       forrange.ego 287: AtLine          47             stack[ 1]: M<let>
[20210409144645] 3413  TRACE  : (22)       forrange.ego 288: PushScope                      stack[ 1]: M<let>
[20210409144645] 3414  TRACE  : (22)       forrange.ego 289: AtLine          48             stack[ 1]: M<let>
[20210409144645] 3415  TRACE  : (22)       forrange.ego 290: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3416  TRACE  : (22)       forrange.ego 291: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3417  TRACE  : (22)       forrange.ego 292: Push            101            stack[ 3]: 101, functions.Bool(), M<let>
[20210409144645] 3418  TRACE  : (22)       forrange.ego 293: Equal                          stack[ 4]: 101, 101, functions.Bool(), M<let>
[20210409144645] 3419  TRACE  : (22)       forrange.ego 294: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 3420  TRACE  : (22)       forrange.ego 295: BranchFalse     @310           stack[ 2]: true, M<let>
[20210409144645] 3421  TRACE  : (22)       forrange.ego 296: AtLine          48             stack[ 1]: M<let>
[20210409144645] 3422  TRACE  : (22)       forrange.ego 297: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3423  TRACE  : (22)       forrange.ego 298: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3424  TRACE  : (22)       forrange.ego 299: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3425  TRACE  : (22)       forrange.ego 300: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3426  TRACE  : (22)       forrange.ego 301: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3427  TRACE  : (22)       forrange.ego 302: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3428  TRACE  : (22)       forrange.ego 303: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3429  TRACE  : (22)       forrange.ego 304: Load            "v"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3430  TRACE  : (22)       forrange.ego 305: Push            "abc"          stack[ 5]: abc, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 3431  TRACE  : (22)       forrange.ego 306: Push            "range over map failed" stack[ 6]: abc, abc, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 3432  TRACE  : (22)       forrange.ego 307: Call            3              stack[ 7]: range over map failed, abc, abc, compiler.TestEqua...
[20210409144645] 3433  TRACE  : (22)       forrange.ego 308: Call            1              stack[ 4]: [true range over map failed], compiler.TestAssert(...
[20210409144645] 3434  TRACE  : (22)       forrange.ego 309: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3435  TRACE  : (22)       forrange.ego 310: AtLine          49             stack[ 1]: M<let>
[20210409144645] 3436  TRACE  : (22)       forrange.ego 311: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3437  TRACE  : (22)       forrange.ego 312: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3438  TRACE  : (22)       forrange.ego 313: Push            102            stack[ 3]: 101, functions.Bool(), M<let>
[20210409144645] 3439  TRACE  : (22)       forrange.ego 314: Equal                          stack[ 4]: 102, 101, functions.Bool(), M<let>
[20210409144645] 3440  TRACE  : (22)       forrange.ego 315: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3441  TRACE  : (22)       forrange.ego 316: BranchFalse     @331           stack[ 2]: false, M<let>
[20210409144645] 3442  TRACE  : (22)       forrange.ego 331: AtLine          50             stack[ 1]: M<let>
[20210409144645] 3443  TRACE  : (22)       forrange.ego 332: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3444  TRACE  : (22)       forrange.ego 333: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3445  TRACE  : (22)       forrange.ego 334: Push            103            stack[ 3]: 101, functions.Bool(), M<let>
[20210409144645] 3446  TRACE  : (22)       forrange.ego 335: Equal                          stack[ 4]: 103, 101, functions.Bool(), M<let>
[20210409144645] 3447  TRACE  : (22)       forrange.ego 336: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3448  TRACE  : (22)       forrange.ego 337: BranchFalse     @352           stack[ 2]: false, M<let>
[20210409144645] 3449  TRACE  : (22)       forrange.ego 352: AtLine          51             stack[ 1]: M<let>
[20210409144645] 3450  TRACE  : (22)       forrange.ego 353: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3451  TRACE  : (22)       forrange.ego 354: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3452  TRACE  : (22)       forrange.ego 355: Push            1              stack[ 3]: 0, M<let>, M<let>
[20210409144645] 3453  TRACE  : (22)       forrange.ego 356: Add                            stack[ 4]: 1, 0, M<let>, M<let>
[20210409144645] 3454  TRACE  : (22)       forrange.ego 357: Store           "n"            stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3455  TRACE  : (22)       forrange.ego 358: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3456  TRACE  : (22)       forrange.ego 359: PopScope                       stack[ 1]: M<let>
[20210409144645] 3457  TRACE  : (22)       forrange.ego 360: Branch          @286           stack[ 1]: M<let>
[20210409144645] 3458  TRACE  : (22)       forrange.ego 286: RangeNext       361            stack[ 1]: M<let>
[20210409144645] 3459  TRACE  : (22)       forrange.ego 287: AtLine          47             stack[ 1]: M<let>
[20210409144645] 3460  TRACE  : (22)       forrange.ego 288: PushScope                      stack[ 1]: M<let>
[20210409144645] 3461  TRACE  : (22)       forrange.ego 289: AtLine          48             stack[ 1]: M<let>
[20210409144645] 3462  TRACE  : (22)       forrange.ego 290: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3463  TRACE  : (22)       forrange.ego 291: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3464  TRACE  : (22)       forrange.ego 292: Push            101            stack[ 3]: 102, functions.Bool(), M<let>
[20210409144645] 3465  TRACE  : (22)       forrange.ego 293: Equal                          stack[ 4]: 101, 102, functions.Bool(), M<let>
[20210409144645] 3466  TRACE  : (22)       forrange.ego 294: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3467  TRACE  : (22)       forrange.ego 295: BranchFalse     @310           stack[ 2]: false, M<let>
[20210409144645] 3468  TRACE  : (22)       forrange.ego 310: AtLine          49             stack[ 1]: M<let>
[20210409144645] 3469  TRACE  : (22)       forrange.ego 311: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3470  TRACE  : (22)       forrange.ego 312: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3471  TRACE  : (22)       forrange.ego 313: Push            102            stack[ 3]: 102, functions.Bool(), M<let>
[20210409144645] 3472  TRACE  : (22)       forrange.ego 314: Equal                          stack[ 4]: 102, 102, functions.Bool(), M<let>
[20210409144645] 3473  TRACE  : (22)       forrange.ego 315: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 3474  TRACE  : (22)       forrange.ego 316: BranchFalse     @331           stack[ 2]: true, M<let>
[20210409144645] 3475  TRACE  : (22)       forrange.ego 317: AtLine          49             stack[ 1]: M<let>
[20210409144645] 3476  TRACE  : (22)       forrange.ego 318: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3477  TRACE  : (22)       forrange.ego 319: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3478  TRACE  : (22)       forrange.ego 320: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3479  TRACE  : (22)       forrange.ego 321: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3480  TRACE  : (22)       forrange.ego 322: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3481  TRACE  : (22)       forrange.ego 323: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3482  TRACE  : (22)       forrange.ego 324: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3483  TRACE  : (22)       forrange.ego 325: Load            "v"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3484  TRACE  : (22)       forrange.ego 326: Push            "def"          stack[ 5]: def, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 3485  TRACE  : (22)       forrange.ego 327: Push            "range over map failed" stack[ 6]: def, def, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 3486  TRACE  : (22)       forrange.ego 328: Call            3              stack[ 7]: range over map failed, def, def, compiler.TestEqua...
[20210409144645] 3487  TRACE  : (22)       forrange.ego 329: Call            1              stack[ 4]: [true range over map failed], compiler.TestAssert(...
[20210409144645] 3488  TRACE  : (22)       forrange.ego 330: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3489  TRACE  : (22)       forrange.ego 331: AtLine          50             stack[ 1]: M<let>
[20210409144645] 3490  TRACE  : (22)       forrange.ego 332: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3491  TRACE  : (22)       forrange.ego 333: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3492  TRACE  : (22)       forrange.ego 334: Push            103            stack[ 3]: 102, functions.Bool(), M<let>
[20210409144645] 3493  TRACE  : (22)       forrange.ego 335: Equal                          stack[ 4]: 103, 102, functions.Bool(), M<let>
[20210409144645] 3494  TRACE  : (22)       forrange.ego 336: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3495  TRACE  : (22)       forrange.ego 337: BranchFalse     @352           stack[ 2]: false, M<let>
[20210409144645] 3496  TRACE  : (22)       forrange.ego 352: AtLine          51             stack[ 1]: M<let>
[20210409144645] 3497  TRACE  : (22)       forrange.ego 353: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3498  TRACE  : (22)       forrange.ego 354: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3499  TRACE  : (22)       forrange.ego 355: Push            1              stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3500  TRACE  : (22)       forrange.ego 356: Add                            stack[ 4]: 1, 1, M<let>, M<let>
[20210409144645] 3501  TRACE  : (22)       forrange.ego 357: Store           "n"            stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3502  TRACE  : (22)       forrange.ego 358: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3503  TRACE  : (22)       forrange.ego 359: PopScope                       stack[ 1]: M<let>
[20210409144645] 3504  TRACE  : (22)       forrange.ego 360: Branch          @286           stack[ 1]: M<let>
[20210409144645] 3505  TRACE  : (22)       forrange.ego 286: RangeNext       361            stack[ 1]: M<let>
[20210409144645] 3506  TRACE  : (22)       forrange.ego 287: AtLine          47             stack[ 1]: M<let>
[20210409144645] 3507  TRACE  : (22)       forrange.ego 288: PushScope                      stack[ 1]: M<let>
[20210409144645] 3508  TRACE  : (22)       forrange.ego 289: AtLine          48             stack[ 1]: M<let>
[20210409144645] 3509  TRACE  : (22)       forrange.ego 290: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3510  TRACE  : (22)       forrange.ego 291: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3511  TRACE  : (22)       forrange.ego 292: Push            101            stack[ 3]: 103, functions.Bool(), M<let>
[20210409144645] 3512  TRACE  : (22)       forrange.ego 293: Equal                          stack[ 4]: 101, 103, functions.Bool(), M<let>
[20210409144645] 3513  TRACE  : (22)       forrange.ego 294: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3514  TRACE  : (22)       forrange.ego 295: BranchFalse     @310           stack[ 2]: false, M<let>
[20210409144645] 3515  TRACE  : (22)       forrange.ego 310: AtLine          49             stack[ 1]: M<let>
[20210409144645] 3516  TRACE  : (22)       forrange.ego 311: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3517  TRACE  : (22)       forrange.ego 312: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3518  TRACE  : (22)       forrange.ego 313: Push            102            stack[ 3]: 103, functions.Bool(), M<let>
[20210409144645] 3519  TRACE  : (22)       forrange.ego 314: Equal                          stack[ 4]: 102, 103, functions.Bool(), M<let>
[20210409144645] 3520  TRACE  : (22)       forrange.ego 315: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3521  TRACE  : (22)       forrange.ego 316: BranchFalse     @331           stack[ 2]: false, M<let>
[20210409144645] 3522  TRACE  : (22)       forrange.ego 331: AtLine          50             stack[ 1]: M<let>
[20210409144645] 3523  TRACE  : (22)       forrange.ego 332: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3524  TRACE  : (22)       forrange.ego 333: Load            "k"            stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3525  TRACE  : (22)       forrange.ego 334: Push            103            stack[ 3]: 103, functions.Bool(), M<let>
[20210409144645] 3526  TRACE  : (22)       forrange.ego 335: Equal                          stack[ 4]: 103, 103, functions.Bool(), M<let>
[20210409144645] 3527  TRACE  : (22)       forrange.ego 336: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 3528  TRACE  : (22)       forrange.ego 337: BranchFalse     @352           stack[ 2]: true, M<let>
[20210409144645] 3529  TRACE  : (22)       forrange.ego 338: AtLine          50             stack[ 1]: M<let>
[20210409144645] 3530  TRACE  : (22)       forrange.ego 339: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3531  TRACE  : (22)       forrange.ego 340: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3532  TRACE  : (22)       forrange.ego 341: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3533  TRACE  : (22)       forrange.ego 342: Member          "assert"       stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3534  TRACE  : (22)       forrange.ego 343: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3535  TRACE  : (22)       forrange.ego 344: SetThis                        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3536  TRACE  : (22)       forrange.ego 345: Member          "Equal"        stack[ 4]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3537  TRACE  : (22)       forrange.ego 346: Load            "v"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3538  TRACE  : (22)       forrange.ego 347: Push            "ghi"          stack[ 5]: ghi, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 3539  TRACE  : (22)       forrange.ego 348: Push            "range over map failed" stack[ 6]: ghi, ghi, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 3540  TRACE  : (22)       forrange.ego 349: Call            3              stack[ 7]: range over map failed, ghi, ghi, compiler.TestEqua...
[20210409144645] 3541  TRACE  : (22)       forrange.ego 350: Call            1              stack[ 4]: [true range over map failed], compiler.TestAssert(...
[20210409144645] 3542  TRACE  : (22)       forrange.ego 351: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3543  TRACE  : (22)       forrange.ego 352: AtLine          51             stack[ 1]: M<let>
[20210409144645] 3544  TRACE  : (22)       forrange.ego 353: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3545  TRACE  : (22)       forrange.ego 354: Load            "n"            stack[ 2]: M<let>, M<let>
[20210409144645] 3546  TRACE  : (22)       forrange.ego 355: Push            1              stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3547  TRACE  : (22)       forrange.ego 356: Add                            stack[ 4]: 1, 2, M<let>, M<let>
[20210409144645] 3548  TRACE  : (22)       forrange.ego 357: Store           "n"            stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3549  TRACE  : (22)       forrange.ego 358: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3550  TRACE  : (22)       forrange.ego 359: PopScope                       stack[ 1]: M<let>
[20210409144645] 3551  TRACE  : (22)       forrange.ego 360: Branch          @286           stack[ 1]: M<let>
[20210409144645] 3552  TRACE  : (22)       forrange.ego 286: RangeNext       361            stack[ 1]: M<let>
[20210409144645] 3553  TRACE  : (22)       forrange.ego 361: SymbolDelete    "k"            stack[ 1]: M<let>
[20210409144645] 3554  TRACE  : (22)       forrange.ego 362: SymbolDelete    "v"            stack[ 1]: M<let>
[20210409144645] 3555  TRACE  : (22)       forrange.ego 363: PopScope                       stack[ 1]: M<let>
[20210409144645] 3556  TRACE  : (22)       forrange.ego 364: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 3557  TRACE  : (22)       forrange.ego 365: AtLine          53             stack[ 0]: <empty>
[20210409144645] 3558  TRACE  : (22)       forrange.ego 366: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3559  TRACE  : (22)       forrange.ego 367: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 3560  TRACE  : (22)       forrange.ego 368: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 3561  TRACE  : (22)       forrange.ego 369: Member          "assert"       stack[ 2]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3562  TRACE  : (22)       forrange.ego 370: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 3563  TRACE  : (22)       forrange.ego 371: SetThis                        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3564  TRACE  : (22)       forrange.ego 372: Member          "Equal"        stack[ 3]: Testing{ description: "flow: for loops with ranges...
[20210409144645] 3565  TRACE  : (22)       forrange.ego 373: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3566  TRACE  : (22)       forrange.ego 374: Push            3              stack[ 4]: 3, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3567  TRACE  : (22)       forrange.ego 375: Push            "range over map failed" stack[ 5]: 3, 3, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3568  TRACE  : (22)       forrange.ego 376: Call            3              stack[ 6]: range over map failed, 3, 3, compiler.TestEqual(),...
[20210409144645] 3569  TRACE  : (22)       forrange.ego 377: Call            1              stack[ 3]: [true range over map failed], compiler.TestAssert(...
[20210409144645] 3570  TRACE  : (22)       forrange.ego 378: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 3571  TRACE  : (22)       forrange.ego 379: PopScope                       stack[ 0]: <empty>
[20210409144645] 3572  TRACE  : (22)       forrange.ego 380: AtLine          55             stack[ 0]: <empty>
[20210409144645] 3573  TRACE  : (22)       forrange.ego 381: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3574  TRACE  : (22)       forrange.ego 382: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 3575  TRACE  : (22)       forrange.ego 383: Print                          stack[ 1]: (PASS)  
[20210409144645] 3576  TRACE  : (22)       forrange.ego 384: Timer           1              stack[ 0]: <empty>
[20210409144645] 3577  TRACE  : (22)       forrange.ego 385: Print                          stack[ 1]: 0.005s
[20210409144645] 3578  TRACE  : (22)       forrange.ego 386: Say             true           stack[ 0]: <empty>
TEST: flow: for loops with ranges                       (PASS)  0.005s
[20210409144645] 3579  TRACE  : (22)       forrange.ego 387: Stop                           stack[ 0]: <empty>
[20210409144645] 3580  TRACE  : *** Tracing go_func_literal.ego (23)  
[20210409144645] 3581  TRACE  : (23) go_func_literal.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 3582  TRACE  : (23) go_func_literal.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3583  TRACE  : (23) go_func_literal.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 3584  TRACE  : (23) go_func_literal.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3585  TRACE  : (23) go_func_literal.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3586  TRACE  : (23) go_func_literal.ego   5: Push            Testing{ description: "flow: function literal as go-routine" } stack[ 0]: <empty>
[20210409144645] 3587  TRACE  : (23) go_func_literal.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: function literal as g...
[20210409144645] 3588  TRACE  : (23) go_func_literal.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 3589  TRACE  : (23) go_func_literal.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 3590  TRACE  : (23) go_func_literal.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 3591  TRACE  : (23) go_func_literal.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: function literal as g...
[20210409144645] 3592  TRACE  : (23) go_func_literal.ego  11: Print                          stack[ 1]: flow: function literal as go-routine
[20210409144645] 3593  TRACE  : (23) go_func_literal.ego  12: Push            "              " stack[ 0]: <empty>
[20210409144645] 3594  TRACE  : (23) go_func_literal.ego  13: Print                          stack[ 1]:               
[20210409144645] 3595  TRACE  : (23) go_func_literal.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 3596  TRACE  : (23) go_func_literal.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 3597  TRACE  : (23) go_func_literal.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 3598  TRACE  : (23) go_func_literal.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 3599  TRACE  : (23) go_func_literal.ego  18: Push            chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a) stack[ 0]: <empty>
[20210409144645] 3600  TRACE  : (23) go_func_literal.ego  19: SymbolCreate    "ch"           stack[ 1]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3601  TRACE  : (23) go_func_literal.ego  20: Store           "ch"           stack[ 1]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3602  TRACE  : (23) go_func_literal.ego  21: AtLine          9              stack[ 0]: <empty>
[20210409144645] 3603  TRACE  : (23) go_func_literal.ego  22: Push            <anon>()       stack[ 0]: <empty>
[20210409144645] 3604  TRACE  : (23) go_func_literal.ego  23: StoreBytecode   "$82"          stack[ 1]: <anon>()
[20210409144645] 3605  TRACE  : (23) go_func_literal.ego  24: Push            "$82"          stack[ 0]: <empty>
[20210409144645] 3606  TRACE  : (23) go_func_literal.ego  25: Load            "ch"           stack[ 1]: $82
[20210409144645] 3607  TRACE  : (23) go_func_literal.ego  26: Push            "HellO"        stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3608  TRACE  : (23) go_func_literal.ego  27: Go              2              stack[ 3]: HellO, chan(open, size 1(0), id 938a3081-efc4-45ee...
[20210409144645] 3609  TRACE  : --> (23)  Launching go routine "$82"
[20210409144645] 3610  TRACE  : (23) go_func_literal.ego  28: AtLine          14             stack[ 0]: <empty>
[20210409144645] 3611  TRACE  : (23) go_func_literal.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3612  TRACE  : (23) go_func_literal.ego  30: Load            "ch"           stack[ 1]: M<let>
[20210409144645] 3613  TRACE  : (23) go_func_literal.ego  31: StoreChan       "x"            stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3614  TRACE  : --> Receiving on chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a)
[20210409144645] 3615  TRACE  : --> Starting Go routine "$82"
[20210409144645] 3616  TRACE  : --> Argument list: []interface {}{(*datatypes.Channel)(0xc0000a83c0), "HellO"}
[20210409144645] 3617  TRACE  : *** Tracing go $82 (24)  
[20210409144645] 3618  TRACE  : (24)             go $82   0: Load            "$82"          stack[ 0]: <empty>
[20210409144645] 3619  TRACE  : (24)             go $82   1: Push            chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a) stack[ 1]: $82()
[20210409144645] 3620  TRACE  : (24)             go $82   2: Push            "HellO"        stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3621  TRACE  : (24)             go $82   3: Call            2              stack[ 3]: HellO, chan(open, size 1(0), id 938a3081-efc4-45ee...
[20210409144645] 3622  TRACE  : (24)                $82   0: ArgCheck        [2 2 ]         stack[ 1]: F<go $82:0>
[20210409144645] 3623  TRACE  : (24)                $82   1: Load            "__args"       stack[ 1]: F<go $82:0>
[20210409144645] 3624  TRACE  : (24)                $82   2: LoadIndex       0              stack[ 2]: [chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-...
[20210409144645] 3625  TRACE  : (24)                $82   3: RequiredType    T(*chan)       stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3626  TRACE  : (24)                $82   4: StoreAlways     "c"            stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3627  TRACE  : (24)                $82   5: Load            "__args"       stack[ 1]: F<go $82:0>
[20210409144645] 3628  TRACE  : (24)                $82   6: LoadIndex       1              stack[ 2]: [chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-...
[20210409144645] 3629  TRACE  : (24)                $82   7: RequiredType    T(string)      stack[ 2]: HellO, F<go $82:0>
[20210409144645] 3630  TRACE  : (24)                $82   8: StoreAlways     "str"          stack[ 2]: HellO, F<go $82:0>
[20210409144645] 3631  TRACE  : (24)                $82   9: AtLine          9              stack[ 1]: F<go $82:0>
[20210409144645] 3632  TRACE  : (24)                $82  10: PushScope                      stack[ 1]: F<go $82:0>
[20210409144645] 3633  TRACE  : (24)                $82  11: AtLine          10             stack[ 1]: F<go $82:0>
[20210409144645] 3634  TRACE  : (24)                $82  12: Push            M<let>         stack[ 1]: F<go $82:0>
[20210409144645] 3635  TRACE  : (24)                $82  13: Load            "strings"      stack[ 2]: M<let>, F<go $82:0>
[20210409144645] 3636  TRACE  : (24)                $82  14: SetThis                        stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 3637  TRACE  : (24)                $82  15: Member          "ToLower"      stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 3638  TRACE  : (24)                $82  16: Load            "str"          stack[ 3]: functions.Lower(), M<let>, F<go $82:0>
[20210409144645] 3639  TRACE  : (24)                $82  17: Call            1              stack[ 4]: HellO, functions.Lower(), M<let>, F<go $82:0>
[20210409144645] 3640  TRACE  : (24)                $82  18: StoreChan       "c"            stack[ 3]: hello, M<let>, F<go $82:0>
[20210409144645] 3641  TRACE  : --> Sending on chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a)
[20210409144645] 3642  TRACE  : (24)                $82  19: DropToMarker    M<let>         stack[ 2]: M<let>, F<go $82:0>
[20210409144645] 3643  TRACE  : (24)                $82  20: PopScope                       stack[ 1]: F<go $82:0>
[20210409144645] 3644  TRACE  : (24)                $82  21: Return                         stack[ 1]: F<go $82:0>
[20210409144645] 3645  TRACE  : (24)             go $82   4: Stop                           stack[ 1]: M<let>
[20210409144645] 3646  TRACE  : (23) go_func_literal.ego  32: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3647  TRACE  : (23) go_func_literal.ego  33: AtLine          15             stack[ 0]: <empty>
[20210409144645] 3648  TRACE  : (23) go_func_literal.ego  34: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3649  TRACE  : (23) go_func_literal.ego  35: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 3650  TRACE  : (23) go_func_literal.ego  36: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 3651  TRACE  : (23) go_func_literal.ego  37: Member          "assert"       stack[ 2]: Testing{ description: "flow: function literal as g...
[20210409144645] 3652  TRACE  : (23) go_func_literal.ego  38: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 3653  TRACE  : (23) go_func_literal.ego  39: SetThis                        stack[ 3]: Testing{ description: "flow: function literal as g...
[20210409144645] 3654  TRACE  : (23) go_func_literal.ego  40: Member          "Equal"        stack[ 3]: Testing{ description: "flow: function literal as g...
[20210409144645] 3655  TRACE  : (23) go_func_literal.ego  41: Load            "x"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3656  TRACE  : (23) go_func_literal.ego  42: Push            "hello"        stack[ 4]: hello, compiler.TestEqual(), compiler.TestAssert()...
[20210409144645] 3657  TRACE  : (23) go_func_literal.ego  43: Call            2              stack[ 5]: hello, hello, compiler.TestEqual(), compiler.TestA...
[20210409144645] 3658  TRACE  : (23) go_func_literal.ego  44: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 3659  TRACE  : (23) go_func_literal.ego  45: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 3660  TRACE  : (23) go_func_literal.ego  46: PopScope                       stack[ 0]: <empty>
[20210409144645] 3661  TRACE  : (23) go_func_literal.ego  47: AtLine          18             stack[ 0]: <empty>
[20210409144645] 3662  TRACE  : (23) go_func_literal.ego  48: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3663  TRACE  : (23) go_func_literal.ego  49: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 3664  TRACE  : (23) go_func_literal.ego  50: Print                          stack[ 1]: (PASS)  
[20210409144645] 3665  TRACE  : (23) go_func_literal.ego  51: Timer           1              stack[ 0]: <empty>
[20210409144645] 3666  TRACE  : (23) go_func_literal.ego  52: Print                          stack[ 1]: 0.613ms
[20210409144645] 3667  TRACE  : (23) go_func_literal.ego  53: Say             true           stack[ 0]: <empty>
TEST: flow: function literal as go-routine              (PASS)  0.613ms
[20210409144645] 3668  TRACE  : (23) go_func_literal.ego  54: Stop                           stack[ 0]: <empty>
[20210409144645] 3669  TRACE  : *** Tracing goroutine.ego (25)  
[20210409144645] 3670  TRACE  : (25)      goroutine.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 3671  TRACE  : (25)      goroutine.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3672  TRACE  : (25)      goroutine.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 3673  TRACE  : (25)      goroutine.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3674  TRACE  : (25)      goroutine.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3675  TRACE  : (25)      goroutine.ego   5: Push            Testing{ description: "flow: go routine with channel" } stack[ 0]: <empty>
[20210409144645] 3676  TRACE  : (25)      goroutine.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: go routine with chann...
[20210409144645] 3677  TRACE  : (25)      goroutine.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 3678  TRACE  : (25)      goroutine.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 3679  TRACE  : (25)      goroutine.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 3680  TRACE  : (25)      goroutine.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: go routine with chann...
[20210409144645] 3681  TRACE  : (25)      goroutine.ego  11: Print                          stack[ 1]: flow: go routine with channel
[20210409144645] 3682  TRACE  : (25)      goroutine.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144645] 3683  TRACE  : (25)      goroutine.ego  13: Print                          stack[ 1]:                      
[20210409144645] 3684  TRACE  : (25)      goroutine.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 3685  TRACE  : (25)      goroutine.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 3686  TRACE  : (25)      goroutine.ego  16: Push            "500ms"        stack[ 0]: <empty>
[20210409144645] 3687  TRACE  : (25)      goroutine.ego  17: Constant        "halfSecond"   stack[ 1]: 500ms
[20210409144645] 3688  TRACE  : (25)      goroutine.ego  18: Push            gofn()         stack[ 0]: <empty>
[20210409144645] 3689  TRACE  : (25)      goroutine.ego  19: StoreAlways     "gofn"         stack[ 1]: gofn()
[20210409144645] 3690  TRACE  : (25)      goroutine.ego  20: AtLine          9              stack[ 0]: <empty>
[20210409144645] 3691  TRACE  : (25)      goroutine.ego  21: Push            chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a) stack[ 0]: <empty>
[20210409144645] 3692  TRACE  : (25)      goroutine.ego  22: SymbolCreate    "xc"           stack[ 1]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3693  TRACE  : (25)      goroutine.ego  23: Store           "xc"           stack[ 1]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3694  TRACE  : (25)      goroutine.ego  24: AtLine          10             stack[ 0]: <empty>
[20210409144645] 3695  TRACE  : (25)      goroutine.ego  25: Push            "gofn"         stack[ 0]: <empty>
[20210409144645] 3696  TRACE  : (25)      goroutine.ego  26: Load            "xc"           stack[ 1]: gofn
[20210409144645] 3697  TRACE  : (25)      goroutine.ego  27: Go              1              stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3698  TRACE  : --> (25)  Launching go routine "gofn"
[20210409144645] 3699  TRACE  : (25)      goroutine.ego  28: AtLine          11             stack[ 0]: <empty>
[20210409144645] 3700  TRACE  : (25)      goroutine.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3701  TRACE  : (25)      goroutine.ego  30: Load            "xc"           stack[ 1]: M<let>
[20210409144645] 3702  TRACE  : (25)      goroutine.ego  31: StoreChan       "m"            stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3703  TRACE  : --> Receiving on chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a)
[20210409144645] 3704  TRACE  : --> Starting Go routine "gofn"
[20210409144645] 3705  TRACE  : --> Argument list: []interface {}{(*datatypes.Channel)(0xc0000a83c0)}
[20210409144645] 3706  TRACE  : *** Tracing go gofn (26)  
[20210409144645] 3707  TRACE  : (26)            go gofn   0: Load            "gofn"         stack[ 0]: <empty>
[20210409144645] 3708  TRACE  : (26)            go gofn   1: Push            chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a) stack[ 1]: gofn()
[20210409144645] 3709  TRACE  : (26)            go gofn   2: Call            1              stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3710  TRACE  : (26)               gofn   0: ArgCheck        [1 1 gofn]     stack[ 1]: F<go gofn:0>
[20210409144645] 3711  TRACE  : (26)               gofn   1: Load            "__args"       stack[ 1]: F<go gofn:0>
[20210409144645] 3712  TRACE  : (26)               gofn   2: LoadIndex       0              stack[ 2]: [chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-...
[20210409144645] 3713  TRACE  : (26)               gofn   3: RequiredType    T(*chan)       stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3714  TRACE  : (26)               gofn   4: StoreAlways     "c"            stack[ 2]: chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-2...
[20210409144645] 3715  TRACE  : (26)               gofn   5: AtLine          5              stack[ 1]: F<go gofn:0>
[20210409144645] 3716  TRACE  : (26)               gofn   6: PushScope                      stack[ 1]: F<go gofn:0>
[20210409144645] 3717  TRACE  : (26)               gofn   7: AtLine          6              stack[ 1]: F<go gofn:0>
[20210409144645] 3718  TRACE  : (26)               gofn   8: Push            M<let>         stack[ 1]: F<go gofn:0>
[20210409144645] 3719  TRACE  : (26)               gofn   9: Push            "sent from afar" stack[ 2]: M<let>, F<go gofn:0>
[20210409144645] 3720  TRACE  : (26)               gofn  10: StoreChan       "c"            stack[ 3]: sent from afar, M<let>, F<go gofn:0>
[20210409144645] 3721  TRACE  : --> Sending on chan(open, size 1(0), id 938a3081-efc4-45ee-9ded-294bea54140a)
[20210409144645] 3722  TRACE  : (26)               gofn  11: DropToMarker    M<let>         stack[ 2]: M<let>, F<go gofn:0>
[20210409144645] 3723  TRACE  : (26)               gofn  12: PopScope                       stack[ 1]: F<go gofn:0>
[20210409144645] 3724  TRACE  : (26)               gofn  13: Return                         stack[ 1]: F<go gofn:0>
[20210409144645] 3725  TRACE  : (26)            go gofn   3: Stop                           stack[ 1]: M<let>
[20210409144645] 3726  TRACE  : (25)      goroutine.ego  32: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3727  TRACE  : (25)      goroutine.ego  33: AtLine          12             stack[ 0]: <empty>
[20210409144645] 3728  TRACE  : (25)      goroutine.ego  34: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3729  TRACE  : (25)      goroutine.ego  35: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 3730  TRACE  : (25)      goroutine.ego  36: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 3731  TRACE  : (25)      goroutine.ego  37: Member          "assert"       stack[ 2]: Testing{ description: "flow: go routine with chann...
[20210409144645] 3732  TRACE  : (25)      goroutine.ego  38: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 3733  TRACE  : (25)      goroutine.ego  39: SetThis                        stack[ 3]: Testing{ description: "flow: go routine with chann...
[20210409144645] 3734  TRACE  : (25)      goroutine.ego  40: Member          "Equal"        stack[ 3]: Testing{ description: "flow: go routine with chann...
[20210409144645] 3735  TRACE  : (25)      goroutine.ego  41: Load            "m"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3736  TRACE  : (25)      goroutine.ego  42: Push            "sent from afar" stack[ 4]: sent from afar, compiler.TestEqual(), compiler.Tes...
[20210409144645] 3737  TRACE  : (25)      goroutine.ego  43: Push            "Failed to get correct value from channel" stack[ 5]: sent from afar, sent from afar, compiler.TestEqual...
[20210409144645] 3738  TRACE  : (25)      goroutine.ego  44: Call            3              stack[ 6]: Failed to get correct value from channel, sent fro...
[20210409144645] 3739  TRACE  : (25)      goroutine.ego  45: Call            1              stack[ 3]: [true Failed to get correct value from channel], c...
[20210409144645] 3740  TRACE  : (25)      goroutine.ego  46: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 3741  TRACE  : (25)      goroutine.ego  47: AtLine          14             stack[ 0]: <empty>
[20210409144645] 3742  TRACE  : (25)      goroutine.ego  48: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3743  TRACE  : (25)      goroutine.ego  49: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 3744  TRACE  : (25)      goroutine.ego  50: Print                          stack[ 1]: (PASS)  
[20210409144645] 3745  TRACE  : (25)      goroutine.ego  51: Timer           1              stack[ 0]: <empty>
[20210409144645] 3746  TRACE  : (25)      goroutine.ego  52: Print                          stack[ 1]: 0.459ms
[20210409144645] 3747  TRACE  : (25)      goroutine.ego  53: Say             true           stack[ 0]: <empty>
TEST: flow: go routine with channel                     (PASS)  0.459ms
[20210409144645] 3748  TRACE  : (25)      goroutine.ego  54: Stop                           stack[ 0]: <empty>
[20210409144645] 3749  TRACE  : *** Tracing rangechannels.ego (27)  
[20210409144645] 3750  TRACE  : (27)  rangechannels.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 3751  TRACE  : (27)  rangechannels.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3752  TRACE  : (27)  rangechannels.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 3753  TRACE  : (27)  rangechannels.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3754  TRACE  : (27)  rangechannels.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3755  TRACE  : (27)  rangechannels.ego   5: Push            Testing{ description: "flow: channel with multiple messages" } stack[ 0]: <empty>
[20210409144645] 3756  TRACE  : (27)  rangechannels.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3757  TRACE  : (27)  rangechannels.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 3758  TRACE  : (27)  rangechannels.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 3759  TRACE  : (27)  rangechannels.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 3760  TRACE  : (27)  rangechannels.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3761  TRACE  : (27)  rangechannels.ego  11: Print                          stack[ 1]: flow: channel with multiple messages
[20210409144645] 3762  TRACE  : (27)  rangechannels.ego  12: Push            "              " stack[ 0]: <empty>
[20210409144645] 3763  TRACE  : (27)  rangechannels.ego  13: Print                          stack[ 1]:               
[20210409144645] 3764  TRACE  : (27)  rangechannels.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 3765  TRACE  : (27)  rangechannels.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 3766  TRACE  : (27)  rangechannels.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 3767  TRACE  : (27)  rangechannels.ego  17: Push            sender()       stack[ 0]: <empty>
[20210409144645] 3768  TRACE  : (27)  rangechannels.ego  18: StoreAlways     "sender"       stack[ 1]: sender()
[20210409144645] 3769  TRACE  : (27)  rangechannels.ego  19: AtLine          12             stack[ 0]: <empty>
[20210409144645] 3770  TRACE  : (27)  rangechannels.ego  20: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3771  TRACE  : (27)  rangechannels.ego  21: Load            "make"         stack[ 1]: M<let>
[20210409144645] 3772  TRACE  : (27)  rangechannels.ego  22: Push            chan(closed, size 0(0), id ) stack[ 2]: functions.Make(), M<let>
[20210409144645] 3773  TRACE  : (27)  rangechannels.ego  23: Push            5              stack[ 3]: chan(closed, size 0(0), id ), functions.Make(), M<...
[20210409144645] 3774  TRACE  : (27)  rangechannels.ego  24: Call            2              stack[ 4]: 5, chan(closed, size 0(0), id ), functions.Make(),...
[20210409144645] 3775  TRACE  : --> Created  chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3776  TRACE  : (27)  rangechannels.ego  25: SymbolCreate    "xc"           stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3777  TRACE  : (27)  rangechannels.ego  26: Store           "xc"           stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3778  TRACE  : (27)  rangechannels.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3779  TRACE  : (27)  rangechannels.ego  28: AtLine          13             stack[ 0]: <empty>
[20210409144645] 3780  TRACE  : (27)  rangechannels.ego  29: Push            "sender"       stack[ 0]: <empty>
[20210409144645] 3781  TRACE  : (27)  rangechannels.ego  30: Load            "xc"           stack[ 1]: sender
[20210409144645] 3782  TRACE  : (27)  rangechannels.ego  31: Go              1              stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3783  TRACE  : --> (27)  Launching go routine "sender"
[20210409144645] 3784  TRACE  : (27)  rangechannels.ego  32: AtLine          16             stack[ 0]: <empty>
[20210409144645] 3785  TRACE  : (27)  rangechannels.ego  33: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3786  TRACE  : (27)  rangechannels.ego  34: Push            1              stack[ 1]: M<let>
[20210409144645] 3787  TRACE  : (27)  rangechannels.ego  35: SymbolCreate    "count"        stack[ 2]: 1, M<let>
[20210409144645] 3788  TRACE  : (27)  rangechannels.ego  36: Store           "count"        stack[ 2]: 1, M<let>
[20210409144645] 3789  TRACE  : (27)  rangechannels.ego  37: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3790  TRACE  : (27)  rangechannels.ego  38: AtLine          18             stack[ 0]: <empty>
[20210409144645] 3791  TRACE  : (27)  rangechannels.ego  39: PushScope                      stack[ 0]: <empty>
[20210409144645] 3792  TRACE  : (27)  rangechannels.ego  40: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3793  TRACE  : --> Starting Go routine "sender"
[20210409144645] 3795  TRACE  : --> Argument list: []interface {}{(*datatypes.Channel)(0xc0002cc580)}
[20210409144645] 3794  TRACE  : (27)  rangechannels.ego  41: Load            "xc"           stack[ 1]: M<let>
[20210409144645] 3796  TRACE  : *** Tracing go sender (28)  
[20210409144645] 3797  TRACE  : (28)          go sender   0: Load            "sender"       stack[ 0]: <empty>
[20210409144645] 3798  TRACE  : (27)  rangechannels.ego  42: RangeInit       [_ i]          stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3799  TRACE  : (28)          go sender   1: Push            chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681) stack[ 1]: sender()
[20210409144645] 3801  TRACE  : (28)          go sender   2: Call            1              stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3800  TRACE  : (27)  rangechannels.ego  43: RangeNext       103            stack[ 1]: M<let>
[20210409144645] 3803  TRACE  : --> Receiving on chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3802  TRACE  : (28)             sender   0: ArgCheck        [1 1 sender]   stack[ 1]: F<go sender:0>
[20210409144645] 3804  TRACE  : (28)             sender   1: Load            "__args"       stack[ 1]: F<go sender:0>
[20210409144645] 3805  TRACE  : (28)             sender   2: LoadIndex       0              stack[ 2]: [chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-...
[20210409144645] 3806  TRACE  : (28)             sender   3: RequiredType    T(*chan)       stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3807  TRACE  : (28)             sender   4: StoreAlways     "c"            stack[ 2]: chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3808  TRACE  : (28)             sender   5: AtLine          5              stack[ 1]: F<go sender:0>
[20210409144645] 3809  TRACE  : (28)             sender   6: PushScope                      stack[ 1]: F<go sender:0>
[20210409144645] 3810  TRACE  : (28)             sender   7: AtLine          6              stack[ 1]: F<go sender:0>
[20210409144645] 3811  TRACE  : (28)             sender   8: Branch          @16            stack[ 1]: F<go sender:0>
[20210409144645] 3812  TRACE  : (28)             sender  16: AtLine          7              stack[ 1]: F<go sender:0>
[20210409144645] 3813  TRACE  : (28)             sender  17: Push            M<let>         stack[ 1]: F<go sender:0>
[20210409144645] 3814  TRACE  : (28)             sender  18: Push            "sent from afar" stack[ 2]: M<let>, F<go sender:0>
[20210409144645] 3815  TRACE  : (28)             sender  19: StoreChan       "c"            stack[ 3]: sent from afar, M<let>, F<go sender:0>
[20210409144645] 3816  TRACE  : --> Sending on chan(open, size 5(0), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3817  TRACE  : (28)             sender  20: DropToMarker    M<let>         stack[ 2]: M<let>, F<go sender:0>
[20210409144645] 3818  TRACE  : (28)             sender  21: AtLine          8              stack[ 1]: F<go sender:0>
[20210409144645] 3819  TRACE  : (28)             sender  22: Push            M<let>         stack[ 1]: F<go sender:0>
[20210409144645] 3820  TRACE  : (28)             sender  23: Push            "and another for good measure" stack[ 2]: M<let>, F<go sender:0>
[20210409144645] 3821  TRACE  : (28)             sender  24: StoreChan       "c"            stack[ 3]: and another for good measure, M<let>, F<go sender:...
[20210409144645] 3822  TRACE  : --> Sending on chan(open, size 5(1), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3823  TRACE  : (28)             sender  25: DropToMarker    M<let>         stack[ 2]: M<let>, F<go sender:0>
[20210409144645] 3824  TRACE  : (28)             sender  26: PopScope                       stack[ 1]: F<go sender:0>
[20210409144645] 3825  TRACE  : (28)             sender  27: LocalCall       @9             stack[ 1]: F<go sender:0>
[20210409144645] 3827  TRACE  : (28)             sender   9: AtLine          6              stack[ 2]: F<sender:8>, F<go sender:0>
[20210409144645] 3826  TRACE  : (27)  rangechannels.ego  44: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3829  TRACE  : (27)  rangechannels.ego  45: PushScope                      stack[ 1]: M<let>
[20210409144645] 3828  TRACE  : (28)             sender  10: Push            M<call>        stack[ 2]: F<sender:8>, F<go sender:0>
[20210409144645] 3830  TRACE  : (27)  rangechannels.ego  46: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3831  TRACE  : (27)  rangechannels.ego  47: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3832  TRACE  : (27)  rangechannels.ego  48: Load            "count"        stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3833  TRACE  : (28)             sender  11: Load            "close"        stack[ 3]: M<call>, F<sender:8>, F<go sender:0>
[20210409144645] 3834  TRACE  : (27)  rangechannels.ego  49: Push            1              stack[ 3]: 1, functions.Bool(), M<let>
[20210409144645] 3836  TRACE  : (27)  rangechannels.ego  50: Equal                          stack[ 4]: 1, 1, functions.Bool(), M<let>
[20210409144645] 3837  TRACE  : (27)  rangechannels.ego  51: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 3838  TRACE  : (27)  rangechannels.ego  52: BranchFalse     @70            stack[ 2]: true, M<let>
[20210409144645] 3835  TRACE  : (28)             sender  12: Load            "c"            stack[ 4]: functions.CloseAny(), M<call>, F<sender:8>, F<go s...
[20210409144645] 3840  TRACE  : (28)             sender  13: Call            1              stack[ 5]: chan(open, size 5(1), id c8170a9e-465b-44e8-a7f0-e...
[20210409144645] 3839  TRACE  : (27)  rangechannels.ego  53: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3841  TRACE  : (27)  rangechannels.ego  54: PushScope                      stack[ 1]: M<let>
[20210409144645] 3842  TRACE  : (27)  rangechannels.ego  55: AtLine          20             stack[ 1]: M<let>
[20210409144645] 3844  TRACE  : (27)  rangechannels.ego  56: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3845  TRACE  : (27)  rangechannels.ego  57: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3843  TRACE  : --> Closing chan(open, size 5(1), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3847  TRACE  : (28)             sender  14: DropToMarker    M<call>        stack[ 4]: true, M<call>, F<sender:8>, F<go sender:0>
[20210409144645] 3846  TRACE  : (27)  rangechannels.ego  58: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3849  TRACE  : (27)  rangechannels.ego  59: Member          "assert"       stack[ 3]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3848  TRACE  : (28)             sender  15: Return                         stack[ 2]: F<sender:8>, F<go sender:0>
[20210409144645] 3851  TRACE  : (28)             sender  28: Return                         stack[ 2]: M<call>, F<go sender:0>
[20210409144645] 3850  TRACE  : (27)  rangechannels.ego  60: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3853  TRACE  : (27)  rangechannels.ego  61: SetThis                        stack[ 4]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3852  TRACE  : (28)          go sender   3: Stop                           stack[ 2]: M<call>, M<call>
[20210409144645] 3854  TRACE  : (27)  rangechannels.ego  62: Member          "Equal"        stack[ 4]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3855  TRACE  : (27)  rangechannels.ego  63: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3856  TRACE  : (27)  rangechannels.ego  64: Push            "sent from afar" stack[ 5]: sent from afar, compiler.TestEqual(), compiler.Tes...
[20210409144645] 3857  TRACE  : (27)  rangechannels.ego  65: Push            "First message wrong" stack[ 6]: sent from afar, sent from afar, compiler.TestEqual...
[20210409144645] 3858  TRACE  : (27)  rangechannels.ego  66: Call            3              stack[ 7]: First message wrong, sent from afar, sent from afa...
[20210409144645] 3859  TRACE  : (27)  rangechannels.ego  67: Call            1              stack[ 4]: [true First message wrong], compiler.TestAssert(),...
[20210409144645] 3860  TRACE  : (27)  rangechannels.ego  68: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3861  TRACE  : (27)  rangechannels.ego  69: PopScope                       stack[ 1]: M<let>
[20210409144645] 3862  TRACE  : (27)  rangechannels.ego  70: AtLine          22             stack[ 1]: M<let>
[20210409144645] 3863  TRACE  : (27)  rangechannels.ego  71: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3864  TRACE  : (27)  rangechannels.ego  72: Load            "count"        stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3865  TRACE  : (27)  rangechannels.ego  73: Push            2              stack[ 3]: 1, functions.Bool(), M<let>
[20210409144645] 3866  TRACE  : (27)  rangechannels.ego  74: Equal                          stack[ 4]: 2, 1, functions.Bool(), M<let>
[20210409144645] 3867  TRACE  : (27)  rangechannels.ego  75: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3868  TRACE  : (27)  rangechannels.ego  76: BranchFalse     @94            stack[ 2]: false, M<let>
[20210409144645] 3869  TRACE  : (27)  rangechannels.ego  94: AtLine          25             stack[ 1]: M<let>
[20210409144645] 3870  TRACE  : (27)  rangechannels.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3871  TRACE  : (27)  rangechannels.ego  96: Load            "count"        stack[ 2]: M<let>, M<let>
[20210409144645] 3872  TRACE  : (27)  rangechannels.ego  97: Push            1              stack[ 3]: 1, M<let>, M<let>
[20210409144645] 3873  TRACE  : (27)  rangechannels.ego  98: Add                            stack[ 4]: 1, 1, M<let>, M<let>
[20210409144645] 3874  TRACE  : (27)  rangechannels.ego  99: Store           "count"        stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3875  TRACE  : (27)  rangechannels.ego 100: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3876  TRACE  : (27)  rangechannels.ego 101: PopScope                       stack[ 1]: M<let>
[20210409144645] 3877  TRACE  : (27)  rangechannels.ego 102: Branch          @43            stack[ 1]: M<let>
[20210409144645] 3878  TRACE  : (27)  rangechannels.ego  43: RangeNext       103            stack[ 1]: M<let>
[20210409144645] 3879  TRACE  : --> Receiving on chan(closed, size 5(1), id c8170a9e-465b-44e8-a7f0-e2a06e1b0681)
[20210409144645] 3880  TRACE  : (27)  rangechannels.ego  44: AtLine          18             stack[ 1]: M<let>
[20210409144645] 3881  TRACE  : (27)  rangechannels.ego  45: PushScope                      stack[ 1]: M<let>
[20210409144645] 3882  TRACE  : (27)  rangechannels.ego  46: AtLine          19             stack[ 1]: M<let>
[20210409144645] 3883  TRACE  : (27)  rangechannels.ego  47: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3884  TRACE  : (27)  rangechannels.ego  48: Load            "count"        stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3885  TRACE  : (27)  rangechannels.ego  49: Push            1              stack[ 3]: 2, functions.Bool(), M<let>
[20210409144645] 3886  TRACE  : (27)  rangechannels.ego  50: Equal                          stack[ 4]: 1, 2, functions.Bool(), M<let>
[20210409144645] 3887  TRACE  : (27)  rangechannels.ego  51: Call            1              stack[ 3]: false, functions.Bool(), M<let>
[20210409144645] 3888  TRACE  : (27)  rangechannels.ego  52: BranchFalse     @70            stack[ 2]: false, M<let>
[20210409144645] 3889  TRACE  : (27)  rangechannels.ego  70: AtLine          22             stack[ 1]: M<let>
[20210409144645] 3890  TRACE  : (27)  rangechannels.ego  71: Load            "bool"         stack[ 1]: M<let>
[20210409144645] 3891  TRACE  : (27)  rangechannels.ego  72: Load            "count"        stack[ 2]: functions.Bool(), M<let>
[20210409144645] 3892  TRACE  : (27)  rangechannels.ego  73: Push            2              stack[ 3]: 2, functions.Bool(), M<let>
[20210409144645] 3893  TRACE  : (27)  rangechannels.ego  74: Equal                          stack[ 4]: 2, 2, functions.Bool(), M<let>
[20210409144645] 3894  TRACE  : (27)  rangechannels.ego  75: Call            1              stack[ 3]: true, functions.Bool(), M<let>
[20210409144645] 3895  TRACE  : (27)  rangechannels.ego  76: BranchFalse     @94            stack[ 2]: true, M<let>
[20210409144645] 3896  TRACE  : (27)  rangechannels.ego  77: AtLine          22             stack[ 1]: M<let>
[20210409144645] 3897  TRACE  : (27)  rangechannels.ego  78: PushScope                      stack[ 1]: M<let>
[20210409144645] 3898  TRACE  : (27)  rangechannels.ego  79: AtLine          23             stack[ 1]: M<let>
[20210409144645] 3899  TRACE  : (27)  rangechannels.ego  80: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 3900  TRACE  : (27)  rangechannels.ego  81: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 3901  TRACE  : (27)  rangechannels.ego  82: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 3902  TRACE  : (27)  rangechannels.ego  83: Member          "assert"       stack[ 3]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3903  TRACE  : (27)  rangechannels.ego  84: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 3904  TRACE  : (27)  rangechannels.ego  85: SetThis                        stack[ 4]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3905  TRACE  : (27)  rangechannels.ego  86: Member          "Equal"        stack[ 4]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3906  TRACE  : (27)  rangechannels.ego  87: Load            "i"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3907  TRACE  : (27)  rangechannels.ego  88: Push            "and another for good measure" stack[ 5]: and another for good measure, compiler.TestEqual()...
[20210409144645] 3908  TRACE  : (27)  rangechannels.ego  89: Push            "Second message wrong" stack[ 6]: and another for good measure, and another for good...
[20210409144645] 3909  TRACE  : (27)  rangechannels.ego  90: Call            3              stack[ 7]: Second message wrong, and another for good measure...
[20210409144645] 3910  TRACE  : (27)  rangechannels.ego  91: Call            1              stack[ 4]: [true Second message wrong], compiler.TestAssert()...
[20210409144645] 3911  TRACE  : (27)  rangechannels.ego  92: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 3912  TRACE  : (27)  rangechannels.ego  93: PopScope                       stack[ 1]: M<let>
[20210409144645] 3913  TRACE  : (27)  rangechannels.ego  94: AtLine          25             stack[ 1]: M<let>
[20210409144645] 3914  TRACE  : (27)  rangechannels.ego  95: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 3915  TRACE  : (27)  rangechannels.ego  96: Load            "count"        stack[ 2]: M<let>, M<let>
[20210409144645] 3916  TRACE  : (27)  rangechannels.ego  97: Push            1              stack[ 3]: 2, M<let>, M<let>
[20210409144645] 3917  TRACE  : (27)  rangechannels.ego  98: Add                            stack[ 4]: 1, 2, M<let>, M<let>
[20210409144645] 3918  TRACE  : (27)  rangechannels.ego  99: Store           "count"        stack[ 3]: 3, M<let>, M<let>
[20210409144645] 3919  TRACE  : (27)  rangechannels.ego 100: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 3920  TRACE  : (27)  rangechannels.ego 101: PopScope                       stack[ 1]: M<let>
[20210409144645] 3921  TRACE  : (27)  rangechannels.ego 102: Branch          @43            stack[ 1]: M<let>
[20210409144645] 3922  TRACE  : (27)  rangechannels.ego  43: RangeNext       103            stack[ 1]: M<let>
[20210409144645] 3923  TRACE  : (27)  rangechannels.ego 103: SymbolDelete    "i"            stack[ 1]: M<let>
[20210409144645] 3924  TRACE  : (27)  rangechannels.ego 104: PopScope                       stack[ 1]: M<let>
[20210409144645] 3925  TRACE  : (27)  rangechannels.ego 105: DropToMarker                   stack[ 1]: M<let>
[20210409144645] 3926  TRACE  : (27)  rangechannels.ego 106: AtLine          28             stack[ 0]: <empty>
[20210409144645] 3927  TRACE  : (27)  rangechannels.ego 107: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3928  TRACE  : (27)  rangechannels.ego 108: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 3929  TRACE  : (27)  rangechannels.ego 109: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 3930  TRACE  : (27)  rangechannels.ego 110: Member          "assert"       stack[ 2]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3931  TRACE  : (27)  rangechannels.ego 111: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 3932  TRACE  : (27)  rangechannels.ego 112: SetThis                        stack[ 3]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3933  TRACE  : (27)  rangechannels.ego 113: Member          "Equal"        stack[ 3]: Testing{ description: "flow: channel with multiple...
[20210409144645] 3934  TRACE  : (27)  rangechannels.ego 114: Load            "count"        stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 3935  TRACE  : (27)  rangechannels.ego 115: Push            3              stack[ 4]: 3, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 3936  TRACE  : (27)  rangechannels.ego 116: Push            "Wrong number of messages" stack[ 5]: 3, 3, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 3937  TRACE  : (27)  rangechannels.ego 117: Call            3              stack[ 6]: Wrong number of messages, 3, 3, compiler.TestEqual...
[20210409144645] 3938  TRACE  : (27)  rangechannels.ego 118: Call            1              stack[ 3]: [true Wrong number of messages], compiler.TestAsse...
[20210409144645] 3939  TRACE  : (27)  rangechannels.ego 119: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 3940  TRACE  : (27)  rangechannels.ego 120: PopScope                       stack[ 0]: <empty>
[20210409144645] 3941  TRACE  : (27)  rangechannels.ego 121: AtLine          30             stack[ 0]: <empty>
[20210409144645] 3942  TRACE  : (27)  rangechannels.ego 122: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3943  TRACE  : (27)  rangechannels.ego 123: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 3944  TRACE  : (27)  rangechannels.ego 124: Print                          stack[ 1]: (PASS)  
[20210409144645] 3945  TRACE  : (27)  rangechannels.ego 125: Timer           1              stack[ 0]: <empty>
[20210409144645] 3946  TRACE  : (27)  rangechannels.ego 126: Print                          stack[ 1]: 0.001s
[20210409144645] 3947  TRACE  : (27)  rangechannels.ego 127: Say             true           stack[ 0]: <empty>
TEST: flow: channel with multiple messages              (PASS)  0.001s
[20210409144645] 3948  TRACE  : (27)  rangechannels.ego 128: Stop                           stack[ 0]: <empty>
[20210409144645] 3949  TRACE  : *** Tracing switch.ego (29)  
[20210409144645] 3950  TRACE  : (29)         switch.ego   0: AtLine          4              stack[ 0]: <empty>
[20210409144645] 3951  TRACE  : (29)         switch.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 3952  TRACE  : (29)         switch.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 3953  TRACE  : (29)         switch.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3954  TRACE  : (29)         switch.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 3955  TRACE  : (29)         switch.ego   5: Push            Testing{ description: "flow: switch statement" } stack[ 0]: <empty>
[20210409144645] 3956  TRACE  : (29)         switch.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "flow: switch statement" }
[20210409144645] 3957  TRACE  : (29)         switch.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 3958  TRACE  : (29)         switch.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 3959  TRACE  : (29)         switch.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 3960  TRACE  : (29)         switch.ego  10: Member          "description"  stack[ 1]: Testing{ description: "flow: switch statement" }
[20210409144645] 3961  TRACE  : (29)         switch.ego  11: Print                          stack[ 1]: flow: switch statement
[20210409144645] 3962  TRACE  : (29)         switch.ego  12: Push            "                            " stack[ 0]: <empty>
[20210409144645] 3963  TRACE  : (29)         switch.ego  13: Print                          stack[ 1]:                             
[20210409144645] 3964  TRACE  : (29)         switch.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 3965  TRACE  : (29)         switch.ego  15: AtLine          6              stack[ 0]: <empty>
[20210409144645] 3966  TRACE  : (29)         switch.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 3967  TRACE  : (29)         switch.ego  17: AtLine          7              stack[ 0]: <empty>
[20210409144645] 3968  TRACE  : (29)         switch.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3969  TRACE  : (29)         switch.ego  19: Push            5              stack[ 1]: M<let>
[20210409144645] 3970  TRACE  : (29)         switch.ego  20: SymbolCreate    "x"            stack[ 2]: 5, M<let>
[20210409144645] 3971  TRACE  : (29)         switch.ego  21: Store           "x"            stack[ 2]: 5, M<let>
[20210409144645] 3972  TRACE  : (29)         switch.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3973  TRACE  : (29)         switch.ego  23: AtLine          10             stack[ 0]: <empty>
[20210409144645] 3974  TRACE  : (29)         switch.ego  24: Load            "x"            stack[ 0]: <empty>
[20210409144645] 3975  TRACE  : (29)         switch.ego  25: SymbolCreate    "$89"          stack[ 1]: 5
[20210409144645] 3976  TRACE  : (29)         switch.ego  26: Store           "$89"          stack[ 1]: 5
[20210409144645] 3977  TRACE  : (29)         switch.ego  27: Push            1              stack[ 0]: <empty>
[20210409144645] 3978  TRACE  : (29)         switch.ego  28: Load            "$89"          stack[ 1]: 1
[20210409144645] 3979  TRACE  : (29)         switch.ego  29: Equal                          stack[ 2]: 5, 1
[20210409144645] 3980  TRACE  : (29)         switch.ego  30: BranchFalse     @36            stack[ 1]: false
[20210409144645] 3981  TRACE  : (29)         switch.ego  36: Push            2              stack[ 0]: <empty>
[20210409144645] 3982  TRACE  : (29)         switch.ego  37: Load            "$89"          stack[ 1]: 2
[20210409144645] 3983  TRACE  : (29)         switch.ego  38: Equal                          stack[ 2]: 5, 2
[20210409144645] 3984  TRACE  : (29)         switch.ego  39: BranchFalse     @45            stack[ 1]: false
[20210409144645] 3985  TRACE  : (29)         switch.ego  45: Push            5              stack[ 0]: <empty>
[20210409144645] 3986  TRACE  : (29)         switch.ego  46: Load            "$89"          stack[ 1]: 5
[20210409144645] 3987  TRACE  : (29)         switch.ego  47: Equal                          stack[ 2]: 5, 5
[20210409144645] 3988  TRACE  : (29)         switch.ego  48: BranchFalse     @50            stack[ 1]: true
[20210409144645] 3989  TRACE  : (29)         switch.ego  49: Branch          @54            stack[ 0]: <empty>
[20210409144645] 3990  TRACE  : (29)         switch.ego  54: SymbolDelete    "$89"          stack[ 0]: <empty>
[20210409144645] 3991  TRACE  : (29)         switch.ego  55: AtLine          22             stack[ 0]: <empty>
[20210409144645] 3992  TRACE  : (29)         switch.ego  56: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 3993  TRACE  : (29)         switch.ego  57: Push            6              stack[ 1]: M<let>
[20210409144645] 3994  TRACE  : (29)         switch.ego  58: Store           "x"            stack[ 2]: 6, M<let>
[20210409144645] 3995  TRACE  : (29)         switch.ego  59: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 3996  TRACE  : (29)         switch.ego  60: AtLine          23             stack[ 0]: <empty>
[20210409144645] 3997  TRACE  : (29)         switch.ego  61: Load            "x"            stack[ 0]: <empty>
[20210409144645] 3998  TRACE  : (29)         switch.ego  62: SymbolCreate    "$90"          stack[ 1]: 6
[20210409144645] 3999  TRACE  : (29)         switch.ego  63: Store           "$90"          stack[ 1]: 6
[20210409144645] 4000  TRACE  : (29)         switch.ego  64: Push            1              stack[ 0]: <empty>
[20210409144645] 4001  TRACE  : (29)         switch.ego  65: Load            "$90"          stack[ 1]: 1
[20210409144645] 4002  TRACE  : (29)         switch.ego  66: Equal                          stack[ 2]: 6, 1
[20210409144645] 4003  TRACE  : (29)         switch.ego  67: BranchFalse     @73            stack[ 1]: false
[20210409144645] 4004  TRACE  : (29)         switch.ego  73: Push            2              stack[ 0]: <empty>
[20210409144645] 4005  TRACE  : (29)         switch.ego  74: Load            "$90"          stack[ 1]: 2
[20210409144645] 4006  TRACE  : (29)         switch.ego  75: Equal                          stack[ 2]: 6, 2
[20210409144645] 4007  TRACE  : (29)         switch.ego  76: BranchFalse     @82            stack[ 1]: false
[20210409144645] 4008  TRACE  : (29)         switch.ego  82: Push            5              stack[ 0]: <empty>
[20210409144645] 4009  TRACE  : (29)         switch.ego  83: Load            "$90"          stack[ 1]: 5
[20210409144645] 4010  TRACE  : (29)         switch.ego  84: Equal                          stack[ 2]: 6, 5
[20210409144645] 4011  TRACE  : (29)         switch.ego  85: BranchFalse     @91            stack[ 1]: false
[20210409144645] 4012  TRACE  : (29)         switch.ego  91: SymbolDelete    "$90"          stack[ 0]: <empty>
[20210409144645] 4013  TRACE  : (29)         switch.ego  92: AtLine          34             stack[ 0]: <empty>
[20210409144645] 4014  TRACE  : (29)         switch.ego  93: Load            "x"            stack[ 0]: <empty>
[20210409144645] 4015  TRACE  : (29)         switch.ego  94: SymbolCreate    "$91"          stack[ 1]: 6
[20210409144645] 4016  TRACE  : (29)         switch.ego  95: Store           "$91"          stack[ 1]: 6
[20210409144645] 4017  TRACE  : (29)         switch.ego  96: Push            1              stack[ 0]: <empty>
[20210409144645] 4018  TRACE  : (29)         switch.ego  97: Load            "$91"          stack[ 1]: 1
[20210409144645] 4019  TRACE  : (29)         switch.ego  98: Equal                          stack[ 2]: 6, 1
[20210409144645] 4020  TRACE  : (29)         switch.ego  99: BranchFalse     @105           stack[ 1]: false
[20210409144645] 4021  TRACE  : (29)         switch.ego 105: Push            2              stack[ 0]: <empty>
[20210409144645] 4022  TRACE  : (29)         switch.ego 106: Load            "$91"          stack[ 1]: 2
[20210409144645] 4023  TRACE  : (29)         switch.ego 107: Equal                          stack[ 2]: 6, 2
[20210409144645] 4024  TRACE  : (29)         switch.ego 108: BranchFalse     @114           stack[ 1]: false
[20210409144645] 4025  TRACE  : (29)         switch.ego 114: Push            5              stack[ 0]: <empty>
[20210409144645] 4026  TRACE  : (29)         switch.ego 115: Load            "$91"          stack[ 1]: 5
[20210409144645] 4027  TRACE  : (29)         switch.ego 116: Equal                          stack[ 2]: 6, 5
[20210409144645] 4028  TRACE  : (29)         switch.ego 117: BranchFalse     @123           stack[ 1]: false
[20210409144645] 4029  TRACE  : (29)         switch.ego 123: SymbolDelete    "$91"          stack[ 0]: <empty>
[20210409144645] 4030  TRACE  : (29)         switch.ego 124: PopScope                       stack[ 0]: <empty>
[20210409144645] 4031  TRACE  : (29)         switch.ego 125: AtLine          43             stack[ 0]: <empty>
[20210409144645] 4032  TRACE  : (29)         switch.ego 126: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4033  TRACE  : (29)         switch.ego 127: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 4034  TRACE  : (29)         switch.ego 128: Print                          stack[ 1]: (PASS)  
[20210409144645] 4035  TRACE  : (29)         switch.ego 129: Timer           1              stack[ 0]: <empty>
[20210409144645] 4036  TRACE  : (29)         switch.ego 130: Print                          stack[ 1]: 0.418ms
[20210409144645] 4037  TRACE  : (29)         switch.ego 131: Say             true           stack[ 0]: <empty>
TEST: flow: switch statement                            (PASS)  0.418ms
[20210409144645] 4038  TRACE  : (29)         switch.ego 132: Stop                           stack[ 0]: <empty>
[20210409144645] 4039  TRACE  : *** Tracing func_arg_return.ego (30)  
[20210409144645] 4040  TRACE  : (30) func_arg_return.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 4041  TRACE  : (30) func_arg_return.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4042  TRACE  : (30) func_arg_return.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 4043  TRACE  : (30) func_arg_return.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4044  TRACE  : (30) func_arg_return.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4045  TRACE  : (30) func_arg_return.ego   5: Push            Testing{ description: "types: complex function parm and arg types" } stack[ 0]: <empty>
[20210409144645] 4046  TRACE  : (30) func_arg_return.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: complex function par...
[20210409144645] 4047  TRACE  : (30) func_arg_return.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 4048  TRACE  : (30) func_arg_return.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 4049  TRACE  : (30) func_arg_return.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 4050  TRACE  : (30) func_arg_return.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: complex function par...
[20210409144645] 4051  TRACE  : (30) func_arg_return.ego  11: Print                          stack[ 1]: types: complex function parm and arg types
[20210409144645] 4052  TRACE  : (30) func_arg_return.ego  12: Push            "        "     stack[ 0]: <empty>
[20210409144645] 4053  TRACE  : (30) func_arg_return.ego  13: Print                          stack[ 1]:         
[20210409144645] 4054  TRACE  : (30) func_arg_return.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 4055  TRACE  : (30) func_arg_return.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 4056  TRACE  : (30) func_arg_return.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 4057  TRACE  : (30) func_arg_return.ego  17: Push            x()            stack[ 0]: <empty>
[20210409144645] 4058  TRACE  : (30) func_arg_return.ego  18: StoreAlways     "x"            stack[ 1]: x()
[20210409144645] 4059  TRACE  : (30) func_arg_return.ego  19: Push            y()            stack[ 0]: <empty>
[20210409144645] 4060  TRACE  : (30) func_arg_return.ego  20: StoreAlways     "y"            stack[ 1]: y()
[20210409144645] 4061  TRACE  : (30) func_arg_return.ego  21: AtLine          24             stack[ 0]: <empty>
[20210409144645] 4062  TRACE  : (30) func_arg_return.ego  22: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4063  TRACE  : (30) func_arg_return.ego  23: Load            "x"            stack[ 1]: M<let>
[20210409144645] 4064  TRACE  : (30) func_arg_return.ego  24: Call            0              stack[ 2]: x(), M<let>
[20210409144645] 4065  TRACE  : (30)                  x   0: ArgCheck        [0 0 x]        stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4066  TRACE  : (30)                  x   1: AtLine          5              stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4067  TRACE  : (30)                  x   2: PushScope                      stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4068  TRACE  : (30)                  x   3: AtLine          7              stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4069  TRACE  : (30)                  x   4: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4070  TRACE  : (30)                  x   5: Load            "new"          stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4071  TRACE  : (30)                  x   6: Push            T(map[string]*int) stack[ 4]: functions.New(), M<let>, F<func_arg_return.ego:24>...
[20210409144645] 4072  TRACE  : (30)                  x   7: Call            1              stack[ 5]: T(map[string]*int), functions.New(), M<let>, F<fun...
[20210409144645] 4073  TRACE  : (30)                  x   8: SymbolCreate    "a"            stack[ 4]: [], M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4074  TRACE  : (30)                  x   9: Store           "a"            stack[ 4]: [], M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4075  TRACE  : (30)                  x  10: DropToMarker    M<let>         stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4076  TRACE  : (30)                  x  11: AtLine          9              stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4077  TRACE  : (30)                  x  12: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4078  TRACE  : (30)                  x  13: Push            55             stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4079  TRACE  : (30)                  x  14: SymbolCreate    "tomAge"       stack[ 4]: 55, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4080  TRACE  : (30)                  x  15: Store           "tomAge"       stack[ 4]: 55, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4081  TRACE  : (30)                  x  16: DropToMarker    M<let>         stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4082  TRACE  : (30)                  x  17: AtLine          10             stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4083  TRACE  : (30)                  x  18: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4084  TRACE  : (30)                  x  19: Push            44             stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4085  TRACE  : (30)                  x  20: SymbolCreate    "maryAge"      stack[ 4]: 44, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4086  TRACE  : (30)                  x  21: Store           "maryAge"      stack[ 4]: 44, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4087  TRACE  : (30)                  x  22: DropToMarker    M<let>         stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4088  TRACE  : (30)                  x  23: AtLine          12             stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4089  TRACE  : (30)                  x  24: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4090  TRACE  : (30)                  x  25: AddressOf       "tomAge"       stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4091  TRACE  : (30)                  x  26: Load            "a"            stack[ 4]: &55, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4092  TRACE  : (30)                  x  27: Push            "tom"          stack[ 5]: [], &55, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4093  TRACE  : (30)                  x  28: StoreIndex                     stack[ 6]: tom, [], &55, M<let>, F<func_arg_return.ego:24>, M...
[20210409144645] 4094  TRACE  : (30)                  x  29: DropToMarker    M<let>         stack[ 4]: ["tom": &55], M<let>, F<func_arg_return.ego:24>, M...
[20210409144645] 4095  TRACE  : (30)                  x  30: AtLine          13             stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4096  TRACE  : (30)                  x  31: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4097  TRACE  : (30)                  x  32: AddressOf       "maryAge"      stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4098  TRACE  : (30)                  x  33: Load            "a"            stack[ 4]: &44, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4099  TRACE  : (30)                  x  34: Push            "mary"         stack[ 5]: ["tom": &55], &44, M<let>, F<func_arg_return.ego:2...
[20210409144645] 4100  TRACE  : (30)                  x  35: StoreIndex                     stack[ 6]: mary, ["tom": &55], &44, M<let>, F<func_arg_return...
[20210409144645] 4101  TRACE  : (30)                  x  36: DropToMarker    M<let>         stack[ 4]: ["mary": &44, "tom": &55], M<let>, F<func_arg_retu...
[20210409144645] 4102  TRACE  : (30)                  x  37: AtLine          15             stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4103  TRACE  : (30)                  x  38: Push            M<let>         stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4104  TRACE  : (30)                  x  39: Push            61             stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4105  TRACE  : (30)                  x  40: Store           "tomAge"       stack[ 4]: 61, M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4106  TRACE  : (30)                  x  41: DropToMarker    M<let>         stack[ 3]: M<let>, F<func_arg_return.ego:24>, M<let>
[20210409144645] 4107  TRACE  : (30)                  x  42: AtLine          17             stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4108  TRACE  : (30)                  x  43: Load            "a"            stack[ 2]: F<func_arg_return.ego:24>, M<let>
[20210409144645] 4109  TRACE  : (30)                  x  44: Coerce          T(map[string]*int) stack[ 3]: ["mary": &44, "tom": &61], F<func_arg_return.ego:2...
[20210409144645] 4110  TRACE  : (30)                  x  45: Return          true           stack[ 3]: ["mary": &44, "tom": &61], F<func_arg_return.ego:2...
[20210409144645] 4111  TRACE  : (30) func_arg_return.ego  25: SymbolCreate    "m"            stack[ 2]: ["mary": &44, "tom": &61], M<let>
[20210409144645] 4112  TRACE  : (30) func_arg_return.ego  26: Store           "m"            stack[ 2]: ["mary": &44, "tom": &61], M<let>
[20210409144645] 4113  TRACE  : (30) func_arg_return.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4114  TRACE  : (30) func_arg_return.ego  28: AtLine          26             stack[ 0]: <empty>
[20210409144645] 4115  TRACE  : (30) func_arg_return.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4116  TRACE  : (30) func_arg_return.ego  30: Load            "m"            stack[ 1]: M<let>
[20210409144645] 4117  TRACE  : (30) func_arg_return.ego  31: Push            "tom"          stack[ 2]: ["mary": &44, "tom": &61], M<let>
[20210409144645] 4118  TRACE  : (30) func_arg_return.ego  32: LoadIndex                      stack[ 3]: tom, ["mary": &44, "tom": &61], M<let>
[20210409144645] 4119  TRACE  : (30) func_arg_return.ego  33: SymbolCreate    "p"            stack[ 2]: &61, M<let>
[20210409144645] 4120  TRACE  : (30) func_arg_return.ego  34: Store           "p"            stack[ 2]: &61, M<let>
[20210409144645] 4121  TRACE  : (30) func_arg_return.ego  35: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4122  TRACE  : (30) func_arg_return.ego  36: AtLine          27             stack[ 0]: <empty>
[20210409144645] 4123  TRACE  : (30) func_arg_return.ego  37: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4124  TRACE  : (30) func_arg_return.ego  38: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4125  TRACE  : (30) func_arg_return.ego  39: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4126  TRACE  : (30) func_arg_return.ego  40: Member          "assert"       stack[ 2]: Testing{ description: "types: complex function par...
[20210409144645] 4127  TRACE  : (30) func_arg_return.ego  41: DeRef           "p"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4128  TRACE  : (30) func_arg_return.ego  42: Push            61             stack[ 3]: 61, compiler.TestAssert(), M<assert>
[20210409144645] 4129  TRACE  : (30) func_arg_return.ego  43: Equal                          stack[ 4]: 61, 61, compiler.TestAssert(), M<assert>
[20210409144645] 4130  TRACE  : (30) func_arg_return.ego  44: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4131  TRACE  : (30) func_arg_return.ego  45: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4132  TRACE  : (30) func_arg_return.ego  46: AtLine          29             stack[ 0]: <empty>
[20210409144645] 4133  TRACE  : (30) func_arg_return.ego  47: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4134  TRACE  : (30) func_arg_return.ego  48: Push            "cole"         stack[ 1]: M<let>
[20210409144645] 4135  TRACE  : (30) func_arg_return.ego  49: Coerce          T(string)      stack[ 2]: cole, M<let>
[20210409144645] 4136  TRACE  : (30) func_arg_return.ego  50: Push            "tom"          stack[ 2]: cole, M<let>
[20210409144645] 4137  TRACE  : (30) func_arg_return.ego  51: Coerce          T(string)      stack[ 3]: tom, cole, M<let>
[20210409144645] 4138  TRACE  : (30) func_arg_return.ego  52: Push            30             stack[ 3]: tom, cole, M<let>
[20210409144645] 4139  TRACE  : (30) func_arg_return.ego  53: Push            T(int)         stack[ 4]: 30, tom, cole, M<let>
[20210409144645] 4140  TRACE  : (30) func_arg_return.ego  54: Push            T(string)      stack[ 5]: T(int), 30, tom, cole, M<let>
[20210409144645] 4141  TRACE  : (30) func_arg_return.ego  55: MakeMap         1              stack[ 6]: T(string), T(int), 30, tom, cole, M<let>
[20210409144645] 4142  TRACE  : (30) func_arg_return.ego  56: Push            T(map[string]int) stack[ 3]: ["tom": 30], cole, M<let>
[20210409144645] 4143  TRACE  : (30) func_arg_return.ego  57: Push            T(string)      stack[ 4]: T(map[string]int), ["tom": 30], cole, M<let>
[20210409144645] 4144  TRACE  : (30) func_arg_return.ego  58: MakeMap         1              stack[ 5]: T(string), T(map[string]int), ["tom": 30], cole, M...
[20210409144645] 4145  TRACE  : (30) func_arg_return.ego  59: SymbolCreate    "xm"           stack[ 2]: ["cole": ["tom": 30]], M<let>
[20210409144645] 4146  TRACE  : (30) func_arg_return.ego  60: Store           "xm"           stack[ 2]: ["cole": ["tom": 30]], M<let>
[20210409144645] 4147  TRACE  : (30) func_arg_return.ego  61: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4148  TRACE  : (30) func_arg_return.ego  62: AtLine          34             stack[ 0]: <empty>
[20210409144645] 4149  TRACE  : (30) func_arg_return.ego  63: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4150  TRACE  : (30) func_arg_return.ego  64: Load            "y"            stack[ 1]: M<let>
[20210409144645] 4151  TRACE  : (30) func_arg_return.ego  65: Load            "xm"           stack[ 2]: y(), M<let>
[20210409144645] 4152  TRACE  : (30) func_arg_return.ego  66: Call            1              stack[ 3]: ["cole": ["tom": 30]], y(), M<let>
[20210409144645] 4153  TRACE  : (30)                  y   0: ArgCheck        [1 1 y]        stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4154  TRACE  : (30)                  y   1: Load            "__args"       stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4155  TRACE  : (30)                  y   2: LoadIndex       0              stack[ 3]: [["cole": ["tom": 30]]], F<func_arg_return.ego:34>...
[20210409144645] 4156  TRACE  : (30)                  y   3: RequiredType    T(map[string]map[string]int) stack[ 3]: ["cole": ["tom": 30]], F<func_arg_return.ego:34>, ...
[20210409144645] 4157  TRACE  : (30)                  y   4: StoreAlways     "m"            stack[ 3]: ["cole": ["tom": 30]], F<func_arg_return.ego:34>, ...
[20210409144645] 4158  TRACE  : (30)                  y   5: AtLine          20             stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4159  TRACE  : (30)                  y   6: PushScope                      stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4160  TRACE  : (30)                  y   7: AtLine          21             stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4161  TRACE  : (30)                  y   8: Load            "m"            stack[ 2]: F<func_arg_return.ego:34>, M<let>
[20210409144645] 4162  TRACE  : (30)                  y   9: Push            "cole"         stack[ 3]: ["cole": ["tom": 30]], F<func_arg_return.ego:34>, ...
[20210409144645] 4163  TRACE  : (30)                  y  10: LoadIndex                      stack[ 4]: cole, ["cole": ["tom": 30]], F<func_arg_return.ego...
[20210409144645] 4164  TRACE  : (30)                  y  11: Push            "tom"          stack[ 3]: ["tom": 30], F<func_arg_return.ego:34>, M<let>
[20210409144645] 4165  TRACE  : (30)                  y  12: LoadIndex                      stack[ 4]: tom, ["tom": 30], F<func_arg_return.ego:34>, M<let...
[20210409144645] 4166  TRACE  : (30)                  y  13: Push            2              stack[ 3]: 30, F<func_arg_return.ego:34>, M<let>
[20210409144645] 4167  TRACE  : (30)                  y  14: Unknown 38                     stack[ 4]: 2, 30, F<func_arg_return.ego:34>, M<let>
[20210409144645] 4168  TRACE  : (30)                  y  15: Coerce          T(int)         stack[ 3]: 60, F<func_arg_return.ego:34>, M<let>
[20210409144645] 4169  TRACE  : (30)                  y  16: Return          true           stack[ 3]: 60, F<func_arg_return.ego:34>, M<let>
[20210409144645] 4170  TRACE  : (30) func_arg_return.ego  67: SymbolCreate    "z"            stack[ 2]: 60, M<let>
[20210409144645] 4171  TRACE  : (30) func_arg_return.ego  68: Store           "z"            stack[ 2]: 60, M<let>
[20210409144645] 4172  TRACE  : (30) func_arg_return.ego  69: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4173  TRACE  : (30) func_arg_return.ego  70: AtLine          35             stack[ 0]: <empty>
[20210409144645] 4174  TRACE  : (30) func_arg_return.ego  71: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4175  TRACE  : (30) func_arg_return.ego  72: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4176  TRACE  : (30) func_arg_return.ego  73: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4177  TRACE  : (30) func_arg_return.ego  74: Member          "assert"       stack[ 2]: Testing{ description: "types: complex function par...
[20210409144645] 4178  TRACE  : (30) func_arg_return.ego  75: Load            "z"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4179  TRACE  : (30) func_arg_return.ego  76: Push            60             stack[ 3]: 60, compiler.TestAssert(), M<assert>
[20210409144645] 4180  TRACE  : (30) func_arg_return.ego  77: Equal                          stack[ 4]: 60, 60, compiler.TestAssert(), M<assert>
[20210409144645] 4181  TRACE  : (30) func_arg_return.ego  78: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4182  TRACE  : (30) func_arg_return.ego  79: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4183  TRACE  : (30) func_arg_return.ego  80: PopScope                       stack[ 0]: <empty>
[20210409144645] 4184  TRACE  : (30) func_arg_return.ego  81: AtLine          39             stack[ 0]: <empty>
[20210409144645] 4185  TRACE  : (30) func_arg_return.ego  82: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4186  TRACE  : (30) func_arg_return.ego  83: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 4187  TRACE  : (30) func_arg_return.ego  84: Print                          stack[ 1]: (PASS)  
[20210409144645] 4188  TRACE  : (30) func_arg_return.ego  85: Timer           1              stack[ 0]: <empty>
[20210409144645] 4189  TRACE  : (30) func_arg_return.ego  86: Print                          stack[ 1]: 0.001s
[20210409144645] 4190  TRACE  : (30) func_arg_return.ego  87: Say             true           stack[ 0]: <empty>
TEST: types: complex function parm and arg types        (PASS)  0.001s
[20210409144645] 4191  TRACE  : (30) func_arg_return.ego  88: Stop                           stack[ 0]: <empty>
[20210409144645] 4192  TRACE  : *** Tracing camel.ego (31)  
[20210409144645] 4193  TRACE  : (31)          camel.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 4194  TRACE  : (31)          camel.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4195  TRACE  : (31)          camel.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 4196  TRACE  : (31)          camel.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4197  TRACE  : (31)          camel.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4198  TRACE  : (31)          camel.ego   5: Push            Testing{ description: "functions: strings.Camel()" } stack[ 0]: <empty>
[20210409144645] 4199  TRACE  : (31)          camel.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4200  TRACE  : (31)          camel.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 4201  TRACE  : (31)          camel.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 4202  TRACE  : (31)          camel.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 4203  TRACE  : (31)          camel.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4204  TRACE  : (31)          camel.ego  11: Print                          stack[ 1]: functions: strings.Camel()
[20210409144645] 4205  TRACE  : (31)          camel.ego  12: Push            "                        " stack[ 0]: <empty>
[20210409144645] 4206  TRACE  : (31)          camel.ego  13: Print                          stack[ 1]:                         
[20210409144645] 4207  TRACE  : (31)          camel.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 4208  TRACE  : (31)          camel.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 4209  TRACE  : (31)          camel.ego  16: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4210  TRACE  : (31)          camel.ego  17: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4211  TRACE  : (31)          camel.ego  18: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4212  TRACE  : (31)          camel.ego  19: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4213  TRACE  : (31)          camel.ego  20: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4214  TRACE  : (31)          camel.ego  21: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4215  TRACE  : (31)          camel.ego  22: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4216  TRACE  : (31)          camel.ego  23: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4217  TRACE  : (31)          camel.ego  24: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4218  TRACE  : (31)          camel.ego  25: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4219  TRACE  : (31)          camel.ego  26: Push            "test"         stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4220  TRACE  : (31)          camel.ego  27: Call            1              stack[ 5]: test, Camel(), compiler.TestEqual(), compiler.Test...
[20210409144645] 4221  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4222  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4223  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4224  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: ["test"], F<camel.ego:4>, compiler.TestEqual(), co...
[20210409144645] 4225  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: test, F<camel.ego:4>, compiler.TestEqual(), compil...
[20210409144645] 4226  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: test, F<camel.ego:4>, compiler.TestEqual(), compil...
[20210409144645] 4227  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4228  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4229  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4230  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4231  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:4>, compiler.TestEqu...
[20210409144645] 4232  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4233  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: test, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4234  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 4, functions.Bool(), F<camel.ego:4>, compiler.Test...
[20210409144645] 4235  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 4, functions.Bool(), F<camel.ego:4>, compiler.T...
[20210409144645] 4236  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:4>, compiler....
[20210409144645] 4237  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: false, F<camel.ego:4>, compiler.TestEqual(), compi...
[20210409144645] 4238  TRACE  : (31)              Camel  23: AtLine          7              stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4239  TRACE  : (31)              Camel  24: Load            "bool"         stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4240  TRACE  : (31)              Camel  25: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:4>, compiler.TestEqu...
[20210409144645] 4241  TRACE  : (31)              Camel  26: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4242  TRACE  : (31)              Camel  27: Call            1              stack[ 7]: test, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4243  TRACE  : (31)              Camel  28: Push            1              stack[ 6]: 4, functions.Bool(), F<camel.ego:4>, compiler.Test...
[20210409144645] 4244  TRACE  : (31)              Camel  29: Equal                          stack[ 7]: 1, 4, functions.Bool(), F<camel.ego:4>, compiler.T...
[20210409144645] 4245  TRACE  : (31)              Camel  30: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:4>, compiler....
[20210409144645] 4246  TRACE  : (31)              Camel  31: BranchFalse     @43            stack[ 5]: false, F<camel.ego:4>, compiler.TestEqual(), compi...
[20210409144645] 4247  TRACE  : (31)              Camel  43: AtLine          11             stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4248  TRACE  : (31)              Camel  44: Push            M<let>         stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4249  TRACE  : (31)              Camel  45: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:4>, compiler.TestEqual(), comp...
[20210409144645] 4250  TRACE  : (31)              Camel  46: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4251  TRACE  : (31)              Camel  47: Member          "ToUpper"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4252  TRACE  : (31)              Camel  48: Load            "strings"      stack[ 6]: functions.Upper(), M<let>, F<camel.ego:4>, compile...
[20210409144645] 4253  TRACE  : (31)              Camel  49: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4254  TRACE  : (31)              Camel  50: Member          "Left"         stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4255  TRACE  : (31)              Camel  51: Load            "s"            stack[ 7]: functions.Left(), functions.Upper(), M<let>, F<cam...
[20210409144645] 4256  TRACE  : (31)              Camel  52: Push            1              stack[ 8]: test, functions.Left(), functions.Upper(), M<let>,...
[20210409144645] 4257  TRACE  : (31)              Camel  53: Call            2              stack[ 9]: 1, test, functions.Left(), functions.Upper(), M<le...
[20210409144645] 4258  TRACE  : (31)              Camel  54: Call            1              stack[ 7]: t, functions.Upper(), M<let>, F<camel.ego:4>, comp...
[20210409144645] 4259  TRACE  : (31)              Camel  55: SymbolCreate    "left"         stack[ 6]: T, M<let>, F<camel.ego:4>, compiler.TestEqual(), c...
[20210409144645] 4260  TRACE  : (31)              Camel  56: Store           "left"         stack[ 6]: T, M<let>, F<camel.ego:4>, compiler.TestEqual(), c...
[20210409144645] 4261  TRACE  : (31)              Camel  57: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:4>, compiler.TestEqual(), comp...
[20210409144645] 4262  TRACE  : (31)              Camel  58: AtLine          12             stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4263  TRACE  : (31)              Camel  59: Push            M<let>         stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4264  TRACE  : (31)              Camel  60: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:4>, compiler.TestEqual(), comp...
[20210409144645] 4265  TRACE  : (31)              Camel  61: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4266  TRACE  : (31)              Camel  62: Member          "ToLower"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4267  TRACE  : (31)              Camel  63: Load            "strings"      stack[ 6]: functions.Lower(), M<let>, F<camel.ego:4>, compile...
[20210409144645] 4268  TRACE  : (31)              Camel  64: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4269  TRACE  : (31)              Camel  65: Member          "Right"        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4270  TRACE  : (31)              Camel  66: Load            "s"            stack[ 7]: functions.Right(), functions.Lower(), M<let>, F<ca...
[20210409144645] 4271  TRACE  : (31)              Camel  67: Load            "len"          stack[ 8]: test, functions.Right(), functions.Lower(), M<let>...
[20210409144645] 4272  TRACE  : (31)              Camel  68: Load            "s"            stack[ 9]: functions.Length(), test, functions.Right(), funct...
[20210409144645] 4273  TRACE  : (31)              Camel  69: Call            1              stack[10]: test, functions.Length(), test, functions.Right(),...
[20210409144645] 4274  TRACE  : (31)              Camel  70: Push            1              stack[ 9]: 4, test, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4275  TRACE  : (31)              Camel  71: Sub                            stack[10]: 1, 4, test, functions.Right(), functions.Lower(), ...
[20210409144645] 4276  TRACE  : (31)              Camel  72: Call            2              stack[ 9]: 3, test, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4277  TRACE  : (31)              Camel  73: Call            1              stack[ 7]: est, functions.Lower(), M<let>, F<camel.ego:4>, co...
[20210409144645] 4278  TRACE  : (31)              Camel  74: SymbolCreate    "right"        stack[ 6]: est, M<let>, F<camel.ego:4>, compiler.TestEqual(),...
[20210409144645] 4279  TRACE  : (31)              Camel  75: Store           "right"        stack[ 6]: est, M<let>, F<camel.ego:4>, compiler.TestEqual(),...
[20210409144645] 4280  TRACE  : (31)              Camel  76: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:4>, compiler.TestEqual(), comp...
[20210409144645] 4281  TRACE  : (31)              Camel  77: AtLine          14             stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4282  TRACE  : (31)              Camel  78: Load            "left"         stack[ 4]: F<camel.ego:4>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4283  TRACE  : (31)              Camel  79: Load            "right"        stack[ 5]: T, F<camel.ego:4>, compiler.TestEqual(), compiler....
[20210409144645] 4284  TRACE  : (31)              Camel  80: Add                            stack[ 6]: est, T, F<camel.ego:4>, compiler.TestEqual(), comp...
[20210409144645] 4285  TRACE  : (31)              Camel  81: Coerce          T(string)      stack[ 5]: Test, F<camel.ego:4>, compiler.TestEqual(), compil...
[20210409144645] 4286  TRACE  : (31)              Camel  82: Return          true           stack[ 5]: Test, F<camel.ego:4>, compiler.TestEqual(), compil...
[20210409144645] 4287  TRACE  : (31)          camel.ego  28: Push            "Test"         stack[ 4]: Test, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 4288  TRACE  : (31)          camel.ego  29: Call            2              stack[ 5]: Test, Test, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 4289  TRACE  : (31)          camel.ego  30: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4290  TRACE  : (31)          camel.ego  31: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4291  TRACE  : (31)          camel.ego  32: AtLine          5              stack[ 0]: <empty>
[20210409144645] 4292  TRACE  : (31)          camel.ego  33: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4293  TRACE  : (31)          camel.ego  34: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4294  TRACE  : (31)          camel.ego  35: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4295  TRACE  : (31)          camel.ego  36: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4296  TRACE  : (31)          camel.ego  37: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4297  TRACE  : (31)          camel.ego  38: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4298  TRACE  : (31)          camel.ego  39: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4299  TRACE  : (31)          camel.ego  40: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4300  TRACE  : (31)          camel.ego  41: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4301  TRACE  : (31)          camel.ego  42: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4302  TRACE  : (31)          camel.ego  43: Push            "teST"         stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4303  TRACE  : (31)          camel.ego  44: Call            1              stack[ 5]: teST, Camel(), compiler.TestEqual(), compiler.Test...
[20210409144645] 4304  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4305  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4306  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4307  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: ["teST"], F<camel.ego:5>, compiler.TestEqual(), co...
[20210409144645] 4308  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: teST, F<camel.ego:5>, compiler.TestEqual(), compil...
[20210409144645] 4309  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: teST, F<camel.ego:5>, compiler.TestEqual(), compil...
[20210409144645] 4310  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4311  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4312  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4313  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4314  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:5>, compiler.TestEqu...
[20210409144645] 4315  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4316  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: teST, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4317  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 4, functions.Bool(), F<camel.ego:5>, compiler.Test...
[20210409144645] 4318  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 4, functions.Bool(), F<camel.ego:5>, compiler.T...
[20210409144645] 4319  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:5>, compiler....
[20210409144645] 4320  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: false, F<camel.ego:5>, compiler.TestEqual(), compi...
[20210409144645] 4321  TRACE  : (31)              Camel  23: AtLine          7              stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4322  TRACE  : (31)              Camel  24: Load            "bool"         stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4323  TRACE  : (31)              Camel  25: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:5>, compiler.TestEqu...
[20210409144645] 4324  TRACE  : (31)              Camel  26: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4325  TRACE  : (31)              Camel  27: Call            1              stack[ 7]: teST, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4326  TRACE  : (31)              Camel  28: Push            1              stack[ 6]: 4, functions.Bool(), F<camel.ego:5>, compiler.Test...
[20210409144645] 4327  TRACE  : (31)              Camel  29: Equal                          stack[ 7]: 1, 4, functions.Bool(), F<camel.ego:5>, compiler.T...
[20210409144645] 4328  TRACE  : (31)              Camel  30: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:5>, compiler....
[20210409144645] 4329  TRACE  : (31)              Camel  31: BranchFalse     @43            stack[ 5]: false, F<camel.ego:5>, compiler.TestEqual(), compi...
[20210409144645] 4330  TRACE  : (31)              Camel  43: AtLine          11             stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4331  TRACE  : (31)              Camel  44: Push            M<let>         stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4332  TRACE  : (31)              Camel  45: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:5>, compiler.TestEqual(), comp...
[20210409144645] 4333  TRACE  : (31)              Camel  46: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4334  TRACE  : (31)              Camel  47: Member          "ToUpper"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4335  TRACE  : (31)              Camel  48: Load            "strings"      stack[ 6]: functions.Upper(), M<let>, F<camel.ego:5>, compile...
[20210409144645] 4336  TRACE  : (31)              Camel  49: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4337  TRACE  : (31)              Camel  50: Member          "Left"         stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4338  TRACE  : (31)              Camel  51: Load            "s"            stack[ 7]: functions.Left(), functions.Upper(), M<let>, F<cam...
[20210409144645] 4339  TRACE  : (31)              Camel  52: Push            1              stack[ 8]: teST, functions.Left(), functions.Upper(), M<let>,...
[20210409144645] 4340  TRACE  : (31)              Camel  53: Call            2              stack[ 9]: 1, teST, functions.Left(), functions.Upper(), M<le...
[20210409144645] 4341  TRACE  : (31)              Camel  54: Call            1              stack[ 7]: t, functions.Upper(), M<let>, F<camel.ego:5>, comp...
[20210409144645] 4342  TRACE  : (31)              Camel  55: SymbolCreate    "left"         stack[ 6]: T, M<let>, F<camel.ego:5>, compiler.TestEqual(), c...
[20210409144645] 4343  TRACE  : (31)              Camel  56: Store           "left"         stack[ 6]: T, M<let>, F<camel.ego:5>, compiler.TestEqual(), c...
[20210409144645] 4344  TRACE  : (31)              Camel  57: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:5>, compiler.TestEqual(), comp...
[20210409144645] 4345  TRACE  : (31)              Camel  58: AtLine          12             stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4346  TRACE  : (31)              Camel  59: Push            M<let>         stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4347  TRACE  : (31)              Camel  60: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:5>, compiler.TestEqual(), comp...
[20210409144645] 4348  TRACE  : (31)              Camel  61: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4349  TRACE  : (31)              Camel  62: Member          "ToLower"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4350  TRACE  : (31)              Camel  63: Load            "strings"      stack[ 6]: functions.Lower(), M<let>, F<camel.ego:5>, compile...
[20210409144645] 4351  TRACE  : (31)              Camel  64: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4352  TRACE  : (31)              Camel  65: Member          "Right"        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4353  TRACE  : (31)              Camel  66: Load            "s"            stack[ 7]: functions.Right(), functions.Lower(), M<let>, F<ca...
[20210409144645] 4354  TRACE  : (31)              Camel  67: Load            "len"          stack[ 8]: teST, functions.Right(), functions.Lower(), M<let>...
[20210409144645] 4355  TRACE  : (31)              Camel  68: Load            "s"            stack[ 9]: functions.Length(), teST, functions.Right(), funct...
[20210409144645] 4356  TRACE  : (31)              Camel  69: Call            1              stack[10]: teST, functions.Length(), teST, functions.Right(),...
[20210409144645] 4357  TRACE  : (31)              Camel  70: Push            1              stack[ 9]: 4, teST, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4358  TRACE  : (31)              Camel  71: Sub                            stack[10]: 1, 4, teST, functions.Right(), functions.Lower(), ...
[20210409144645] 4359  TRACE  : (31)              Camel  72: Call            2              stack[ 9]: 3, teST, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4360  TRACE  : (31)              Camel  73: Call            1              stack[ 7]: eST, functions.Lower(), M<let>, F<camel.ego:5>, co...
[20210409144645] 4361  TRACE  : (31)              Camel  74: SymbolCreate    "right"        stack[ 6]: est, M<let>, F<camel.ego:5>, compiler.TestEqual(),...
[20210409144645] 4362  TRACE  : (31)              Camel  75: Store           "right"        stack[ 6]: est, M<let>, F<camel.ego:5>, compiler.TestEqual(),...
[20210409144645] 4363  TRACE  : (31)              Camel  76: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:5>, compiler.TestEqual(), comp...
[20210409144645] 4364  TRACE  : (31)              Camel  77: AtLine          14             stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4365  TRACE  : (31)              Camel  78: Load            "left"         stack[ 4]: F<camel.ego:5>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4366  TRACE  : (31)              Camel  79: Load            "right"        stack[ 5]: T, F<camel.ego:5>, compiler.TestEqual(), compiler....
[20210409144645] 4367  TRACE  : (31)              Camel  80: Add                            stack[ 6]: est, T, F<camel.ego:5>, compiler.TestEqual(), comp...
[20210409144645] 4368  TRACE  : (31)              Camel  81: Coerce          T(string)      stack[ 5]: Test, F<camel.ego:5>, compiler.TestEqual(), compil...
[20210409144645] 4369  TRACE  : (31)              Camel  82: Return          true           stack[ 5]: Test, F<camel.ego:5>, compiler.TestEqual(), compil...
[20210409144645] 4370  TRACE  : (31)          camel.ego  45: Push            "Test"         stack[ 4]: Test, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 4371  TRACE  : (31)          camel.ego  46: Call            2              stack[ 5]: Test, Test, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 4372  TRACE  : (31)          camel.ego  47: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4373  TRACE  : (31)          camel.ego  48: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4374  TRACE  : (31)          camel.ego  49: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4375  TRACE  : (31)          camel.ego  50: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4376  TRACE  : (31)          camel.ego  51: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4377  TRACE  : (31)          camel.ego  52: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4378  TRACE  : (31)          camel.ego  53: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4379  TRACE  : (31)          camel.ego  54: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4380  TRACE  : (31)          camel.ego  55: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4381  TRACE  : (31)          camel.ego  56: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4382  TRACE  : (31)          camel.ego  57: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4383  TRACE  : (31)          camel.ego  58: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4384  TRACE  : (31)          camel.ego  59: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4385  TRACE  : (31)          camel.ego  60: Push            "TEST"         stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4386  TRACE  : (31)          camel.ego  61: Call            1              stack[ 5]: TEST, Camel(), compiler.TestEqual(), compiler.Test...
[20210409144645] 4387  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4388  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4389  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4390  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: ["TEST"], F<camel.ego:6>, compiler.TestEqual(), co...
[20210409144645] 4391  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: TEST, F<camel.ego:6>, compiler.TestEqual(), compil...
[20210409144645] 4392  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: TEST, F<camel.ego:6>, compiler.TestEqual(), compil...
[20210409144645] 4393  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4394  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4395  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4396  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4397  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:6>, compiler.TestEqu...
[20210409144645] 4398  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4399  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: TEST, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4400  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 4, functions.Bool(), F<camel.ego:6>, compiler.Test...
[20210409144645] 4401  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 4, functions.Bool(), F<camel.ego:6>, compiler.T...
[20210409144645] 4402  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:6>, compiler....
[20210409144645] 4403  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: false, F<camel.ego:6>, compiler.TestEqual(), compi...
[20210409144645] 4404  TRACE  : (31)              Camel  23: AtLine          7              stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4405  TRACE  : (31)              Camel  24: Load            "bool"         stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4406  TRACE  : (31)              Camel  25: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:6>, compiler.TestEqu...
[20210409144645] 4407  TRACE  : (31)              Camel  26: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4408  TRACE  : (31)              Camel  27: Call            1              stack[ 7]: TEST, functions.Length(), functions.Bool(), F<came...
[20210409144645] 4409  TRACE  : (31)              Camel  28: Push            1              stack[ 6]: 4, functions.Bool(), F<camel.ego:6>, compiler.Test...
[20210409144645] 4410  TRACE  : (31)              Camel  29: Equal                          stack[ 7]: 1, 4, functions.Bool(), F<camel.ego:6>, compiler.T...
[20210409144645] 4411  TRACE  : (31)              Camel  30: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:6>, compiler....
[20210409144645] 4412  TRACE  : (31)              Camel  31: BranchFalse     @43            stack[ 5]: false, F<camel.ego:6>, compiler.TestEqual(), compi...
[20210409144645] 4413  TRACE  : (31)              Camel  43: AtLine          11             stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4414  TRACE  : (31)              Camel  44: Push            M<let>         stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4415  TRACE  : (31)              Camel  45: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:6>, compiler.TestEqual(), comp...
[20210409144645] 4416  TRACE  : (31)              Camel  46: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4417  TRACE  : (31)              Camel  47: Member          "ToUpper"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4418  TRACE  : (31)              Camel  48: Load            "strings"      stack[ 6]: functions.Upper(), M<let>, F<camel.ego:6>, compile...
[20210409144645] 4419  TRACE  : (31)              Camel  49: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4420  TRACE  : (31)              Camel  50: Member          "Left"         stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4421  TRACE  : (31)              Camel  51: Load            "s"            stack[ 7]: functions.Left(), functions.Upper(), M<let>, F<cam...
[20210409144645] 4422  TRACE  : (31)              Camel  52: Push            1              stack[ 8]: TEST, functions.Left(), functions.Upper(), M<let>,...
[20210409144645] 4423  TRACE  : (31)              Camel  53: Call            2              stack[ 9]: 1, TEST, functions.Left(), functions.Upper(), M<le...
[20210409144645] 4424  TRACE  : (31)              Camel  54: Call            1              stack[ 7]: T, functions.Upper(), M<let>, F<camel.ego:6>, comp...
[20210409144645] 4425  TRACE  : (31)              Camel  55: SymbolCreate    "left"         stack[ 6]: T, M<let>, F<camel.ego:6>, compiler.TestEqual(), c...
[20210409144645] 4426  TRACE  : (31)              Camel  56: Store           "left"         stack[ 6]: T, M<let>, F<camel.ego:6>, compiler.TestEqual(), c...
[20210409144645] 4427  TRACE  : (31)              Camel  57: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:6>, compiler.TestEqual(), comp...
[20210409144645] 4428  TRACE  : (31)              Camel  58: AtLine          12             stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4429  TRACE  : (31)              Camel  59: Push            M<let>         stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4430  TRACE  : (31)              Camel  60: Load            "strings"      stack[ 5]: M<let>, F<camel.ego:6>, compiler.TestEqual(), comp...
[20210409144645] 4431  TRACE  : (31)              Camel  61: SetThis                        stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4432  TRACE  : (31)              Camel  62: Member          "ToLower"      stack[ 6]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4433  TRACE  : (31)              Camel  63: Load            "strings"      stack[ 6]: functions.Lower(), M<let>, F<camel.ego:6>, compile...
[20210409144645] 4434  TRACE  : (31)              Camel  64: SetThis                        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4435  TRACE  : (31)              Camel  65: Member          "Right"        stack[ 7]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4436  TRACE  : (31)              Camel  66: Load            "s"            stack[ 7]: functions.Right(), functions.Lower(), M<let>, F<ca...
[20210409144645] 4437  TRACE  : (31)              Camel  67: Load            "len"          stack[ 8]: TEST, functions.Right(), functions.Lower(), M<let>...
[20210409144645] 4438  TRACE  : (31)              Camel  68: Load            "s"            stack[ 9]: functions.Length(), TEST, functions.Right(), funct...
[20210409144645] 4439  TRACE  : (31)              Camel  69: Call            1              stack[10]: TEST, functions.Length(), TEST, functions.Right(),...
[20210409144645] 4440  TRACE  : (31)              Camel  70: Push            1              stack[ 9]: 4, TEST, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4441  TRACE  : (31)              Camel  71: Sub                            stack[10]: 1, 4, TEST, functions.Right(), functions.Lower(), ...
[20210409144645] 4442  TRACE  : (31)              Camel  72: Call            2              stack[ 9]: 3, TEST, functions.Right(), functions.Lower(), M<l...
[20210409144645] 4443  TRACE  : (31)              Camel  73: Call            1              stack[ 7]: EST, functions.Lower(), M<let>, F<camel.ego:6>, co...
[20210409144645] 4444  TRACE  : (31)              Camel  74: SymbolCreate    "right"        stack[ 6]: est, M<let>, F<camel.ego:6>, compiler.TestEqual(),...
[20210409144645] 4445  TRACE  : (31)              Camel  75: Store           "right"        stack[ 6]: est, M<let>, F<camel.ego:6>, compiler.TestEqual(),...
[20210409144645] 4446  TRACE  : (31)              Camel  76: DropToMarker    M<let>         stack[ 5]: M<let>, F<camel.ego:6>, compiler.TestEqual(), comp...
[20210409144645] 4447  TRACE  : (31)              Camel  77: AtLine          14             stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4448  TRACE  : (31)              Camel  78: Load            "left"         stack[ 4]: F<camel.ego:6>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4449  TRACE  : (31)              Camel  79: Load            "right"        stack[ 5]: T, F<camel.ego:6>, compiler.TestEqual(), compiler....
[20210409144645] 4450  TRACE  : (31)              Camel  80: Add                            stack[ 6]: est, T, F<camel.ego:6>, compiler.TestEqual(), comp...
[20210409144645] 4451  TRACE  : (31)              Camel  81: Coerce          T(string)      stack[ 5]: Test, F<camel.ego:6>, compiler.TestEqual(), compil...
[20210409144645] 4452  TRACE  : (31)              Camel  82: Return          true           stack[ 5]: Test, F<camel.ego:6>, compiler.TestEqual(), compil...
[20210409144645] 4453  TRACE  : (31)          camel.ego  62: Push            "Test"         stack[ 4]: Test, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 4454  TRACE  : (31)          camel.ego  63: Call            2              stack[ 5]: Test, Test, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 4455  TRACE  : (31)          camel.ego  64: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4456  TRACE  : (31)          camel.ego  65: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4457  TRACE  : (31)          camel.ego  66: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4458  TRACE  : (31)          camel.ego  67: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4459  TRACE  : (31)          camel.ego  68: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4460  TRACE  : (31)          camel.ego  69: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4461  TRACE  : (31)          camel.ego  70: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4462  TRACE  : (31)          camel.ego  71: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4463  TRACE  : (31)          camel.ego  72: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4464  TRACE  : (31)          camel.ego  73: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4465  TRACE  : (31)          camel.ego  74: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4466  TRACE  : (31)          camel.ego  75: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4467  TRACE  : (31)          camel.ego  76: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4468  TRACE  : (31)          camel.ego  77: Push            ""             stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4469  TRACE  : (31)          camel.ego  78: Call            1              stack[ 5]: , Camel(), compiler.TestEqual(), compiler.TestAsse...
[20210409144645] 4470  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4471  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4472  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4473  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: [""], F<camel.ego:7>, compiler.TestEqual(), compil...
[20210409144645] 4474  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: , F<camel.ego:7>, compiler.TestEqual(), compiler.T...
[20210409144645] 4475  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: , F<camel.ego:7>, compiler.TestEqual(), compiler.T...
[20210409144645] 4476  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4477  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4478  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4479  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4480  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:7>, compiler.TestEqu...
[20210409144645] 4481  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4482  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: , functions.Length(), functions.Bool(), F<camel.eg...
[20210409144645] 4483  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 0, functions.Bool(), F<camel.ego:7>, compiler.Test...
[20210409144645] 4484  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 0, functions.Bool(), F<camel.ego:7>, compiler.T...
[20210409144645] 4485  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: true, functions.Bool(), F<camel.ego:7>, compiler.T...
[20210409144645] 4486  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: true, F<camel.ego:7>, compiler.TestEqual(), compil...
[20210409144645] 4487  TRACE  : (31)              Camel  16: AtLine          4              stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4488  TRACE  : (31)              Camel  17: PushScope                      stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4489  TRACE  : (31)              Camel  18: AtLine          5              stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4490  TRACE  : (31)              Camel  19: Push            ""             stack[ 4]: F<camel.ego:7>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4491  TRACE  : (31)              Camel  20: Coerce          T(string)      stack[ 5]: , F<camel.ego:7>, compiler.TestEqual(), compiler.T...
[20210409144645] 4492  TRACE  : (31)              Camel  21: Return          true           stack[ 5]: , F<camel.ego:7>, compiler.TestEqual(), compiler.T...
[20210409144645] 4493  TRACE  : (31)          camel.ego  79: Push            ""             stack[ 4]: , compiler.TestEqual(), compiler.TestAssert(), M<a...
[20210409144645] 4494  TRACE  : (31)          camel.ego  80: Call            2              stack[ 5]: , , compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 4495  TRACE  : (31)          camel.ego  81: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4496  TRACE  : (31)          camel.ego  82: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4497  TRACE  : (31)          camel.ego  83: AtLine          8              stack[ 0]: <empty>
[20210409144645] 4498  TRACE  : (31)          camel.ego  84: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4499  TRACE  : (31)          camel.ego  85: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4500  TRACE  : (31)          camel.ego  86: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4501  TRACE  : (31)          camel.ego  87: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4502  TRACE  : (31)          camel.ego  88: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4503  TRACE  : (31)          camel.ego  89: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4504  TRACE  : (31)          camel.ego  90: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4505  TRACE  : (31)          camel.ego  91: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4506  TRACE  : (31)          camel.ego  92: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4507  TRACE  : (31)          camel.ego  93: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4508  TRACE  : (31)          camel.ego  94: Push            "a"            stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4509  TRACE  : (31)          camel.ego  95: Call            1              stack[ 5]: a, Camel(), compiler.TestEqual(), compiler.TestAss...
[20210409144645] 4510  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4511  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4512  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4513  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: ["a"], F<camel.ego:8>, compiler.TestEqual(), compi...
[20210409144645] 4514  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: a, F<camel.ego:8>, compiler.TestEqual(), compiler....
[20210409144645] 4515  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: a, F<camel.ego:8>, compiler.TestEqual(), compiler....
[20210409144645] 4516  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4517  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4518  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4519  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4520  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:8>, compiler.TestEqu...
[20210409144645] 4521  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4522  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: a, functions.Length(), functions.Bool(), F<camel.e...
[20210409144645] 4523  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 1, functions.Bool(), F<camel.ego:8>, compiler.Test...
[20210409144645] 4524  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 1, functions.Bool(), F<camel.ego:8>, compiler.T...
[20210409144645] 4525  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:8>, compiler....
[20210409144645] 4526  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: false, F<camel.ego:8>, compiler.TestEqual(), compi...
[20210409144645] 4527  TRACE  : (31)              Camel  23: AtLine          7              stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4528  TRACE  : (31)              Camel  24: Load            "bool"         stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4529  TRACE  : (31)              Camel  25: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:8>, compiler.TestEqu...
[20210409144645] 4530  TRACE  : (31)              Camel  26: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4531  TRACE  : (31)              Camel  27: Call            1              stack[ 7]: a, functions.Length(), functions.Bool(), F<camel.e...
[20210409144645] 4532  TRACE  : (31)              Camel  28: Push            1              stack[ 6]: 1, functions.Bool(), F<camel.ego:8>, compiler.Test...
[20210409144645] 4533  TRACE  : (31)              Camel  29: Equal                          stack[ 7]: 1, 1, functions.Bool(), F<camel.ego:8>, compiler.T...
[20210409144645] 4534  TRACE  : (31)              Camel  30: Call            1              stack[ 6]: true, functions.Bool(), F<camel.ego:8>, compiler.T...
[20210409144645] 4535  TRACE  : (31)              Camel  31: BranchFalse     @43            stack[ 5]: true, F<camel.ego:8>, compiler.TestEqual(), compil...
[20210409144645] 4536  TRACE  : (31)              Camel  32: AtLine          7              stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4537  TRACE  : (31)              Camel  33: PushScope                      stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4538  TRACE  : (31)              Camel  34: AtLine          8              stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4539  TRACE  : (31)              Camel  35: Load            "strings"      stack[ 4]: F<camel.ego:8>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4540  TRACE  : (31)              Camel  36: SetThis                        stack[ 5]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4541  TRACE  : (31)              Camel  37: Member          "ToUpper"      stack[ 5]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4542  TRACE  : (31)              Camel  38: Load            "s"            stack[ 5]: functions.Upper(), F<camel.ego:8>, compiler.TestEq...
[20210409144645] 4543  TRACE  : (31)              Camel  39: Call            1              stack[ 6]: a, functions.Upper(), F<camel.ego:8>, compiler.Tes...
[20210409144645] 4544  TRACE  : (31)              Camel  40: Coerce          T(string)      stack[ 5]: A, F<camel.ego:8>, compiler.TestEqual(), compiler....
[20210409144645] 4545  TRACE  : (31)              Camel  41: Return          true           stack[ 5]: A, F<camel.ego:8>, compiler.TestEqual(), compiler....
[20210409144645] 4546  TRACE  : (31)          camel.ego  96: Push            "A"            stack[ 4]: A, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 4547  TRACE  : (31)          camel.ego  97: Call            2              stack[ 5]: A, A, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 4548  TRACE  : (31)          camel.ego  98: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4549  TRACE  : (31)          camel.ego  99: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4550  TRACE  : (31)          camel.ego 100: AtLine          9              stack[ 0]: <empty>
[20210409144645] 4551  TRACE  : (31)          camel.ego 101: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4552  TRACE  : (31)          camel.ego 102: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4553  TRACE  : (31)          camel.ego 103: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4554  TRACE  : (31)          camel.ego 104: Member          "assert"       stack[ 2]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4555  TRACE  : (31)          camel.ego 105: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4556  TRACE  : (31)          camel.ego 106: SetThis                        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4557  TRACE  : (31)          camel.ego 107: Member          "Equal"        stack[ 3]: Testing{ description: "functions: strings.Camel()"...
[20210409144645] 4558  TRACE  : (31)          camel.ego 108: Load            "strings"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4559  TRACE  : (31)          camel.ego 109: SetThis                        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4560  TRACE  : (31)          camel.ego 110: Member          "Camel"        stack[ 4]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4561  TRACE  : (31)          camel.ego 111: Push            "B"            stack[ 4]: Camel(), compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 4562  TRACE  : (31)          camel.ego 112: Call            1              stack[ 5]: B, Camel(), compiler.TestEqual(), compiler.TestAss...
[20210409144645] 4563  TRACE  : (31)  Using symbol table from package strings
[20210409144645] 4564  TRACE  : (31)              Camel   0: ArgCheck        [1 1 Camel]    stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4565  TRACE  : (31)              Camel   1: Load            "__args"       stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4566  TRACE  : (31)              Camel   2: LoadIndex       0              stack[ 5]: ["B"], F<camel.ego:9>, compiler.TestEqual(), compi...
[20210409144645] 4567  TRACE  : (31)              Camel   3: RequiredType    T(string)      stack[ 5]: B, F<camel.ego:9>, compiler.TestEqual(), compiler....
[20210409144645] 4568  TRACE  : (31)              Camel   4: StoreAlways     "s"            stack[ 5]: B, F<camel.ego:9>, compiler.TestEqual(), compiler....
[20210409144645] 4569  TRACE  : (31)              Camel   5: AtLine          3              stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4570  TRACE  : (31)              Camel   6: PushScope                      stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4571  TRACE  : (31)              Camel   7: AtLine          4              stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4572  TRACE  : (31)              Camel   8: Load            "bool"         stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4573  TRACE  : (31)              Camel   9: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:9>, compiler.TestEqu...
[20210409144645] 4574  TRACE  : (31)              Camel  10: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4575  TRACE  : (31)              Camel  11: Call            1              stack[ 7]: B, functions.Length(), functions.Bool(), F<camel.e...
[20210409144645] 4576  TRACE  : (31)              Camel  12: Push            0              stack[ 6]: 1, functions.Bool(), F<camel.ego:9>, compiler.Test...
[20210409144645] 4577  TRACE  : (31)              Camel  13: Equal                          stack[ 7]: 0, 1, functions.Bool(), F<camel.ego:9>, compiler.T...
[20210409144645] 4578  TRACE  : (31)              Camel  14: Call            1              stack[ 6]: false, functions.Bool(), F<camel.ego:9>, compiler....
[20210409144645] 4579  TRACE  : (31)              Camel  15: BranchFalse     @23            stack[ 5]: false, F<camel.ego:9>, compiler.TestEqual(), compi...
[20210409144645] 4580  TRACE  : (31)              Camel  23: AtLine          7              stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4581  TRACE  : (31)              Camel  24: Load            "bool"         stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4582  TRACE  : (31)              Camel  25: Load            "len"          stack[ 5]: functions.Bool(), F<camel.ego:9>, compiler.TestEqu...
[20210409144645] 4583  TRACE  : (31)              Camel  26: Load            "s"            stack[ 6]: functions.Length(), functions.Bool(), F<camel.ego:...
[20210409144645] 4584  TRACE  : (31)              Camel  27: Call            1              stack[ 7]: B, functions.Length(), functions.Bool(), F<camel.e...
[20210409144645] 4585  TRACE  : (31)              Camel  28: Push            1              stack[ 6]: 1, functions.Bool(), F<camel.ego:9>, compiler.Test...
[20210409144645] 4586  TRACE  : (31)              Camel  29: Equal                          stack[ 7]: 1, 1, functions.Bool(), F<camel.ego:9>, compiler.T...
[20210409144645] 4587  TRACE  : (31)              Camel  30: Call            1              stack[ 6]: true, functions.Bool(), F<camel.ego:9>, compiler.T...
[20210409144645] 4588  TRACE  : (31)              Camel  31: BranchFalse     @43            stack[ 5]: true, F<camel.ego:9>, compiler.TestEqual(), compil...
[20210409144645] 4589  TRACE  : (31)              Camel  32: AtLine          7              stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4590  TRACE  : (31)              Camel  33: PushScope                      stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4591  TRACE  : (31)              Camel  34: AtLine          8              stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4592  TRACE  : (31)              Camel  35: Load            "strings"      stack[ 4]: F<camel.ego:9>, compiler.TestEqual(), compiler.Tes...
[20210409144645] 4593  TRACE  : (31)              Camel  36: SetThis                        stack[ 5]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4594  TRACE  : (31)              Camel  37: Member          "ToUpper"      stack[ 5]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 4595  TRACE  : (31)              Camel  38: Load            "s"            stack[ 5]: functions.Upper(), F<camel.ego:9>, compiler.TestEq...
[20210409144645] 4596  TRACE  : (31)              Camel  39: Call            1              stack[ 6]: B, functions.Upper(), F<camel.ego:9>, compiler.Tes...
[20210409144645] 4597  TRACE  : (31)              Camel  40: Coerce          T(string)      stack[ 5]: B, F<camel.ego:9>, compiler.TestEqual(), compiler....
[20210409144645] 4598  TRACE  : (31)              Camel  41: Return          true           stack[ 5]: B, F<camel.ego:9>, compiler.TestEqual(), compiler....
[20210409144645] 4599  TRACE  : (31)          camel.ego 113: Push            "B"            stack[ 4]: B, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 4600  TRACE  : (31)          camel.ego 114: Call            2              stack[ 5]: B, B, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 4601  TRACE  : (31)          camel.ego 115: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4602  TRACE  : (31)          camel.ego 116: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4603  TRACE  : (31)          camel.ego 117: AtLine          11             stack[ 0]: <empty>
[20210409144645] 4604  TRACE  : (31)          camel.ego 118: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4605  TRACE  : (31)          camel.ego 119: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 4606  TRACE  : (31)          camel.ego 120: Print                          stack[ 1]: (PASS)  
[20210409144645] 4607  TRACE  : (31)          camel.ego 121: Timer           1              stack[ 0]: <empty>
[20210409144645] 4608  TRACE  : (31)          camel.ego 122: Print                          stack[ 1]: 0.004s
[20210409144645] 4609  TRACE  : (31)          camel.ego 123: Say             true           stack[ 0]: <empty>
TEST: functions: strings.Camel()                        (PASS)  0.004s
[20210409144645] 4610  TRACE  : (31)          camel.ego 124: Stop                           stack[ 0]: <empty>
[20210409144645] 4611  TRACE  : *** Tracing funcexpr.ego (32)  
[20210409144645] 4612  TRACE  : (32)       funcexpr.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 4613  TRACE  : (32)       funcexpr.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4614  TRACE  : (32)       funcexpr.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 4615  TRACE  : (32)       funcexpr.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4616  TRACE  : (32)       funcexpr.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4617  TRACE  : (32)       funcexpr.ego   5: Push            Testing{ description: "functions: function definitions as expressions" } stack[ 0]: <empty>
[20210409144645] 4618  TRACE  : (32)       funcexpr.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: function definit...
[20210409144645] 4619  TRACE  : (32)       funcexpr.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 4620  TRACE  : (32)       funcexpr.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 4621  TRACE  : (32)       funcexpr.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 4622  TRACE  : (32)       funcexpr.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: function definit...
[20210409144645] 4623  TRACE  : (32)       funcexpr.ego  11: Print                          stack[ 1]: functions: function definitions as expressions
[20210409144645] 4624  TRACE  : (32)       funcexpr.ego  12: Push            "    "         stack[ 0]: <empty>
[20210409144645] 4625  TRACE  : (32)       funcexpr.ego  13: Print                          stack[ 1]:     
[20210409144645] 4626  TRACE  : (32)       funcexpr.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 4627  TRACE  : (32)       funcexpr.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 4628  TRACE  : (32)       funcexpr.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 4629  TRACE  : (32)       funcexpr.ego  17: Push            x1()           stack[ 0]: <empty>
[20210409144645] 4630  TRACE  : (32)       funcexpr.ego  18: StoreAlways     "x1"           stack[ 1]: x1()
[20210409144645] 4631  TRACE  : (32)       funcexpr.ego  19: Push            x2()           stack[ 0]: <empty>
[20210409144645] 4632  TRACE  : (32)       funcexpr.ego  20: StoreAlways     "x2"           stack[ 1]: x2()
[20210409144645] 4633  TRACE  : (32)       funcexpr.ego  21: AtLine          12             stack[ 0]: <empty>
[20210409144645] 4634  TRACE  : (32)       funcexpr.ego  22: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4635  TRACE  : (32)       funcexpr.ego  23: Load            "x1"           stack[ 1]: M<let>
[20210409144645] 4636  TRACE  : (32)       funcexpr.ego  24: Load            "x2"           stack[ 2]: x1(), M<let>
[20210409144645] 4637  TRACE  : (32)       funcexpr.ego  25: Push            55             stack[ 3]: x2(), x1(), M<let>
[20210409144645] 4638  TRACE  : (32)       funcexpr.ego  26: Call            2              stack[ 4]: 55, x2(), x1(), M<let>
[20210409144645] 4639  TRACE  : (32)                 x1   0: ArgCheck        [2 2 x1]       stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4640  TRACE  : (32)                 x1   1: Load            "__args"       stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4641  TRACE  : (32)                 x1   2: LoadIndex       0              stack[ 3]: [x2(), 55], F<funcexpr.ego:12>, M<let>
[20210409144645] 4642  TRACE  : (32)                 x1   3: RequiredType    T(interface{}) stack[ 3]: x2(), F<funcexpr.ego:12>, M<let>
[20210409144645] 4643  TRACE  : (32)                 x1   4: StoreAlways     "f"            stack[ 3]: x2(), F<funcexpr.ego:12>, M<let>
[20210409144645] 4644  TRACE  : (32)                 x1   5: Load            "__args"       stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4645  TRACE  : (32)                 x1   6: LoadIndex       1              stack[ 3]: [x2(), 55], F<funcexpr.ego:12>, M<let>
[20210409144645] 4646  TRACE  : (32)                 x1   7: RequiredType    T(interface{}) stack[ 3]: 55, F<funcexpr.ego:12>, M<let>
[20210409144645] 4647  TRACE  : (32)                 x1   8: StoreAlways     "v"            stack[ 3]: 55, F<funcexpr.ego:12>, M<let>
[20210409144645] 4648  TRACE  : (32)                 x1   9: AtLine          5              stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4649  TRACE  : (32)                 x1  10: PushScope                      stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4650  TRACE  : (32)                 x1  11: AtLine          6              stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4651  TRACE  : (32)                 x1  12: Load            "f"            stack[ 2]: F<funcexpr.ego:12>, M<let>
[20210409144645] 4652  TRACE  : (32)                 x1  13: Load            "v"            stack[ 3]: x2(), F<funcexpr.ego:12>, M<let>
[20210409144645] 4653  TRACE  : (32)                 x1  14: Call            1              stack[ 4]: 55, x2(), F<funcexpr.ego:12>, M<let>
[20210409144645] 4654  TRACE  : (32)                 x2   0: ArgCheck        [1 1 x2]       stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4655  TRACE  : (32)                 x2   1: Load            "__args"       stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4656  TRACE  : (32)                 x2   2: LoadIndex       0              stack[ 4]: [55], F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4657  TRACE  : (32)                 x2   3: RequiredType    T(float)       stack[ 4]: 55, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4658  TRACE  : (32)                 x2   4: StoreAlways     "v"            stack[ 4]: 55, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4659  TRACE  : (32)                 x2   5: AtLine          9              stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4660  TRACE  : (32)                 x2   6: PushScope                      stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4661  TRACE  : (32)                 x2   7: AtLine          10             stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4662  TRACE  : (32)                 x2   8: Load            "v"            stack[ 3]: F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4663  TRACE  : (32)                 x2   9: Push            2              stack[ 4]: 55, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4664  TRACE  : (32)                 x2  10: Unknown 38                     stack[ 5]: 2, 55, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4665  TRACE  : (32)                 x2  11: Coerce          T(float)       stack[ 4]: 110, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4666  TRACE  : (32)                 x2  12: Return          true           stack[ 4]: 110, F<x1:6>, F<funcexpr.ego:12>, M<let>
[20210409144645] 4667  TRACE  : (32)                 x1  15: Coerce          T(interface{}) stack[ 3]: 110, F<funcexpr.ego:12>, M<let>
[20210409144645] 4668  TRACE  : (32)                 x1  16: Return          true           stack[ 3]: 110, F<funcexpr.ego:12>, M<let>
[20210409144645] 4669  TRACE  : (32)       funcexpr.ego  27: SymbolCreate    "v1"           stack[ 2]: 110, M<let>
[20210409144645] 4670  TRACE  : (32)       funcexpr.ego  28: Store           "v1"           stack[ 2]: 110, M<let>
[20210409144645] 4671  TRACE  : (32)       funcexpr.ego  29: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4672  TRACE  : (32)       funcexpr.ego  30: AtLine          13             stack[ 0]: <empty>
[20210409144645] 4673  TRACE  : (32)       funcexpr.ego  31: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4674  TRACE  : (32)       funcexpr.ego  32: Load            "x1"           stack[ 1]: M<let>
[20210409144645] 4675  TRACE  : (32)       funcexpr.ego  33: Push            <anon>()       stack[ 2]: x1(), M<let>
[20210409144645] 4676  TRACE  : (32)       funcexpr.ego  34: Push            10             stack[ 3]: <anon>(), x1(), M<let>
[20210409144645] 4677  TRACE  : (32)       funcexpr.ego  35: Call            2              stack[ 4]: 10, <anon>(), x1(), M<let>
[20210409144645] 4678  TRACE  : (32)                 x1   0: ArgCheck        [2 2 x1]       stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4679  TRACE  : (32)                 x1   1: Load            "__args"       stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4680  TRACE  : (32)                 x1   2: LoadIndex       0              stack[ 3]: [<anon>(), 10], F<funcexpr.ego:13>, M<let>
[20210409144645] 4681  TRACE  : (32)                 x1   3: RequiredType    T(interface{}) stack[ 3]: <anon>(), F<funcexpr.ego:13>, M<let>
[20210409144645] 4682  TRACE  : (32)                 x1   4: StoreAlways     "f"            stack[ 3]: <anon>(), F<funcexpr.ego:13>, M<let>
[20210409144645] 4683  TRACE  : (32)                 x1   5: Load            "__args"       stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4684  TRACE  : (32)                 x1   6: LoadIndex       1              stack[ 3]: [<anon>(), 10], F<funcexpr.ego:13>, M<let>
[20210409144645] 4685  TRACE  : (32)                 x1   7: RequiredType    T(interface{}) stack[ 3]: 10, F<funcexpr.ego:13>, M<let>
[20210409144645] 4686  TRACE  : (32)                 x1   8: StoreAlways     "v"            stack[ 3]: 10, F<funcexpr.ego:13>, M<let>
[20210409144645] 4687  TRACE  : (32)                 x1   9: AtLine          5              stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4688  TRACE  : (32)                 x1  10: PushScope                      stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4689  TRACE  : (32)                 x1  11: AtLine          6              stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4690  TRACE  : (32)                 x1  12: Load            "f"            stack[ 2]: F<funcexpr.ego:13>, M<let>
[20210409144645] 4691  TRACE  : (32)                 x1  13: Load            "v"            stack[ 3]: <anon>(), F<funcexpr.ego:13>, M<let>
[20210409144645] 4692  TRACE  : (32)                 x1  14: Call            1              stack[ 4]: 10, <anon>(), F<funcexpr.ego:13>, M<let>
[20210409144645] 4693  TRACE  : (32)                      0: ArgCheck        [1 1 ]         stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4694  TRACE  : (32)                      1: Load            "__args"       stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4695  TRACE  : (32)                      2: LoadIndex       0              stack[ 4]: [10], F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4696  TRACE  : (32)                      3: RequiredType    T(int)         stack[ 4]: 10, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4697  TRACE  : (32)                      4: StoreAlways     "x"            stack[ 4]: 10, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4698  TRACE  : (32)                      5: AtLine          13             stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4699  TRACE  : (32)                      6: PushScope                      stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4700  TRACE  : (32)                      7: AtLine          14             stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4701  TRACE  : (32)                      8: Load            "x"            stack[ 3]: F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4702  TRACE  : (32)                      9: Push            3              stack[ 4]: 10, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4703  TRACE  : (32)                     10: Unknown 38                     stack[ 5]: 3, 10, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4704  TRACE  : (32)                     11: Coerce          T(int)         stack[ 4]: 30, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4705  TRACE  : (32)                     12: Return          true           stack[ 4]: 30, F<x1:6>, F<funcexpr.ego:13>, M<let>
[20210409144645] 4706  TRACE  : (32)                 x1  15: Coerce          T(interface{}) stack[ 3]: 30, F<funcexpr.ego:13>, M<let>
[20210409144645] 4707  TRACE  : (32)                 x1  16: Return          true           stack[ 3]: 30, F<funcexpr.ego:13>, M<let>
[20210409144645] 4708  TRACE  : (32)       funcexpr.ego  36: SymbolCreate    "v2"           stack[ 2]: 30, M<let>
[20210409144645] 4709  TRACE  : (32)       funcexpr.ego  37: Store           "v2"           stack[ 2]: 30, M<let>
[20210409144645] 4710  TRACE  : (32)       funcexpr.ego  38: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4711  TRACE  : (32)       funcexpr.ego  39: AtLine          17             stack[ 0]: <empty>
[20210409144645] 4712  TRACE  : (32)       funcexpr.ego  40: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4713  TRACE  : (32)       funcexpr.ego  41: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4714  TRACE  : (32)       funcexpr.ego  42: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4715  TRACE  : (32)       funcexpr.ego  43: Member          "assert"       stack[ 2]: Testing{ description: "functions: function definit...
[20210409144645] 4716  TRACE  : (32)       funcexpr.ego  44: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4717  TRACE  : (32)       funcexpr.ego  45: SetThis                        stack[ 3]: Testing{ description: "functions: function definit...
[20210409144645] 4718  TRACE  : (32)       funcexpr.ego  46: Member          "Equal"        stack[ 3]: Testing{ description: "functions: function definit...
[20210409144645] 4719  TRACE  : (32)       funcexpr.ego  47: Load            "v1"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4720  TRACE  : (32)       funcexpr.ego  48: Push            110            stack[ 4]: 110, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 4721  TRACE  : (32)       funcexpr.ego  49: Push            "Incorrect value for declared function" stack[ 5]: 110, 110, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 4722  TRACE  : (32)       funcexpr.ego  50: Call            3              stack[ 6]: Incorrect value for declared function, 110, 110, c...
[20210409144645] 4723  TRACE  : (32)       funcexpr.ego  51: Call            1              stack[ 3]: [true Incorrect value for declared function], comp...
[20210409144645] 4724  TRACE  : (32)       funcexpr.ego  52: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4725  TRACE  : (32)       funcexpr.ego  53: AtLine          18             stack[ 0]: <empty>
[20210409144645] 4726  TRACE  : (32)       funcexpr.ego  54: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4727  TRACE  : (32)       funcexpr.ego  55: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4728  TRACE  : (32)       funcexpr.ego  56: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4729  TRACE  : (32)       funcexpr.ego  57: Member          "assert"       stack[ 2]: Testing{ description: "functions: function definit...
[20210409144645] 4730  TRACE  : (32)       funcexpr.ego  58: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4731  TRACE  : (32)       funcexpr.ego  59: SetThis                        stack[ 3]: Testing{ description: "functions: function definit...
[20210409144645] 4732  TRACE  : (32)       funcexpr.ego  60: Member          "Equal"        stack[ 3]: Testing{ description: "functions: function definit...
[20210409144645] 4733  TRACE  : (32)       funcexpr.ego  61: Load            "v2"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 4734  TRACE  : (32)       funcexpr.ego  62: Push            30             stack[ 4]: 30, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 4735  TRACE  : (32)       funcexpr.ego  63: Push            "Incorrect value for function expression" stack[ 5]: 30, 30, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 4736  TRACE  : (32)       funcexpr.ego  64: Call            3              stack[ 6]: Incorrect value for function expression, 30, 30, c...
[20210409144645] 4737  TRACE  : (32)       funcexpr.ego  65: Call            1              stack[ 3]: [true Incorrect value for function expression], co...
[20210409144645] 4738  TRACE  : (32)       funcexpr.ego  66: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4739  TRACE  : (32)       funcexpr.ego  67: PopScope                       stack[ 0]: <empty>
[20210409144645] 4740  TRACE  : (32)       funcexpr.ego  68: AtLine          20             stack[ 0]: <empty>
[20210409144645] 4741  TRACE  : (32)       funcexpr.ego  69: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4742  TRACE  : (32)       funcexpr.ego  70: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 4743  TRACE  : (32)       funcexpr.ego  71: Print                          stack[ 1]: (PASS)  
[20210409144645] 4744  TRACE  : (32)       funcexpr.ego  72: Timer           1              stack[ 0]: <empty>
[20210409144645] 4745  TRACE  : (32)       funcexpr.ego  73: Print                          stack[ 1]: 0.880ms
[20210409144645] 4746  TRACE  : (32)       funcexpr.ego  74: Say             true           stack[ 0]: <empty>
TEST: functions: function definitions as expressions    (PASS)  0.880ms
[20210409144645] 4747  TRACE  : (32)       funcexpr.ego  75: Stop                           stack[ 0]: <empty>
[20210409144645] 4748  TRACE  : *** Tracing simple_function.ego (33)  
[20210409144645] 4749  TRACE  : (33) simple_function.ego   0: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4750  TRACE  : (33) simple_function.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4751  TRACE  : (33) simple_function.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 4752  TRACE  : (33) simple_function.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4753  TRACE  : (33) simple_function.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4754  TRACE  : (33) simple_function.ego   5: Push            Testing{ description: "functions: simple function call" } stack[ 0]: <empty>
[20210409144645] 4755  TRACE  : (33) simple_function.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: simple function ...
[20210409144645] 4756  TRACE  : (33) simple_function.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 4757  TRACE  : (33) simple_function.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 4758  TRACE  : (33) simple_function.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 4759  TRACE  : (33) simple_function.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: simple function ...
[20210409144645] 4760  TRACE  : (33) simple_function.ego  11: Print                          stack[ 1]: functions: simple function call
[20210409144645] 4761  TRACE  : (33) simple_function.ego  12: Push            "                   " stack[ 0]: <empty>
[20210409144645] 4762  TRACE  : (33) simple_function.ego  13: Print                          stack[ 1]:                    
[20210409144645] 4763  TRACE  : (33) simple_function.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 4764  TRACE  : (33) simple_function.ego  15: Push            dbl()          stack[ 0]: <empty>
[20210409144645] 4765  TRACE  : (33) simple_function.ego  16: StoreAlways     "dbl"          stack[ 1]: dbl()
[20210409144645] 4766  TRACE  : (33) simple_function.ego  17: AtLine          13             stack[ 0]: <empty>
[20210409144645] 4767  TRACE  : (33) simple_function.ego  18: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4768  TRACE  : (33) simple_function.ego  19: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4769  TRACE  : (33) simple_function.ego  20: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4770  TRACE  : (33) simple_function.ego  21: Member          "assert"       stack[ 2]: Testing{ description: "functions: simple function ...
[20210409144645] 4771  TRACE  : (33) simple_function.ego  22: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4772  TRACE  : (33) simple_function.ego  23: Load            "dbl"          stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 4773  TRACE  : (33) simple_function.ego  24: Push            4              stack[ 4]: dbl(), functions.Type(), compiler.TestAssert(), M<...
[20210409144645] 4774  TRACE  : (33) simple_function.ego  25: Call            1              stack[ 5]: 4, dbl(), functions.Type(), compiler.TestAssert(),...
[20210409144645] 4775  TRACE  : (33)                dbl   0: ArgCheck        [1 1 dbl]      stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4776  TRACE  : (33)                dbl   1: Load            "__args"       stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4777  TRACE  : (33)                dbl   2: LoadIndex       0              stack[ 5]: [4], F<simple_function.ego:13>, functions.Type(), ...
[20210409144645] 4778  TRACE  : (33)                dbl   3: RequiredType    T(interface{}) stack[ 5]: 4, F<simple_function.ego:13>, functions.Type(), co...
[20210409144645] 4779  TRACE  : (33)                dbl   4: StoreAlways     "x"            stack[ 5]: 4, F<simple_function.ego:13>, functions.Type(), co...
[20210409144645] 4780  TRACE  : (33)                dbl   5: AtLine          9              stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4781  TRACE  : (33)                dbl   6: PushScope                      stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4782  TRACE  : (33)                dbl   7: AtLine          10             stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4783  TRACE  : (33)                dbl   8: Load            "x"            stack[ 4]: F<simple_function.ego:13>, functions.Type(), compi...
[20210409144645] 4784  TRACE  : (33)                dbl   9: Push            2              stack[ 5]: 4, F<simple_function.ego:13>, functions.Type(), co...
[20210409144645] 4785  TRACE  : (33)                dbl  10: Unknown 38                     stack[ 6]: 2, 4, F<simple_function.ego:13>, functions.Type(),...
[20210409144645] 4786  TRACE  : (33)                dbl  11: Coerce          T(interface{}) stack[ 5]: 8, F<simple_function.ego:13>, functions.Type(), co...
[20210409144645] 4787  TRACE  : (33)                dbl  12: Return          true           stack[ 5]: 8, F<simple_function.ego:13>, functions.Type(), co...
[20210409144645] 4788  TRACE  : (33) simple_function.ego  26: Call            1              stack[ 4]: 8, functions.Type(), compiler.TestAssert(), M<asse...
[20210409144645] 4789  TRACE  : (33) simple_function.ego  27: Push            "float"        stack[ 3]: float, compiler.TestAssert(), M<assert>
[20210409144645] 4790  TRACE  : (33) simple_function.ego  28: Equal                          stack[ 4]: float, float, compiler.TestAssert(), M<assert>
[20210409144645] 4791  TRACE  : (33) simple_function.ego  29: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4792  TRACE  : (33) simple_function.ego  30: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4793  TRACE  : (33) simple_function.ego  31: AtLine          14             stack[ 0]: <empty>
[20210409144645] 4794  TRACE  : (33) simple_function.ego  32: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4795  TRACE  : (33) simple_function.ego  33: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4796  TRACE  : (33) simple_function.ego  34: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4797  TRACE  : (33) simple_function.ego  35: Member          "assert"       stack[ 2]: Testing{ description: "functions: simple function ...
[20210409144645] 4798  TRACE  : (33) simple_function.ego  36: Load            "dbl"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4799  TRACE  : (33) simple_function.ego  37: Push            55             stack[ 3]: dbl(), compiler.TestAssert(), M<assert>
[20210409144645] 4800  TRACE  : (33) simple_function.ego  38: Call            1              stack[ 4]: 55, dbl(), compiler.TestAssert(), M<assert>
[20210409144645] 4801  TRACE  : (33)                dbl   0: ArgCheck        [1 1 dbl]      stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4802  TRACE  : (33)                dbl   1: Load            "__args"       stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4803  TRACE  : (33)                dbl   2: LoadIndex       0              stack[ 4]: [55], F<simple_function.ego:14>, compiler.TestAsse...
[20210409144645] 4804  TRACE  : (33)                dbl   3: RequiredType    T(interface{}) stack[ 4]: 55, F<simple_function.ego:14>, compiler.TestAssert...
[20210409144645] 4805  TRACE  : (33)                dbl   4: StoreAlways     "x"            stack[ 4]: 55, F<simple_function.ego:14>, compiler.TestAssert...
[20210409144645] 4806  TRACE  : (33)                dbl   5: AtLine          9              stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4807  TRACE  : (33)                dbl   6: PushScope                      stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4808  TRACE  : (33)                dbl   7: AtLine          10             stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4809  TRACE  : (33)                dbl   8: Load            "x"            stack[ 3]: F<simple_function.ego:14>, compiler.TestAssert(), ...
[20210409144645] 4810  TRACE  : (33)                dbl   9: Push            2              stack[ 4]: 55, F<simple_function.ego:14>, compiler.TestAssert...
[20210409144645] 4811  TRACE  : (33)                dbl  10: Unknown 38                     stack[ 5]: 2, 55, F<simple_function.ego:14>, compiler.TestAss...
[20210409144645] 4812  TRACE  : (33)                dbl  11: Coerce          T(interface{}) stack[ 4]: 110, F<simple_function.ego:14>, compiler.TestAsser...
[20210409144645] 4813  TRACE  : (33)                dbl  12: Return          true           stack[ 4]: 110, F<simple_function.ego:14>, compiler.TestAsser...
[20210409144645] 4814  TRACE  : (33) simple_function.ego  39: Push            110            stack[ 3]: 110, compiler.TestAssert(), M<assert>
[20210409144645] 4815  TRACE  : (33) simple_function.ego  40: Equal                          stack[ 4]: 110, 110, compiler.TestAssert(), M<assert>
[20210409144645] 4816  TRACE  : (33) simple_function.ego  41: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4817  TRACE  : (33) simple_function.ego  42: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4818  TRACE  : (33) simple_function.ego  43: AtLine          15             stack[ 0]: <empty>
[20210409144645] 4819  TRACE  : (33) simple_function.ego  44: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4820  TRACE  : (33) simple_function.ego  45: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 4821  TRACE  : (33) simple_function.ego  46: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 4822  TRACE  : (33) simple_function.ego  47: Member          "assert"       stack[ 2]: Testing{ description: "functions: simple function ...
[20210409144645] 4823  TRACE  : (33) simple_function.ego  48: Load            "dbl"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 4824  TRACE  : (33) simple_function.ego  49: Push            -2             stack[ 3]: dbl(), compiler.TestAssert(), M<assert>
[20210409144645] 4825  TRACE  : (33) simple_function.ego  50: Call            1              stack[ 4]: -2, dbl(), compiler.TestAssert(), M<assert>
[20210409144645] 4826  TRACE  : (33)                dbl   0: ArgCheck        [1 1 dbl]      stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4827  TRACE  : (33)                dbl   1: Load            "__args"       stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4828  TRACE  : (33)                dbl   2: LoadIndex       0              stack[ 4]: [-2], F<simple_function.ego:15>, compiler.TestAsse...
[20210409144645] 4829  TRACE  : (33)                dbl   3: RequiredType    T(interface{}) stack[ 4]: -2, F<simple_function.ego:15>, compiler.TestAssert...
[20210409144645] 4830  TRACE  : (33)                dbl   4: StoreAlways     "x"            stack[ 4]: -2, F<simple_function.ego:15>, compiler.TestAssert...
[20210409144645] 4831  TRACE  : (33)                dbl   5: AtLine          9              stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4832  TRACE  : (33)                dbl   6: PushScope                      stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4833  TRACE  : (33)                dbl   7: AtLine          10             stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4834  TRACE  : (33)                dbl   8: Load            "x"            stack[ 3]: F<simple_function.ego:15>, compiler.TestAssert(), ...
[20210409144645] 4835  TRACE  : (33)                dbl   9: Push            2              stack[ 4]: -2, F<simple_function.ego:15>, compiler.TestAssert...
[20210409144645] 4836  TRACE  : (33)                dbl  10: Unknown 38                     stack[ 5]: 2, -2, F<simple_function.ego:15>, compiler.TestAss...
[20210409144645] 4837  TRACE  : (33)                dbl  11: Coerce          T(interface{}) stack[ 4]: -4, F<simple_function.ego:15>, compiler.TestAssert...
[20210409144645] 4838  TRACE  : (33)                dbl  12: Return          true           stack[ 4]: -4, F<simple_function.ego:15>, compiler.TestAssert...
[20210409144645] 4839  TRACE  : (33) simple_function.ego  51: Push            -4             stack[ 3]: -4, compiler.TestAssert(), M<assert>
[20210409144645] 4840  TRACE  : (33) simple_function.ego  52: Equal                          stack[ 4]: -4, -4, compiler.TestAssert(), M<assert>
[20210409144645] 4841  TRACE  : (33) simple_function.ego  53: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 4842  TRACE  : (33) simple_function.ego  54: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 4843  TRACE  : (33) simple_function.ego  55: AtLine          16             stack[ 0]: <empty>
[20210409144645] 4844  TRACE  : (33) simple_function.ego  56: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4845  TRACE  : (33) simple_function.ego  57: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 4846  TRACE  : (33) simple_function.ego  58: Print                          stack[ 1]: (PASS)  
[20210409144645] 4847  TRACE  : (33) simple_function.ego  59: Timer           1              stack[ 0]: <empty>
[20210409144645] 4848  TRACE  : (33) simple_function.ego  60: Print                          stack[ 1]: 0.626ms
[20210409144645] 4849  TRACE  : (33) simple_function.ego  61: Say             true           stack[ 0]: <empty>
TEST: functions: simple function call                   (PASS)  0.626ms
[20210409144645] 4850  TRACE  : (33) simple_function.ego  62: Stop                           stack[ 0]: <empty>
[20210409144645] 4851  TRACE  : *** Tracing sortslice.ego (34)  
[20210409144645] 4852  TRACE  : (34)      sortslice.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 4853  TRACE  : (34)      sortslice.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 4854  TRACE  : (34)      sortslice.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 4855  TRACE  : (34)      sortslice.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4856  TRACE  : (34)      sortslice.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 4857  TRACE  : (34)      sortslice.ego   5: Push            Testing{ description: "functions: sort.Slice()" } stack[ 0]: <empty>
[20210409144645] 4858  TRACE  : (34)      sortslice.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: sort.Slice()" }
[20210409144645] 4859  TRACE  : (34)      sortslice.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 4860  TRACE  : (34)      sortslice.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 4861  TRACE  : (34)      sortslice.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 4862  TRACE  : (34)      sortslice.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: sort.Slice()" }
[20210409144645] 4863  TRACE  : (34)      sortslice.ego  11: Print                          stack[ 1]: functions: sort.Slice()
[20210409144645] 4864  TRACE  : (34)      sortslice.ego  12: Push            "                           " stack[ 0]: <empty>
[20210409144645] 4865  TRACE  : (34)      sortslice.ego  13: Print                          stack[ 1]:                            
[20210409144645] 4866  TRACE  : (34)      sortslice.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 4867  TRACE  : (34)      sortslice.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 4868  TRACE  : (34)      sortslice.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 4869  TRACE  : (34)      sortslice.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 4870  TRACE  : (34)      sortslice.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 4871  TRACE  : (34)      sortslice.ego  19: Push            101            stack[ 1]: M<let>
[20210409144645] 4872  TRACE  : (34)      sortslice.ego  20: Push            5              stack[ 2]: 101, M<let>
[20210409144645] 4873  TRACE  : (34)      sortslice.ego  21: Push            33             stack[ 3]: 5, 101, M<let>
[20210409144645] 4874  TRACE  : (34)      sortslice.ego  22: Push            -55            stack[ 4]: 33, 5, 101, M<let>
[20210409144645] 4875  TRACE  : (34)      sortslice.ego  23: Push            239            stack[ 5]: -55, 33, 5, 101, M<let>
[20210409144645] 4876  TRACE  : (34)      sortslice.ego  24: Push            3              stack[ 6]: 239, -55, 33, 5, 101, M<let>
[20210409144645] 4877  TRACE  : (34)      sortslice.ego  25: Push            66             stack[ 7]: 3, 239, -55, 33, 5, 101, M<let>
[20210409144645] 4878  TRACE  : (34)      sortslice.ego  26: Push            T(int)         stack[ 8]: 66, 3, 239, -55, 33, 5, 101, M<let>
[20210409144645] 4879  TRACE  : (34)      sortslice.ego  27: MakeArray       7              stack[ 9]: T(int), 66, 3, 239, -55, 33, 5, 101, M<let>
[20210409144645] 4880  TRACE  : (34)      sortslice.ego  28: SymbolCreate    "a"            stack[ 2]: [101, 5, 33, -55, 239, 3, 66], M<let>
[20210409144645] 4881  TRACE  : (34)      sortslice.ego  29: Store           "a"            stack[ 2]: [101, 5, 33, -55, 239, 3, 66], M<let>
[20210409144645] 4882  TRACE  : (34)      sortslice.ego  30: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 4883  TRACE  : (34)      sortslice.ego  31: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4884  TRACE  : (34)      sortslice.ego  32: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 4885  TRACE  : (34)      sortslice.ego  33: Load            "sort"         stack[ 1]: M<call>
[20210409144645] 4886  TRACE  : (34)      sortslice.ego  34: SetThis                        stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 4887  TRACE  : (34)      sortslice.ego  35: Member          "Slice"        stack[ 2]: Pkg< Floats: functions.SortFloats(), Ints: functio...
[20210409144645] 4888  TRACE  : (34)      sortslice.ego  36: Load            "a"            stack[ 2]: runtime.sortSlice(), M<call>
[20210409144645] 4889  TRACE  : (34)      sortslice.ego  37: Push            <anon>()       stack[ 3]: [101, 5, 33, -55, 239, 3, 66], runtime.sortSlice()...
[20210409144645] 4890  TRACE  : (34)      sortslice.ego  38: Call            2              stack[ 4]: <anon>(), [101, 5, 33, -55, 239, 3, 66], runtime.s...
[20210409144645] 4891  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 4892  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 4893  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4894  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [6, 0]
[20210409144645] 4895  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 6
[20210409144645] 4896  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 6
[20210409144645] 4897  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4898  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [6, 0]
[20210409144645] 4899  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 0
[20210409144645] 4900  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 0
[20210409144645] 4901  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4902  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 4903  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4904  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 4905  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [101, 5, 33, -55, 239, 3, 66]
[20210409144645] 4906  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 6, [101, 5, 33, -55, 239, 3, 66]
[20210409144645] 4907  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 66
[20210409144645] 4908  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [101, 5, 33, -55, 239, 3, 66], 66
[20210409144645] 4909  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 0, [101, 5, 33, -55, 239, 3, 66], 66
[20210409144645] 4910  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 101, 66
[20210409144645] 4911  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 4912  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 4913  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 4914  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 4915  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 4916  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4917  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [1, 0]
[20210409144645] 4918  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 4919  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 1
[20210409144645] 4920  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4921  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [1, 0]
[20210409144645] 4922  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 0
[20210409144645] 4923  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 0
[20210409144645] 4924  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4925  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 4926  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4927  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 4928  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [66, 5, 33, -55, 239, 3, 101]
[20210409144645] 4929  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 1, [66, 5, 33, -55, 239, 3, 101]
[20210409144645] 4930  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 5
[20210409144645] 4931  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [66, 5, 33, -55, 239, 3, 101], 5
[20210409144645] 4932  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 0, [66, 5, 33, -55, 239, 3, 101], 5
[20210409144645] 4933  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, 5
[20210409144645] 4934  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 4935  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 4936  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 4937  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 4938  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 4939  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4940  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [2, 1]
[20210409144645] 4941  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 2
[20210409144645] 4942  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 2
[20210409144645] 4943  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4944  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [2, 1]
[20210409144645] 4945  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 4946  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 1
[20210409144645] 4947  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4948  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 4949  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4950  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 4951  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [5, 66, 33, -55, 239, 3, 101]
[20210409144645] 4952  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 2, [5, 66, 33, -55, 239, 3, 101]
[20210409144645] 4953  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 33
[20210409144645] 4954  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [5, 66, 33, -55, 239, 3, 101], 33
[20210409144645] 4955  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 1, [5, 66, 33, -55, 239, 3, 101], 33
[20210409144645] 4956  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, 33
[20210409144645] 4957  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 4958  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 4959  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 4960  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 4961  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 4962  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4963  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [1, 0]
[20210409144645] 4964  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 4965  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 1
[20210409144645] 4966  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4967  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [1, 0]
[20210409144645] 4968  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 0
[20210409144645] 4969  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 0
[20210409144645] 4970  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4971  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 4972  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4973  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 4974  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [5, 33, 66, -55, 239, 3, 101]
[20210409144645] 4975  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 1, [5, 33, 66, -55, 239, 3, 101]
[20210409144645] 4976  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 33
[20210409144645] 4977  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [5, 33, 66, -55, 239, 3, 101], 33
[20210409144645] 4978  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 0, [5, 33, 66, -55, 239, 3, 101], 33
[20210409144645] 4979  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 5, 33
[20210409144645] 4980  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: false
[20210409144645] 4981  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: false
[20210409144645] 4982  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 4983  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 4984  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 4985  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4986  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [3, 2]
[20210409144645] 4987  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 3
[20210409144645] 4988  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 3
[20210409144645] 4989  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 4990  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [3, 2]
[20210409144645] 4991  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 2
[20210409144645] 4992  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 2
[20210409144645] 4993  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 4994  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 4995  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 4996  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 4997  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [5, 33, 66, -55, 239, 3, 101]
[20210409144645] 4998  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 3, [5, 33, 66, -55, 239, 3, 101]
[20210409144645] 4999  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: -55
[20210409144645] 5000  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [5, 33, 66, -55, 239, 3, 101], -55
[20210409144645] 5001  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 2, [5, 33, 66, -55, 239, 3, 101], -55
[20210409144645] 5002  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, -55
[20210409144645] 5003  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5004  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5005  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5006  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5007  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5008  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5009  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [2, 1]
[20210409144645] 5010  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 2
[20210409144645] 5011  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 2
[20210409144645] 5012  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5013  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [2, 1]
[20210409144645] 5014  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 5015  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 1
[20210409144645] 5016  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5017  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5018  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5019  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5020  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [5, 33, -55, 66, 239, 3, 101]
[20210409144645] 5021  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 2, [5, 33, -55, 66, 239, 3, 101]
[20210409144645] 5022  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: -55
[20210409144645] 5023  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [5, 33, -55, 66, 239, 3, 101], -55
[20210409144645] 5024  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 1, [5, 33, -55, 66, 239, 3, 101], -55
[20210409144645] 5025  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 33, -55
[20210409144645] 5026  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5027  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5028  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5029  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5030  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5031  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5032  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [1, 0]
[20210409144645] 5033  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 5034  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 1
[20210409144645] 5035  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5036  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [1, 0]
[20210409144645] 5037  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 0
[20210409144645] 5038  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 0
[20210409144645] 5039  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5040  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5041  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5042  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5043  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [5, -55, 33, 66, 239, 3, 101]
[20210409144645] 5044  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 1, [5, -55, 33, 66, 239, 3, 101]
[20210409144645] 5045  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: -55
[20210409144645] 5046  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [5, -55, 33, 66, 239, 3, 101], -55
[20210409144645] 5047  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 0, [5, -55, 33, 66, 239, 3, 101], -55
[20210409144645] 5048  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 5, -55
[20210409144645] 5049  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5050  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5051  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5052  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5053  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5054  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5055  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [4, 3]
[20210409144645] 5056  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 4
[20210409144645] 5057  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 4
[20210409144645] 5058  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5059  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [4, 3]
[20210409144645] 5060  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 3
[20210409144645] 5061  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 3
[20210409144645] 5062  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5063  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5064  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5065  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5066  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 5, 33, 66, 239, 3, 101]
[20210409144645] 5067  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 4, [-55, 5, 33, 66, 239, 3, 101]
[20210409144645] 5068  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 239
[20210409144645] 5069  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 5, 33, 66, 239, 3, 101], 239
[20210409144645] 5070  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 3, [-55, 5, 33, 66, 239, 3, 101], 239
[20210409144645] 5071  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, 239
[20210409144645] 5072  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: false
[20210409144645] 5073  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: false
[20210409144645] 5074  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5075  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5076  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5077  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5078  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [5, 4]
[20210409144645] 5079  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 5
[20210409144645] 5080  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 5
[20210409144645] 5081  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5082  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [5, 4]
[20210409144645] 5083  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 4
[20210409144645] 5084  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 4
[20210409144645] 5085  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5086  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5087  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5088  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5089  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 5, 33, 66, 239, 3, 101]
[20210409144645] 5090  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 5, [-55, 5, 33, 66, 239, 3, 101]
[20210409144645] 5091  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 3
[20210409144645] 5092  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 5, 33, 66, 239, 3, 101], 3
[20210409144645] 5093  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 4, [-55, 5, 33, 66, 239, 3, 101], 3
[20210409144645] 5094  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 239, 3
[20210409144645] 5095  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5096  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5097  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5098  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5099  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5100  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5101  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [4, 3]
[20210409144645] 5102  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 4
[20210409144645] 5103  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 4
[20210409144645] 5104  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5105  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [4, 3]
[20210409144645] 5106  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 3
[20210409144645] 5107  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 3
[20210409144645] 5108  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5109  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5110  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5111  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5112  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 5, 33, 66, 3, 239, 101]
[20210409144645] 5113  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 4, [-55, 5, 33, 66, 3, 239, 101]
[20210409144645] 5114  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 3
[20210409144645] 5115  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 5, 33, 66, 3, 239, 101], 3
[20210409144645] 5116  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 3, [-55, 5, 33, 66, 3, 239, 101], 3
[20210409144645] 5117  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, 3
[20210409144645] 5118  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5119  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5120  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5121  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5122  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5123  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5124  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [3, 2]
[20210409144645] 5125  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 3
[20210409144645] 5126  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 3
[20210409144645] 5127  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5128  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [3, 2]
[20210409144645] 5129  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 2
[20210409144645] 5130  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 2
[20210409144645] 5131  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5132  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5133  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5134  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5135  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 5, 33, 3, 66, 239, 101]
[20210409144645] 5136  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 3, [-55, 5, 33, 3, 66, 239, 101]
[20210409144645] 5137  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 3
[20210409144645] 5138  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 5, 33, 3, 66, 239, 101], 3
[20210409144645] 5139  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 2, [-55, 5, 33, 3, 66, 239, 101], 3
[20210409144645] 5140  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 33, 3
[20210409144645] 5141  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5142  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5143  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5144  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5145  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5146  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5147  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [2, 1]
[20210409144645] 5148  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 2
[20210409144645] 5149  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 2
[20210409144645] 5150  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5151  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [2, 1]
[20210409144645] 5152  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 5153  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 1
[20210409144645] 5154  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5155  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5156  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5157  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5158  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 5, 3, 33, 66, 239, 101]
[20210409144645] 5159  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 2, [-55, 5, 3, 33, 66, 239, 101]
[20210409144645] 5160  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 3
[20210409144645] 5161  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 5, 3, 33, 66, 239, 101], 3
[20210409144645] 5162  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 1, [-55, 5, 3, 33, 66, 239, 101], 3
[20210409144645] 5163  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 5, 3
[20210409144645] 5164  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5165  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5166  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5167  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5168  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5169  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5170  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [1, 0]
[20210409144645] 5171  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 1
[20210409144645] 5172  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 1
[20210409144645] 5173  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5174  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [1, 0]
[20210409144645] 5175  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 0
[20210409144645] 5176  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 0
[20210409144645] 5177  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5178  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5179  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5180  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5181  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 3, 5, 33, 66, 239, 101]
[20210409144645] 5182  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 1, [-55, 3, 5, 33, 66, 239, 101]
[20210409144645] 5183  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 3
[20210409144645] 5184  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 3, 5, 33, 66, 239, 101], 3
[20210409144645] 5185  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 0, [-55, 3, 5, 33, 66, 239, 101], 3
[20210409144645] 5186  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: -55, 3
[20210409144645] 5187  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: false
[20210409144645] 5188  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: false
[20210409144645] 5189  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5190  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5191  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5192  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5193  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [6, 5]
[20210409144645] 5194  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 6
[20210409144645] 5195  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 6
[20210409144645] 5196  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5197  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [6, 5]
[20210409144645] 5198  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 5
[20210409144645] 5199  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 5
[20210409144645] 5200  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5201  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5202  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5203  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5204  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 3, 5, 33, 66, 239, 101]
[20210409144645] 5205  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 6, [-55, 3, 5, 33, 66, 239, 101]
[20210409144645] 5206  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 101
[20210409144645] 5207  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 3, 5, 33, 66, 239, 101], 101
[20210409144645] 5208  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 5, [-55, 3, 5, 33, 66, 239, 101], 101
[20210409144645] 5209  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 239, 101
[20210409144645] 5210  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: true
[20210409144645] 5211  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: true
[20210409144645] 5212  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5213  TRACE  : *** Tracing <anon> (35)  
[20210409144645] 5214  TRACE  : (35)             <anon>   0: ArgCheck        [2 2 ]         stack[ 0]: <empty>
[20210409144645] 5215  TRACE  : (35)             <anon>   1: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5216  TRACE  : (35)             <anon>   2: LoadIndex       0              stack[ 1]: [5, 4]
[20210409144645] 5217  TRACE  : (35)             <anon>   3: RequiredType    T(int)         stack[ 1]: 5
[20210409144645] 5218  TRACE  : (35)             <anon>   4: StoreAlways     "i"            stack[ 1]: 5
[20210409144645] 5219  TRACE  : (35)             <anon>   5: Load            "__args"       stack[ 0]: <empty>
[20210409144645] 5220  TRACE  : (35)             <anon>   6: LoadIndex       1              stack[ 1]: [5, 4]
[20210409144645] 5221  TRACE  : (35)             <anon>   7: RequiredType    T(int)         stack[ 1]: 4
[20210409144645] 5222  TRACE  : (35)             <anon>   8: StoreAlways     "j"            stack[ 1]: 4
[20210409144645] 5223  TRACE  : (35)             <anon>   9: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5224  TRACE  : (35)             <anon>  10: PushScope                      stack[ 0]: <empty>
[20210409144645] 5225  TRACE  : (35)             <anon>  11: AtLine          7              stack[ 0]: <empty>
[20210409144645] 5226  TRACE  : (35)             <anon>  12: Load            "a"            stack[ 0]: <empty>
[20210409144645] 5227  TRACE  : (35)             <anon>  13: Load            "i"            stack[ 1]: [-55, 3, 5, 33, 66, 101, 239]
[20210409144645] 5228  TRACE  : (35)             <anon>  14: LoadIndex                      stack[ 2]: 5, [-55, 3, 5, 33, 66, 101, 239]
[20210409144645] 5229  TRACE  : (35)             <anon>  15: Load            "a"            stack[ 1]: 101
[20210409144645] 5230  TRACE  : (35)             <anon>  16: Load            "j"            stack[ 2]: [-55, 3, 5, 33, 66, 101, 239], 101
[20210409144645] 5231  TRACE  : (35)             <anon>  17: LoadIndex                      stack[ 3]: 4, [-55, 3, 5, 33, 66, 101, 239], 101
[20210409144645] 5232  TRACE  : (35)             <anon>  18: LT                             stack[ 2]: 66, 101
[20210409144645] 5233  TRACE  : (35)             <anon>  19: Coerce          T(bool)        stack[ 1]: false
[20210409144645] 5234  TRACE  : (35)             <anon>  20: Return          true           stack[ 1]: false
[20210409144645] 5235  TRACE  : *** End tracing <anon> (35) 
[20210409144645] 5236  TRACE  : (34)      sortslice.ego  39: DropToMarker    M<call>        stack[ 2]: [-55, 3, 5, 33, 66, 101, 239], M<call>
[20210409144645] 5237  TRACE  : (34)      sortslice.ego  40: AtLine          10             stack[ 0]: <empty>
[20210409144645] 5238  TRACE  : (34)      sortslice.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5239  TRACE  : (34)      sortslice.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5240  TRACE  : (34)      sortslice.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5241  TRACE  : (34)      sortslice.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "functions: sort.Slice()" },...
[20210409144645] 5242  TRACE  : (34)      sortslice.ego  45: Load            "a"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5243  TRACE  : (34)      sortslice.ego  46: Push            0              stack[ 3]: [-55, 3, 5, 33, 66, 101, 239], compiler.TestAssert...
[20210409144645] 5244  TRACE  : (34)      sortslice.ego  47: LoadIndex                      stack[ 4]: 0, [-55, 3, 5, 33, 66, 101, 239], compiler.TestAss...
[20210409144645] 5245  TRACE  : (34)      sortslice.ego  48: Push            -55            stack[ 3]: -55, compiler.TestAssert(), M<assert>
[20210409144645] 5246  TRACE  : (34)      sortslice.ego  49: Equal                          stack[ 4]: -55, -55, compiler.TestAssert(), M<assert>
[20210409144645] 5247  TRACE  : (34)      sortslice.ego  50: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 5248  TRACE  : (34)      sortslice.ego  51: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5249  TRACE  : (34)      sortslice.ego  52: AtLine          11             stack[ 0]: <empty>
[20210409144645] 5250  TRACE  : (34)      sortslice.ego  53: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5251  TRACE  : (34)      sortslice.ego  54: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5252  TRACE  : (34)      sortslice.ego  55: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5253  TRACE  : (34)      sortslice.ego  56: Member          "assert"       stack[ 2]: Testing{ description: "functions: sort.Slice()" },...
[20210409144645] 5254  TRACE  : (34)      sortslice.ego  57: Load            "a"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5255  TRACE  : (34)      sortslice.ego  58: Push            1              stack[ 3]: [-55, 3, 5, 33, 66, 101, 239], compiler.TestAssert...
[20210409144645] 5256  TRACE  : (34)      sortslice.ego  59: LoadIndex                      stack[ 4]: 1, [-55, 3, 5, 33, 66, 101, 239], compiler.TestAss...
[20210409144645] 5257  TRACE  : (34)      sortslice.ego  60: Push            3              stack[ 3]: 3, compiler.TestAssert(), M<assert>
[20210409144645] 5258  TRACE  : (34)      sortslice.ego  61: Equal                          stack[ 4]: 3, 3, compiler.TestAssert(), M<assert>
[20210409144645] 5259  TRACE  : (34)      sortslice.ego  62: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 5260  TRACE  : (34)      sortslice.ego  63: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5261  TRACE  : (34)      sortslice.ego  64: AtLine          12             stack[ 0]: <empty>
[20210409144645] 5262  TRACE  : (34)      sortslice.ego  65: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5263  TRACE  : (34)      sortslice.ego  66: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5264  TRACE  : (34)      sortslice.ego  67: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5265  TRACE  : (34)      sortslice.ego  68: Member          "assert"       stack[ 2]: Testing{ description: "functions: sort.Slice()" },...
[20210409144645] 5266  TRACE  : (34)      sortslice.ego  69: Load            "a"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5267  TRACE  : (34)      sortslice.ego  70: Push            6              stack[ 3]: [-55, 3, 5, 33, 66, 101, 239], compiler.TestAssert...
[20210409144645] 5268  TRACE  : (34)      sortslice.ego  71: LoadIndex                      stack[ 4]: 6, [-55, 3, 5, 33, 66, 101, 239], compiler.TestAss...
[20210409144645] 5269  TRACE  : (34)      sortslice.ego  72: Push            239            stack[ 3]: 239, compiler.TestAssert(), M<assert>
[20210409144645] 5270  TRACE  : (34)      sortslice.ego  73: Equal                          stack[ 4]: 239, 239, compiler.TestAssert(), M<assert>
[20210409144645] 5271  TRACE  : (34)      sortslice.ego  74: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 5272  TRACE  : (34)      sortslice.ego  75: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5273  TRACE  : (34)      sortslice.ego  76: AtLine          13             stack[ 0]: <empty>
[20210409144645] 5274  TRACE  : (34)      sortslice.ego  77: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5275  TRACE  : (34)      sortslice.ego  78: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5276  TRACE  : (34)      sortslice.ego  79: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5277  TRACE  : (34)      sortslice.ego  80: Member          "assert"       stack[ 2]: Testing{ description: "functions: sort.Slice()" },...
[20210409144645] 5278  TRACE  : (34)      sortslice.ego  81: Load            "len"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5279  TRACE  : (34)      sortslice.ego  82: Load            "a"            stack[ 3]: functions.Length(), compiler.TestAssert(), M<asser...
[20210409144645] 5280  TRACE  : (34)      sortslice.ego  83: Call            1              stack[ 4]: [-55, 3, 5, 33, 66, 101, 239], functions.Length(),...
[20210409144645] 5281  TRACE  : (34)      sortslice.ego  84: Push            7              stack[ 3]: 7, compiler.TestAssert(), M<assert>
[20210409144645] 5282  TRACE  : (34)      sortslice.ego  85: Equal                          stack[ 4]: 7, 7, compiler.TestAssert(), M<assert>
[20210409144645] 5283  TRACE  : (34)      sortslice.ego  86: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 5284  TRACE  : (34)      sortslice.ego  87: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5285  TRACE  : (34)      sortslice.ego  88: PopScope                       stack[ 0]: <empty>
[20210409144645] 5286  TRACE  : (34)      sortslice.ego  89: AtLine          15             stack[ 0]: <empty>
[20210409144645] 5287  TRACE  : (34)      sortslice.ego  90: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5288  TRACE  : (34)      sortslice.ego  91: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 5289  TRACE  : (34)      sortslice.ego  92: Print                          stack[ 1]: (PASS)  
[20210409144645] 5290  TRACE  : (34)      sortslice.ego  93: Timer           1              stack[ 0]: <empty>
[20210409144645] 5291  TRACE  : (34)      sortslice.ego  94: Print                          stack[ 1]: 0.002s
[20210409144645] 5292  TRACE  : (34)      sortslice.ego  95: Say             true           stack[ 0]: <empty>
TEST: functions: sort.Slice()                           (PASS)  0.002s
[20210409144645] 5293  TRACE  : (34)      sortslice.ego  96: Stop                           stack[ 0]: <empty>
[20210409144645] 5294  TRACE  : *** Tracing time.ego (36)  
[20210409144645] 5295  TRACE  : (36)           time.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 5296  TRACE  : (36)           time.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5297  TRACE  : (36)           time.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 5298  TRACE  : (36)           time.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5299  TRACE  : (36)           time.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5300  TRACE  : (36)           time.ego   5: Push            Testing{ description: "functions: time functions" } stack[ 0]: <empty>
[20210409144645] 5301  TRACE  : (36)           time.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: time functions" ...
[20210409144645] 5302  TRACE  : (36)           time.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 5303  TRACE  : (36)           time.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 5304  TRACE  : (36)           time.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 5305  TRACE  : (36)           time.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: time functions" ...
[20210409144645] 5306  TRACE  : (36)           time.ego  11: Print                          stack[ 1]: functions: time functions
[20210409144645] 5307  TRACE  : (36)           time.ego  12: Push            "                         " stack[ 0]: <empty>
[20210409144645] 5308  TRACE  : (36)           time.ego  13: Print                          stack[ 1]:                          
[20210409144645] 5309  TRACE  : (36)           time.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 5310  TRACE  : (36)           time.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 5311  TRACE  : (36)           time.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 5312  TRACE  : (36)           time.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 5313  TRACE  : (36)           time.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5314  TRACE  : (36)           time.ego  19: Push            "Jan 2 15:04:05 MST 2006" stack[ 1]: M<let>
[20210409144645] 5315  TRACE  : (36)           time.ego  20: SymbolCreate    "pattern"      stack[ 2]: Jan 2 15:04:05 MST 2006, M<let>
[20210409144645] 5316  TRACE  : (36)           time.ego  21: Store           "pattern"      stack[ 2]: Jan 2 15:04:05 MST 2006, M<let>
[20210409144645] 5317  TRACE  : (36)           time.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5318  TRACE  : (36)           time.ego  23: AtLine          5              stack[ 0]: <empty>
[20210409144645] 5319  TRACE  : (36)           time.ego  24: Load            "time"         stack[ 0]: <empty>
[20210409144645] 5320  TRACE  : (36)           time.ego  25: SetThis                        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5321  TRACE  : (36)           time.ego  26: Member          "Parse"        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5322  TRACE  : (36)           time.ego  27: Push            "Jan 11 10:15:01 EST 2021" stack[ 1]: functions.TimeParse()
[20210409144645] 5323  TRACE  : (36)           time.ego  28: Load            "pattern"      stack[ 2]: Jan 11 10:15:01 EST 2021, functions.TimeParse()
[20210409144645] 5324  TRACE  : (36)           time.ego  29: Call            2              stack[ 3]: Jan 2 15:04:05 MST 2006, Jan 11 10:15:01 EST 2021,...
[20210409144645] 5325  TRACE  : (36)           time.ego  30: StackCheck      2              stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5326  TRACE  : (36)           time.ego  31: SymbolOptCreate "t1"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5327  TRACE  : (36)           time.ego  32: Store           "t1"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5328  TRACE  : (36)           time.ego  33: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5329  TRACE  : (36)           time.ego  34: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5330  TRACE  : (36)           time.ego  35: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5331  TRACE  : (36)           time.ego  36: AtLine          6              stack[ 0]: <empty>
[20210409144645] 5332  TRACE  : (36)           time.ego  37: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5333  TRACE  : (36)           time.ego  38: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5334  TRACE  : (36)           time.ego  39: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5335  TRACE  : (36)           time.ego  40: Member          "assert"       stack[ 2]: Testing{ description: "functions: time functions" ...
[20210409144645] 5336  TRACE  : (36)           time.ego  41: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5337  TRACE  : (36)           time.ego  42: SetThis                        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5338  TRACE  : (36)           time.ego  43: Member          "Equal"        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5339  TRACE  : (36)           time.ego  44: Load            "t1"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5340  TRACE  : (36)           time.ego  45: SetThis                        stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5341  TRACE  : (36)           time.ego  46: Member          "String"       stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5342  TRACE  : (36)           time.ego  47: Call            0              stack[ 4]: functions.TimeString(), compiler.TestEqual(), comp...
[20210409144645] 5343  TRACE  : (36)           time.ego  48: Push            "Mon Jan 11 10:15:01 EST 2021" stack[ 4]: Mon Jan 11 10:15:01 EST 2021, compiler.TestEqual()...
[20210409144645] 5344  TRACE  : (36)           time.ego  49: Push            "Time parse error" stack[ 5]: Mon Jan 11 10:15:01 EST 2021, Mon Jan 11 10:15:01 ...
[20210409144645] 5345  TRACE  : (36)           time.ego  50: Call            3              stack[ 6]: Time parse error, Mon Jan 11 10:15:01 EST 2021, Mo...
[20210409144645] 5346  TRACE  : (36)           time.ego  51: Call            1              stack[ 3]: [true Time parse error], compiler.TestAssert(), M<...
[20210409144645] 5347  TRACE  : (36)           time.ego  52: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5348  TRACE  : (36)           time.ego  53: AtLine          8              stack[ 0]: <empty>
[20210409144645] 5349  TRACE  : (36)           time.ego  54: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5350  TRACE  : (36)           time.ego  55: Load            "t1"           stack[ 1]: M<let>
[20210409144645] 5351  TRACE  : (36)           time.ego  56: SetThis                        stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 5352  TRACE  : (36)           time.ego  57: Member          "Add"          stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 5353  TRACE  : (36)           time.ego  58: Push            "2h"           stack[ 2]: functions.TimeAdd(), M<let>
[20210409144645] 5354  TRACE  : (36)           time.ego  59: Call            1              stack[ 3]: 2h, functions.TimeAdd(), M<let>
[20210409144645] 5355  TRACE  : (36)           time.ego  60: SymbolCreate    "t2"           stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 5356  TRACE  : (36)           time.ego  61: Store           "t2"           stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 5357  TRACE  : (36)           time.ego  62: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5358  TRACE  : (36)           time.ego  63: AtLine          9              stack[ 0]: <empty>
[20210409144645] 5359  TRACE  : (36)           time.ego  64: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5360  TRACE  : (36)           time.ego  65: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5361  TRACE  : (36)           time.ego  66: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5362  TRACE  : (36)           time.ego  67: Member          "assert"       stack[ 2]: Testing{ description: "functions: time functions" ...
[20210409144645] 5363  TRACE  : (36)           time.ego  68: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5364  TRACE  : (36)           time.ego  69: SetThis                        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5365  TRACE  : (36)           time.ego  70: Member          "Equal"        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5366  TRACE  : (36)           time.ego  71: Load            "t2"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5367  TRACE  : (36)           time.ego  72: SetThis                        stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5368  TRACE  : (36)           time.ego  73: Member          "String"       stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5369  TRACE  : (36)           time.ego  74: Call            0              stack[ 4]: functions.TimeString(), compiler.TestEqual(), comp...
[20210409144645] 5370  TRACE  : (36)           time.ego  75: Push            "Mon Jan 11 12:15:01 EST 2021" stack[ 4]: Mon Jan 11 12:15:01 EST 2021, compiler.TestEqual()...
[20210409144645] 5371  TRACE  : (36)           time.ego  76: Push            "Time add error" stack[ 5]: Mon Jan 11 12:15:01 EST 2021, Mon Jan 11 12:15:01 ...
[20210409144645] 5372  TRACE  : (36)           time.ego  77: Call            3              stack[ 6]: Time add error, Mon Jan 11 12:15:01 EST 2021, Mon ...
[20210409144645] 5373  TRACE  : (36)           time.ego  78: Call            1              stack[ 3]: [true Time add error], compiler.TestAssert(), M<as...
[20210409144645] 5374  TRACE  : (36)           time.ego  79: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5375  TRACE  : (36)           time.ego  80: AtLine          11             stack[ 0]: <empty>
[20210409144645] 5376  TRACE  : (36)           time.ego  81: Load            "time"         stack[ 0]: <empty>
[20210409144645] 5377  TRACE  : (36)           time.ego  82: SetThis                        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5378  TRACE  : (36)           time.ego  83: Member          "Parse"        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5379  TRACE  : (36)           time.ego  84: Push            "Jan 11 10:15:01 EST 2021" stack[ 1]: functions.TimeParse()
[20210409144645] 5380  TRACE  : (36)           time.ego  85: Load            "pattern"      stack[ 2]: Jan 11 10:15:01 EST 2021, functions.TimeParse()
[20210409144645] 5381  TRACE  : (36)           time.ego  86: Call            2              stack[ 3]: Jan 2 15:04:05 MST 2006, Jan 11 10:15:01 EST 2021,...
[20210409144645] 5382  TRACE  : (36)           time.ego  87: StackCheck      2              stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5383  TRACE  : (36)           time.ego  88: SymbolOptCreate "t3"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5384  TRACE  : (36)           time.ego  89: Store           "t3"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5385  TRACE  : (36)           time.ego  90: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5386  TRACE  : (36)           time.ego  91: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5387  TRACE  : (36)           time.ego  92: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5388  TRACE  : (36)           time.ego  93: AtLine          12             stack[ 0]: <empty>
[20210409144645] 5389  TRACE  : (36)           time.ego  94: Load            "time"         stack[ 0]: <empty>
[20210409144645] 5390  TRACE  : (36)           time.ego  95: SetThis                        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5391  TRACE  : (36)           time.ego  96: Member          "Parse"        stack[ 1]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 5392  TRACE  : (36)           time.ego  97: Push            "Jan 11 10:15:02 EST 2021" stack[ 1]: functions.TimeParse()
[20210409144645] 5393  TRACE  : (36)           time.ego  98: Load            "pattern"      stack[ 2]: Jan 11 10:15:02 EST 2021, functions.TimeParse()
[20210409144645] 5394  TRACE  : (36)           time.ego  99: Call            2              stack[ 3]: Jan 2 15:04:05 MST 2006, Jan 11 10:15:02 EST 2021,...
[20210409144645] 5395  TRACE  : (36)           time.ego 100: StackCheck      2              stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5396  TRACE  : (36)           time.ego 101: SymbolOptCreate "t4"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5397  TRACE  : (36)           time.ego 102: Store           "t4"           stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 5398  TRACE  : (36)           time.ego 103: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5399  TRACE  : (36)           time.ego 104: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5400  TRACE  : (36)           time.ego 105: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5401  TRACE  : (36)           time.ego 106: AtLine          13             stack[ 0]: <empty>
[20210409144645] 5402  TRACE  : (36)           time.ego 107: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5403  TRACE  : (36)           time.ego 108: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5404  TRACE  : (36)           time.ego 109: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5405  TRACE  : (36)           time.ego 110: Member          "assert"       stack[ 2]: Testing{ description: "functions: time functions" ...
[20210409144645] 5406  TRACE  : (36)           time.ego 111: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5407  TRACE  : (36)           time.ego 112: SetThis                        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5408  TRACE  : (36)           time.ego 113: Member          "Equal"        stack[ 3]: Testing{ description: "functions: time functions" ...
[20210409144645] 5409  TRACE  : (36)           time.ego 114: Load            "t4"           stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5410  TRACE  : (36)           time.ego 115: SetThis                        stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5411  TRACE  : (36)           time.ego 116: Member          "Sub"          stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 5412  TRACE  : (36)           time.ego 117: Load            "t3"           stack[ 4]: functions.TimeSub(), compiler.TestEqual(), compile...
[20210409144645] 5413  TRACE  : (36)           time.ego 118: Call            1              stack[ 5]: time.Time{ time: ptr <*time.Time Value> }, functio...
[20210409144645] 5414  TRACE  : (36)           time.ego 119: Push            "1s"           stack[ 4]: 1s, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 5415  TRACE  : (36)           time.ego 120: Push            "Time sub error" stack[ 5]: 1s, 1s, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 5416  TRACE  : (36)           time.ego 121: Call            3              stack[ 6]: Time sub error, 1s, 1s, compiler.TestEqual(), comp...
[20210409144645] 5417  TRACE  : (36)           time.ego 122: Call            1              stack[ 3]: [true Time sub error], compiler.TestAssert(), M<as...
[20210409144645] 5418  TRACE  : (36)           time.ego 123: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5419  TRACE  : (36)           time.ego 124: PopScope                       stack[ 0]: <empty>
[20210409144645] 5420  TRACE  : (36)           time.ego 125: AtLine          16             stack[ 0]: <empty>
[20210409144645] 5421  TRACE  : (36)           time.ego 126: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5422  TRACE  : (36)           time.ego 127: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 5423  TRACE  : (36)           time.ego 128: Print                          stack[ 1]: (PASS)  
[20210409144645] 5424  TRACE  : (36)           time.ego 129: Timer           1              stack[ 0]: <empty>
[20210409144645] 5425  TRACE  : (36)           time.ego 130: Print                          stack[ 1]: 0.900ms
[20210409144645] 5426  TRACE  : (36)           time.ego 131: Say             true           stack[ 0]: <empty>
TEST: functions: time functions                         (PASS)  0.900ms
[20210409144645] 5427  TRACE  : (36)           time.ego 132: Stop                           stack[ 0]: <empty>
[20210409144645] 5428  TRACE  : *** Tracing vararg_parms.ego (37)  
[20210409144645] 5429  TRACE  : (37)   vararg_parms.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 5430  TRACE  : (37)   vararg_parms.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5431  TRACE  : (37)   vararg_parms.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 5432  TRACE  : (37)   vararg_parms.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5433  TRACE  : (37)   vararg_parms.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5434  TRACE  : (37)   vararg_parms.ego   5: Push            Testing{ description: "functions: varargs in function definition" } stack[ 0]: <empty>
[20210409144645] 5435  TRACE  : (37)   vararg_parms.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "functions: varargs in funct...
[20210409144645] 5436  TRACE  : (37)   vararg_parms.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 5437  TRACE  : (37)   vararg_parms.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 5438  TRACE  : (37)   vararg_parms.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 5439  TRACE  : (37)   vararg_parms.ego  10: Member          "description"  stack[ 1]: Testing{ description: "functions: varargs in funct...
[20210409144645] 5440  TRACE  : (37)   vararg_parms.ego  11: Print                          stack[ 1]: functions: varargs in function definition
[20210409144645] 5441  TRACE  : (37)   vararg_parms.ego  12: Push            "         "    stack[ 0]: <empty>
[20210409144645] 5442  TRACE  : (37)   vararg_parms.ego  13: Print                          stack[ 1]:          
[20210409144645] 5443  TRACE  : (37)   vararg_parms.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 5444  TRACE  : (37)   vararg_parms.ego  15: Push            testf()        stack[ 0]: <empty>
[20210409144645] 5445  TRACE  : (37)   vararg_parms.ego  16: StoreAlways     "testf"        stack[ 1]: testf()
[20210409144645] 5446  TRACE  : (37)   vararg_parms.ego  17: AtLine          11             stack[ 0]: <empty>
[20210409144645] 5447  TRACE  : (37)   vararg_parms.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5448  TRACE  : (37)   vararg_parms.ego  19: Load            "testf"        stack[ 1]: M<let>
[20210409144645] 5449  TRACE  : (37)   vararg_parms.ego  20: Push            1              stack[ 2]: testf(), M<let>
[20210409144645] 5450  TRACE  : (37)   vararg_parms.ego  21: Push            2              stack[ 3]: 1, testf(), M<let>
[20210409144645] 5451  TRACE  : (37)   vararg_parms.ego  22: Push            3              stack[ 4]: 2, 1, testf(), M<let>
[20210409144645] 5452  TRACE  : (37)   vararg_parms.ego  23: Call            3              stack[ 5]: 3, 2, 1, testf(), M<let>
[20210409144645] 5453  TRACE  : (37)              testf   0: ArgCheck        [2 -1 testf]   stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5454  TRACE  : (37)              testf   1: Load            "__args"       stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5455  TRACE  : (37)              testf   2: LoadIndex       0              stack[ 3]: [1, 2, 3], F<vararg_parms.ego:11>, M<let>
[20210409144645] 5456  TRACE  : (37)              testf   3: RequiredType    T(int)         stack[ 3]: 1, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5457  TRACE  : (37)              testf   4: StoreAlways     "base"         stack[ 3]: 1, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5458  TRACE  : (37)              testf   5: GetVarArgs      1              stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5459  TRACE  : (37)              testf   6: StoreAlways     "args"         stack[ 3]: [2, 3], F<vararg_parms.ego:11>, M<let>
[20210409144645] 5460  TRACE  : (37)              testf   7: AtLine          3              stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5461  TRACE  : (37)              testf   8: PushScope                      stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5462  TRACE  : (37)              testf   9: AtLine          4              stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5463  TRACE  : (37)              testf  10: Push            M<let>         stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5464  TRACE  : (37)              testf  11: Load            "base"         stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5465  TRACE  : (37)              testf  12: SymbolCreate    "s"            stack[ 4]: 1, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5466  TRACE  : (37)              testf  13: Store           "s"            stack[ 4]: 1, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5467  TRACE  : (37)              testf  14: DropToMarker    M<let>         stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5468  TRACE  : (37)              testf  15: AtLine          5              stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5469  TRACE  : (37)              testf  16: PushScope                      stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5470  TRACE  : (37)              testf  17: Push            M<let>         stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5471  TRACE  : (37)              testf  18: Load            "args"         stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5472  TRACE  : (37)              testf  19: RangeInit       [_ i]          stack[ 4]: [2, 3], M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5473  TRACE  : (37)              testf  20: RangeNext       32             stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5474  TRACE  : (37)              testf  21: AtLine          5              stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5475  TRACE  : (37)              testf  22: PushScope                      stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5476  TRACE  : (37)              testf  23: AtLine          6              stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5477  TRACE  : (37)              testf  24: Push            M<let>         stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5478  TRACE  : (37)              testf  25: Load            "s"            stack[ 4]: M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5479  TRACE  : (37)              testf  26: Load            "i"            stack[ 5]: 1, M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5480  TRACE  : (37)              testf  27: Add                            stack[ 6]: 2, 1, M<let>, M<let>, F<vararg_parms.ego:11>, M<le...
[20210409144645] 5481  TRACE  : (37)              testf  28: Store           "s"            stack[ 5]: 3, M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5482  TRACE  : (37)              testf  29: DropToMarker    M<let>         stack[ 4]: M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5483  TRACE  : (37)              testf  30: PopScope                       stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5484  TRACE  : (37)              testf  31: Branch          @20            stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5485  TRACE  : (37)              testf  20: RangeNext       32             stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5486  TRACE  : (37)              testf  21: AtLine          5              stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5487  TRACE  : (37)              testf  22: PushScope                      stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5488  TRACE  : (37)              testf  23: AtLine          6              stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5489  TRACE  : (37)              testf  24: Push            M<let>         stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5490  TRACE  : (37)              testf  25: Load            "s"            stack[ 4]: M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5491  TRACE  : (37)              testf  26: Load            "i"            stack[ 5]: 3, M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5492  TRACE  : (37)              testf  27: Add                            stack[ 6]: 3, 3, M<let>, M<let>, F<vararg_parms.ego:11>, M<le...
[20210409144645] 5493  TRACE  : (37)              testf  28: Store           "s"            stack[ 5]: 6, M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5494  TRACE  : (37)              testf  29: DropToMarker    M<let>         stack[ 4]: M<let>, M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5495  TRACE  : (37)              testf  30: PopScope                       stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5496  TRACE  : (37)              testf  31: Branch          @20            stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5497  TRACE  : (37)              testf  20: RangeNext       32             stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5498  TRACE  : (37)              testf  32: SymbolDelete    "i"            stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5499  TRACE  : (37)              testf  33: PopScope                       stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5500  TRACE  : (37)              testf  34: DropToMarker                   stack[ 3]: M<let>, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5501  TRACE  : (37)              testf  35: AtLine          8              stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5502  TRACE  : (37)              testf  36: Load            "s"            stack[ 2]: F<vararg_parms.ego:11>, M<let>
[20210409144645] 5503  TRACE  : (37)              testf  37: Coerce          T(int)         stack[ 3]: 6, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5504  TRACE  : (37)              testf  38: Return          true           stack[ 3]: 6, F<vararg_parms.ego:11>, M<let>
[20210409144645] 5505  TRACE  : (37)   vararg_parms.ego  24: SymbolCreate    "got"          stack[ 2]: 6, M<let>
[20210409144645] 5506  TRACE  : (37)   vararg_parms.ego  25: Store           "got"          stack[ 2]: 6, M<let>
[20210409144645] 5507  TRACE  : (37)   vararg_parms.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5508  TRACE  : (37)   vararg_parms.ego  27: AtLine          12             stack[ 0]: <empty>
[20210409144645] 5509  TRACE  : (37)   vararg_parms.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5510  TRACE  : (37)   vararg_parms.ego  29: Load            "math"         stack[ 1]: M<let>
[20210409144645] 5511  TRACE  : (37)   vararg_parms.ego  30: SetThis                        stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 5512  TRACE  : (37)   vararg_parms.ego  31: Member          "Sum"          stack[ 2]: Pkg< Abs: functions.Abs(), Factor: Factor(), Log: ...
[20210409144645] 5513  TRACE  : (37)   vararg_parms.ego  32: Push            1              stack[ 2]: functions.Sum(), M<let>
[20210409144645] 5514  TRACE  : (37)   vararg_parms.ego  33: Push            2              stack[ 3]: 1, functions.Sum(), M<let>
[20210409144645] 5515  TRACE  : (37)   vararg_parms.ego  34: Push            3              stack[ 4]: 2, 1, functions.Sum(), M<let>
[20210409144645] 5516  TRACE  : (37)   vararg_parms.ego  35: Call            3              stack[ 5]: 3, 2, 1, functions.Sum(), M<let>
[20210409144645] 5517  TRACE  : (37)   vararg_parms.ego  36: SymbolCreate    "want"         stack[ 2]: 6, M<let>
[20210409144645] 5518  TRACE  : (37)   vararg_parms.ego  37: Store           "want"         stack[ 2]: 6, M<let>
[20210409144645] 5519  TRACE  : (37)   vararg_parms.ego  38: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5520  TRACE  : (37)   vararg_parms.ego  39: AtLine          14             stack[ 0]: <empty>
[20210409144645] 5521  TRACE  : (37)   vararg_parms.ego  40: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5522  TRACE  : (37)   vararg_parms.ego  41: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5523  TRACE  : (37)   vararg_parms.ego  42: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5524  TRACE  : (37)   vararg_parms.ego  43: Member          "assert"       stack[ 2]: Testing{ description: "functions: varargs in funct...
[20210409144645] 5525  TRACE  : (37)   vararg_parms.ego  44: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5526  TRACE  : (37)   vararg_parms.ego  45: SetThis                        stack[ 3]: Testing{ description: "functions: varargs in funct...
[20210409144645] 5527  TRACE  : (37)   vararg_parms.ego  46: Member          "Equal"        stack[ 3]: Testing{ description: "functions: varargs in funct...
[20210409144645] 5528  TRACE  : (37)   vararg_parms.ego  47: Load            "got"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5529  TRACE  : (37)   vararg_parms.ego  48: Load            "want"         stack[ 4]: 6, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5530  TRACE  : (37)   vararg_parms.ego  49: Push            "incorrect varargs function result returned" stack[ 5]: 6, 6, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5531  TRACE  : (37)   vararg_parms.ego  50: Call            3              stack[ 6]: incorrect varargs function result returned, 6, 6, ...
[20210409144645] 5532  TRACE  : (37)   vararg_parms.ego  51: Call            1              stack[ 3]: [true incorrect varargs function result returned],...
[20210409144645] 5533  TRACE  : (37)   vararg_parms.ego  52: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5534  TRACE  : (37)   vararg_parms.ego  53: AtLine          15             stack[ 0]: <empty>
[20210409144645] 5535  TRACE  : (37)   vararg_parms.ego  54: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5536  TRACE  : (37)   vararg_parms.ego  55: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 5537  TRACE  : (37)   vararg_parms.ego  56: Print                          stack[ 1]: (PASS)  
[20210409144645] 5538  TRACE  : (37)   vararg_parms.ego  57: Timer           1              stack[ 0]: <empty>
[20210409144645] 5539  TRACE  : (37)   vararg_parms.ego  58: Print                          stack[ 1]: 0.710ms
[20210409144645] 5540  TRACE  : (37)   vararg_parms.ego  59: Say             true           stack[ 0]: <empty>
TEST: functions: varargs in function definition         (PASS)  0.710ms
[20210409144645] 5541  TRACE  : (37)   vararg_parms.ego  60: Stop                           stack[ 0]: <empty>
[20210409144645] 5542  TRACE  : *** Tracing db_postgres.ego (38)  
[20210409144645] 5543  TRACE  : (38)    db_postgres.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 5544  TRACE  : (38)    db_postgres.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5545  TRACE  : (38)    db_postgres.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 5546  TRACE  : (38)    db_postgres.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5547  TRACE  : (38)    db_postgres.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 5548  TRACE  : (38)    db_postgres.ego   5: Push            Testing{ description: "io: db using local postgres" } stack[ 0]: <empty>
[20210409144645] 5549  TRACE  : (38)    db_postgres.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: db using local postgres...
[20210409144645] 5550  TRACE  : (38)    db_postgres.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 5551  TRACE  : (38)    db_postgres.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 5552  TRACE  : (38)    db_postgres.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 5553  TRACE  : (38)    db_postgres.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: db using local postgres...
[20210409144645] 5554  TRACE  : (38)    db_postgres.ego  11: Print                          stack[ 1]: io: db using local postgres
[20210409144645] 5555  TRACE  : (38)    db_postgres.ego  12: Push            "                       " stack[ 0]: <empty>
[20210409144645] 5556  TRACE  : (38)    db_postgres.ego  13: Print                          stack[ 1]:                        
[20210409144645] 5557  TRACE  : (38)    db_postgres.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 5558  TRACE  : (38)    db_postgres.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 5559  TRACE  : (38)    db_postgres.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 5560  TRACE  : (38)    db_postgres.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 5561  TRACE  : (38)    db_postgres.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5562  TRACE  : (38)    db_postgres.ego  19: Push            "postgres://tom:secret@homebase.local/tom?sslmode=disable" stack[ 1]: M<let>
[20210409144645] 5563  TRACE  : (38)    db_postgres.ego  20: SymbolCreate    "constr"       stack[ 2]: postgres://tom:secret@homebase.local/tom?sslmode=d...
[20210409144645] 5564  TRACE  : (38)    db_postgres.ego  21: Store           "constr"       stack[ 2]: postgres://tom:secret@homebase.local/tom?sslmode=d...
[20210409144645] 5565  TRACE  : (38)    db_postgres.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5566  TRACE  : (38)    db_postgres.ego  23: AtLine          5              stack[ 0]: <empty>
[20210409144645] 5567  TRACE  : (38)    db_postgres.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5568  TRACE  : (38)    db_postgres.ego  25: Load            "db"           stack[ 1]: M<let>
[20210409144645] 5569  TRACE  : (38)    db_postgres.ego  26: SetThis                        stack[ 2]: Pkg< New: runtime.DBNew() >, M<let>
[20210409144645] 5570  TRACE  : (38)    db_postgres.ego  27: Member          "New"          stack[ 2]: Pkg< New: runtime.DBNew() >, M<let>
[20210409144645] 5571  TRACE  : (38)    db_postgres.ego  28: Load            "constr"       stack[ 2]: runtime.DBNew(), M<let>
[20210409144645] 5572  TRACE  : (38)    db_postgres.ego  29: Call            1              stack[ 3]: postgres://tom:secret@homebase.local/tom?sslmode=d...
[20210409144645] 5573  TRACE  : (38)    db_postgres.ego  30: SymbolCreate    "d"            stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5574  TRACE  : (38)    db_postgres.ego  31: Store           "d"            stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5575  TRACE  : (38)    db_postgres.ego  32: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5576  TRACE  : (38)    db_postgres.ego  33: AtLine          8              stack[ 0]: <empty>
[20210409144645] 5577  TRACE  : (38)    db_postgres.ego  34: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5578  TRACE  : (38)    db_postgres.ego  35: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5579  TRACE  : (38)    db_postgres.ego  36: Member          "Query"        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5580  TRACE  : (38)    db_postgres.ego  37: Push            "select 0 where 1=0" stack[ 1]: runtime.DBQueryRows()
[20210409144645] 5581  TRACE  : (38)    db_postgres.ego  38: Call            1              stack[ 2]: select 0 where 1=0, runtime.DBQueryRows()
[20210409144645] 5582  TRACE  : (38)    db_postgres.ego  39: StackCheck      2              stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 5583  TRACE  : (38)    db_postgres.ego  40: SymbolOptCreate "_"            stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 5584  TRACE  : (38)    db_postgres.ego  41: Store           "_"            stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 5585  TRACE  : (38)    db_postgres.ego  42: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5586  TRACE  : (38)    db_postgres.ego  43: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5587  TRACE  : (38)    db_postgres.ego  44: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5588  TRACE  : (38)    db_postgres.ego  45: AtLine          9              stack[ 0]: <empty>
[20210409144645] 5589  TRACE  : (38)    db_postgres.ego  46: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 5590  TRACE  : (38)    db_postgres.ego  47: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 5591  TRACE  : (38)    db_postgres.ego  48: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 5592  TRACE  : (38)    db_postgres.ego  49: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 5593  TRACE  : (38)    db_postgres.ego  50: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 5594  TRACE  : (38)    db_postgres.ego  51: BranchFalse     @110           stack[ 1]: false
[20210409144645] 5595  TRACE  : (38)    db_postgres.ego 110: AtLine          17             stack[ 0]: <empty>
[20210409144645] 5596  TRACE  : (38)    db_postgres.ego 111: PushScope                      stack[ 0]: <empty>
[20210409144645] 5597  TRACE  : (38)    db_postgres.ego 112: AtLine          20             stack[ 0]: <empty>
[20210409144645] 5598  TRACE  : (38)    db_postgres.ego 113: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5599  TRACE  : (38)    db_postgres.ego 114: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5600  TRACE  : (38)    db_postgres.ego 115: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5601  TRACE  : (38)    db_postgres.ego 116: Push            "drop table if exists members" stack[ 1]: runtime.DBExecute()
[20210409144645] 5602  TRACE  : (38)    db_postgres.ego 117: Call            1              stack[ 2]: drop table if exists members, runtime.DBExecute()
[20210409144645] 5603  TRACE  : (38)    db_postgres.ego 118: StackCheck      2              stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5604  TRACE  : (38)    db_postgres.ego 119: SymbolOptCreate "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5605  TRACE  : (38)    db_postgres.ego 120: Store           "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5606  TRACE  : (38)    db_postgres.ego 121: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5607  TRACE  : (38)    db_postgres.ego 122: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5608  TRACE  : (38)    db_postgres.ego 123: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5609  TRACE  : (38)    db_postgres.ego 124: AtLine          21             stack[ 0]: <empty>
[20210409144645] 5610  TRACE  : (38)    db_postgres.ego 125: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5611  TRACE  : (38)    db_postgres.ego 126: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5612  TRACE  : (38)    db_postgres.ego 127: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5613  TRACE  : (38)    db_postgres.ego 128: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5614  TRACE  : (38)    db_postgres.ego 129: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5615  TRACE  : (38)    db_postgres.ego 130: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5616  TRACE  : (38)    db_postgres.ego 131: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5617  TRACE  : (38)    db_postgres.ego 132: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5618  TRACE  : (38)    db_postgres.ego 133: Push            "drop table failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5619  TRACE  : (38)    db_postgres.ego 134: Call            2              stack[ 5]: drop table failed, <nil>, compiler.TestNil(), comp...
[20210409144645] 5620  TRACE  : (38)    db_postgres.ego 135: Call            1              stack[ 3]: [true drop table failed], compiler.TestAssert(), M...
[20210409144645] 5621  TRACE  : (38)    db_postgres.ego 136: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5622  TRACE  : (38)    db_postgres.ego 137: AtLine          24             stack[ 0]: <empty>
[20210409144645] 5623  TRACE  : (38)    db_postgres.ego 138: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5624  TRACE  : (38)    db_postgres.ego 139: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5625  TRACE  : (38)    db_postgres.ego 140: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5626  TRACE  : (38)    db_postgres.ego 141: Push            "create table members(id integer, name char varying(50))" stack[ 1]: runtime.DBExecute()
[20210409144645] 5627  TRACE  : (38)    db_postgres.ego 142: Call            1              stack[ 2]: create table members(id integer, name char varying...
[20210409144645] 5628  TRACE  : (38)    db_postgres.ego 143: StackCheck      2              stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5629  TRACE  : (38)    db_postgres.ego 144: SymbolOptCreate "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5630  TRACE  : (38)    db_postgres.ego 145: Store           "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 5631  TRACE  : (38)    db_postgres.ego 146: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5632  TRACE  : (38)    db_postgres.ego 147: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5633  TRACE  : (38)    db_postgres.ego 148: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5634  TRACE  : (38)    db_postgres.ego 149: AtLine          25             stack[ 0]: <empty>
[20210409144645] 5635  TRACE  : (38)    db_postgres.ego 150: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5636  TRACE  : (38)    db_postgres.ego 151: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5637  TRACE  : (38)    db_postgres.ego 152: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5638  TRACE  : (38)    db_postgres.ego 153: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5639  TRACE  : (38)    db_postgres.ego 154: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5640  TRACE  : (38)    db_postgres.ego 155: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5641  TRACE  : (38)    db_postgres.ego 156: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5642  TRACE  : (38)    db_postgres.ego 157: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5643  TRACE  : (38)    db_postgres.ego 158: Push            "create table failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5644  TRACE  : (38)    db_postgres.ego 159: Call            2              stack[ 5]: create table failed, <nil>, compiler.TestNil(), co...
[20210409144645] 5645  TRACE  : (38)    db_postgres.ego 160: Call            1              stack[ 3]: [true create table failed], compiler.TestAssert(),...
[20210409144645] 5646  TRACE  : (38)    db_postgres.ego 161: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5647  TRACE  : (38)    db_postgres.ego 162: AtLine          28             stack[ 0]: <empty>
[20210409144645] 5648  TRACE  : (38)    db_postgres.ego 163: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5649  TRACE  : (38)    db_postgres.ego 164: Push            "Tom"          stack[ 1]: M<let>
[20210409144645] 5650  TRACE  : (38)    db_postgres.ego 165: Push            "Mary"         stack[ 2]: Tom, M<let>
[20210409144645] 5651  TRACE  : (38)    db_postgres.ego 166: Push            "Sarah"        stack[ 3]: Mary, Tom, M<let>
[20210409144645] 5652  TRACE  : (38)    db_postgres.ego 167: Push            "Chelsea"      stack[ 4]: Sarah, Mary, Tom, M<let>
[20210409144645] 5653  TRACE  : (38)    db_postgres.ego 168: Push            "Tony"         stack[ 5]: Chelsea, Sarah, Mary, Tom, M<let>
[20210409144645] 5654  TRACE  : (38)    db_postgres.ego 169: Array           5              stack[ 6]: Tony, Chelsea, Sarah, Mary, Tom, M<let>
[20210409144645] 5655  TRACE  : (38)    db_postgres.ego 170: SymbolCreate    "names"        stack[ 2]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], M<let...
[20210409144645] 5656  TRACE  : (38)    db_postgres.ego 171: Store           "names"        stack[ 2]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], M<let...
[20210409144645] 5657  TRACE  : (38)    db_postgres.ego 172: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5658  TRACE  : (38)    db_postgres.ego 173: AtLine          29             stack[ 0]: <empty>
[20210409144645] 5659  TRACE  : (38)    db_postgres.ego 174: PushScope                      stack[ 0]: <empty>
[20210409144645] 5660  TRACE  : (38)    db_postgres.ego 175: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5661  TRACE  : (38)    db_postgres.ego 176: Push            0              stack[ 1]: M<let>
[20210409144645] 5662  TRACE  : (38)    db_postgres.ego 177: SymbolCreate    "i"            stack[ 2]: 0, M<let>
[20210409144645] 5663  TRACE  : (38)    db_postgres.ego 178: Store           "i"            stack[ 2]: 0, M<let>
[20210409144645] 5664  TRACE  : (38)    db_postgres.ego 179: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5665  TRACE  : (38)    db_postgres.ego 180: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 5666  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 1]: M<let>
[20210409144645] 5667  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 2]: 0, M<let>
[20210409144645] 5668  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 3]: functions.Length(), 0, M<let>
[20210409144645] 5669  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5670  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 3]: 5, 0, M<let>
[20210409144645] 5671  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 2]: true, M<let>
[20210409144645] 5672  TRACE  : (38)    db_postgres.ego 187: AtLine          29             stack[ 1]: M<let>
[20210409144645] 5673  TRACE  : (38)    db_postgres.ego 188: PushScope                      stack[ 1]: M<let>
[20210409144645] 5674  TRACE  : (38)    db_postgres.ego 189: AtLine          30             stack[ 1]: M<let>
[20210409144645] 5675  TRACE  : (38)    db_postgres.ego 190: Load            "d"            stack[ 1]: M<let>
[20210409144645] 5676  TRACE  : (38)    db_postgres.ego 191: SetThis                        stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5677  TRACE  : (38)    db_postgres.ego 192: Member          "Execute"      stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5678  TRACE  : (38)    db_postgres.ego 193: Push            "insert into members values($1, $2)" stack[ 2]: runtime.DBExecute(), M<let>
[20210409144645] 5679  TRACE  : (38)    db_postgres.ego 194: Push            101            stack[ 3]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 5680  TRACE  : (38)    db_postgres.ego 195: Load            "i"            stack[ 4]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5681  TRACE  : (38)    db_postgres.ego 196: Add                            stack[ 5]: 0, 101, insert into members values($1, $2), runtim...
[20210409144645] 5682  TRACE  : (38)    db_postgres.ego 197: Load            "names"        stack[ 4]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5683  TRACE  : (38)    db_postgres.ego 198: Load            "i"            stack[ 5]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 101, ...
[20210409144645] 5684  TRACE  : (38)    db_postgres.ego 199: LoadIndex                      stack[ 6]: 0, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 5685  TRACE  : (38)    db_postgres.ego 200: Call            3              stack[ 5]: Tom, 101, insert into members values($1, $2), runt...
[20210409144645] 5686  TRACE  : (38)    db_postgres.ego 201: StackCheck      2              stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 5687  TRACE  : (38)    db_postgres.ego 202: SymbolOptCreate "_"            stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 5688  TRACE  : (38)    db_postgres.ego 203: Store           "_"            stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 5689  TRACE  : (38)    db_postgres.ego 204: SymbolOptCreate "e"            stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 5690  TRACE  : (38)    db_postgres.ego 205: Store           "e"            stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 5691  TRACE  : (38)    db_postgres.ego 206: DropToMarker                   stack[ 2]: M<results>, M<let>
[20210409144645] 5692  TRACE  : (38)    db_postgres.ego 207: AtLine          31             stack[ 1]: M<let>
[20210409144645] 5693  TRACE  : (38)    db_postgres.ego 208: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 5694  TRACE  : (38)    db_postgres.ego 209: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 5695  TRACE  : (38)    db_postgres.ego 210: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 5696  TRACE  : (38)    db_postgres.ego 211: Member          "assert"       stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5697  TRACE  : (38)    db_postgres.ego 212: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 5698  TRACE  : (38)    db_postgres.ego 213: SetThis                        stack[ 4]: Testing{ description: "io: db using local postgres...
[20210409144645] 5699  TRACE  : (38)    db_postgres.ego 214: Member          "Equal"        stack[ 4]: Testing{ description: "io: db using local postgres...
[20210409144645] 5700  TRACE  : (38)    db_postgres.ego 215: Load            "d"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5701  TRACE  : (38)    db_postgres.ego 216: Member          "rowCount"     stack[ 5]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5702  TRACE  : (38)    db_postgres.ego 217: Push            1              stack[ 5]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5703  TRACE  : (38)    db_postgres.ego 218: Push            "row count not updated correctly on insert" stack[ 6]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5704  TRACE  : (38)    db_postgres.ego 219: Call            3              stack[ 7]: row count not updated correctly on insert, 1, 1, c...
[20210409144645] 5705  TRACE  : (38)    db_postgres.ego 220: Call            1              stack[ 4]: [true row count not updated correctly on insert], ...
[20210409144645] 5706  TRACE  : (38)    db_postgres.ego 221: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 5707  TRACE  : (38)    db_postgres.ego 222: AtLine          32             stack[ 1]: M<let>
[20210409144645] 5708  TRACE  : (38)    db_postgres.ego 223: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 5709  TRACE  : (38)    db_postgres.ego 224: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 5710  TRACE  : (38)    db_postgres.ego 225: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 5711  TRACE  : (38)    db_postgres.ego 226: Member          "assert"       stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5712  TRACE  : (38)    db_postgres.ego 227: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 5713  TRACE  : (38)    db_postgres.ego 228: SetThis                        stack[ 4]: Testing{ description: "io: db using local postgres...
[20210409144645] 5714  TRACE  : (38)    db_postgres.ego 229: Member          "Nil"          stack[ 4]: Testing{ description: "io: db using local postgres...
[20210409144645] 5715  TRACE  : (38)    db_postgres.ego 230: Load            "e"            stack[ 4]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5716  TRACE  : (38)    db_postgres.ego 231: Push            "insert failed" stack[ 5]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5717  TRACE  : (38)    db_postgres.ego 232: Call            2              stack[ 6]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 5718  TRACE  : (38)    db_postgres.ego 233: Call            1              stack[ 4]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 5719  TRACE  : (38)    db_postgres.ego 234: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 5720  TRACE  : (38)    db_postgres.ego 235: PopScope                       stack[ 1]: M<let>
[20210409144645] 5721  TRACE  : (38)    db_postgres.ego 236: Load            "i"            stack[ 1]: M<let>
[20210409144645] 5722  TRACE  : (38)    db_postgres.ego 237: Push            1              stack[ 2]: 0, M<let>
[20210409144645] 5723  TRACE  : (38)    db_postgres.ego 238: Add                            stack[ 3]: 1, 0, M<let>
[20210409144645] 5724  TRACE  : (38)    db_postgres.ego 239: Store           "i"            stack[ 2]: 1, M<let>
[20210409144645] 5725  TRACE  : (38)    db_postgres.ego 240: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 5726  TRACE  : (38)    db_postgres.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 5727  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5728  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 1]: 1
[20210409144645] 5729  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 2]: functions.Length(), 1
[20210409144645] 5730  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5731  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 2]: 5, 1
[20210409144645] 5732  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 5733  TRACE  : (38)    db_postgres.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 5734  TRACE  : (38)    db_postgres.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 5735  TRACE  : (38)    db_postgres.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 5736  TRACE  : (38)    db_postgres.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5737  TRACE  : (38)    db_postgres.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5738  TRACE  : (38)    db_postgres.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5739  TRACE  : (38)    db_postgres.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 5740  TRACE  : (38)    db_postgres.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 5741  TRACE  : (38)    db_postgres.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5742  TRACE  : (38)    db_postgres.ego 196: Add                            stack[ 4]: 1, 101, insert into members values($1, $2), runtim...
[20210409144645] 5743  TRACE  : (38)    db_postgres.ego 197: Load            "names"        stack[ 3]: 102, insert into members values($1, $2), runtime.D...
[20210409144645] 5744  TRACE  : (38)    db_postgres.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 102, ...
[20210409144645] 5745  TRACE  : (38)    db_postgres.ego 199: LoadIndex                      stack[ 5]: 1, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 5746  TRACE  : (38)    db_postgres.ego 200: Call            3              stack[ 4]: Mary, 102, insert into members values($1, $2), run...
[20210409144645] 5747  TRACE  : (38)    db_postgres.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5748  TRACE  : (38)    db_postgres.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5749  TRACE  : (38)    db_postgres.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5750  TRACE  : (38)    db_postgres.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5751  TRACE  : (38)    db_postgres.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5752  TRACE  : (38)    db_postgres.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5753  TRACE  : (38)    db_postgres.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 5754  TRACE  : (38)    db_postgres.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5755  TRACE  : (38)    db_postgres.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5756  TRACE  : (38)    db_postgres.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5757  TRACE  : (38)    db_postgres.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5758  TRACE  : (38)    db_postgres.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5759  TRACE  : (38)    db_postgres.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5760  TRACE  : (38)    db_postgres.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5761  TRACE  : (38)    db_postgres.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5762  TRACE  : (38)    db_postgres.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5763  TRACE  : (38)    db_postgres.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5764  TRACE  : (38)    db_postgres.ego 218: Push            "row count not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5765  TRACE  : (38)    db_postgres.ego 219: Call            3              stack[ 6]: row count not updated correctly on insert, 1, 1, c...
[20210409144645] 5766  TRACE  : (38)    db_postgres.ego 220: Call            1              stack[ 3]: [true row count not updated correctly on insert], ...
[20210409144645] 5767  TRACE  : (38)    db_postgres.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5768  TRACE  : (38)    db_postgres.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 5769  TRACE  : (38)    db_postgres.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5770  TRACE  : (38)    db_postgres.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5771  TRACE  : (38)    db_postgres.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5772  TRACE  : (38)    db_postgres.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5773  TRACE  : (38)    db_postgres.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5774  TRACE  : (38)    db_postgres.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5775  TRACE  : (38)    db_postgres.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5776  TRACE  : (38)    db_postgres.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5777  TRACE  : (38)    db_postgres.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5778  TRACE  : (38)    db_postgres.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 5779  TRACE  : (38)    db_postgres.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 5780  TRACE  : (38)    db_postgres.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5781  TRACE  : (38)    db_postgres.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 5782  TRACE  : (38)    db_postgres.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5783  TRACE  : (38)    db_postgres.ego 237: Push            1              stack[ 1]: 1
[20210409144645] 5784  TRACE  : (38)    db_postgres.ego 238: Add                            stack[ 2]: 1, 1
[20210409144645] 5785  TRACE  : (38)    db_postgres.ego 239: Store           "i"            stack[ 1]: 2
[20210409144645] 5786  TRACE  : (38)    db_postgres.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 5787  TRACE  : (38)    db_postgres.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 5788  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5789  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 1]: 2
[20210409144645] 5790  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 2]: functions.Length(), 2
[20210409144645] 5791  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5792  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 2]: 5, 2
[20210409144645] 5793  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 5794  TRACE  : (38)    db_postgres.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 5795  TRACE  : (38)    db_postgres.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 5796  TRACE  : (38)    db_postgres.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 5797  TRACE  : (38)    db_postgres.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5798  TRACE  : (38)    db_postgres.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5799  TRACE  : (38)    db_postgres.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5800  TRACE  : (38)    db_postgres.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 5801  TRACE  : (38)    db_postgres.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 5802  TRACE  : (38)    db_postgres.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5803  TRACE  : (38)    db_postgres.ego 196: Add                            stack[ 4]: 2, 101, insert into members values($1, $2), runtim...
[20210409144645] 5804  TRACE  : (38)    db_postgres.ego 197: Load            "names"        stack[ 3]: 103, insert into members values($1, $2), runtime.D...
[20210409144645] 5805  TRACE  : (38)    db_postgres.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 103, ...
[20210409144645] 5806  TRACE  : (38)    db_postgres.ego 199: LoadIndex                      stack[ 5]: 2, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 5807  TRACE  : (38)    db_postgres.ego 200: Call            3              stack[ 4]: Sarah, 103, insert into members values($1, $2), ru...
[20210409144645] 5808  TRACE  : (38)    db_postgres.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5809  TRACE  : (38)    db_postgres.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5810  TRACE  : (38)    db_postgres.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5811  TRACE  : (38)    db_postgres.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5812  TRACE  : (38)    db_postgres.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5813  TRACE  : (38)    db_postgres.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5814  TRACE  : (38)    db_postgres.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 5815  TRACE  : (38)    db_postgres.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5816  TRACE  : (38)    db_postgres.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5817  TRACE  : (38)    db_postgres.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5818  TRACE  : (38)    db_postgres.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5819  TRACE  : (38)    db_postgres.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5820  TRACE  : (38)    db_postgres.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5821  TRACE  : (38)    db_postgres.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5822  TRACE  : (38)    db_postgres.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5823  TRACE  : (38)    db_postgres.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5824  TRACE  : (38)    db_postgres.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5825  TRACE  : (38)    db_postgres.ego 218: Push            "row count not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5826  TRACE  : (38)    db_postgres.ego 219: Call            3              stack[ 6]: row count not updated correctly on insert, 1, 1, c...
[20210409144645] 5827  TRACE  : (38)    db_postgres.ego 220: Call            1              stack[ 3]: [true row count not updated correctly on insert], ...
[20210409144645] 5828  TRACE  : (38)    db_postgres.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5829  TRACE  : (38)    db_postgres.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 5830  TRACE  : (38)    db_postgres.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5831  TRACE  : (38)    db_postgres.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5832  TRACE  : (38)    db_postgres.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5833  TRACE  : (38)    db_postgres.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5834  TRACE  : (38)    db_postgres.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5835  TRACE  : (38)    db_postgres.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5836  TRACE  : (38)    db_postgres.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5837  TRACE  : (38)    db_postgres.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5838  TRACE  : (38)    db_postgres.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5839  TRACE  : (38)    db_postgres.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 5840  TRACE  : (38)    db_postgres.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 5841  TRACE  : (38)    db_postgres.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5842  TRACE  : (38)    db_postgres.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 5843  TRACE  : (38)    db_postgres.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5844  TRACE  : (38)    db_postgres.ego 237: Push            1              stack[ 1]: 2
[20210409144645] 5845  TRACE  : (38)    db_postgres.ego 238: Add                            stack[ 2]: 1, 2
[20210409144645] 5846  TRACE  : (38)    db_postgres.ego 239: Store           "i"            stack[ 1]: 3
[20210409144645] 5847  TRACE  : (38)    db_postgres.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 5848  TRACE  : (38)    db_postgres.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 5849  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5850  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 1]: 3
[20210409144645] 5851  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 2]: functions.Length(), 3
[20210409144645] 5852  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5853  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 2]: 5, 3
[20210409144645] 5854  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 5855  TRACE  : (38)    db_postgres.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 5856  TRACE  : (38)    db_postgres.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 5857  TRACE  : (38)    db_postgres.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 5858  TRACE  : (38)    db_postgres.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5859  TRACE  : (38)    db_postgres.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5860  TRACE  : (38)    db_postgres.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5861  TRACE  : (38)    db_postgres.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 5862  TRACE  : (38)    db_postgres.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 5863  TRACE  : (38)    db_postgres.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5864  TRACE  : (38)    db_postgres.ego 196: Add                            stack[ 4]: 3, 101, insert into members values($1, $2), runtim...
[20210409144645] 5865  TRACE  : (38)    db_postgres.ego 197: Load            "names"        stack[ 3]: 104, insert into members values($1, $2), runtime.D...
[20210409144645] 5866  TRACE  : (38)    db_postgres.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 104, ...
[20210409144645] 5867  TRACE  : (38)    db_postgres.ego 199: LoadIndex                      stack[ 5]: 3, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 5868  TRACE  : (38)    db_postgres.ego 200: Call            3              stack[ 4]: Chelsea, 104, insert into members values($1, $2), ...
[20210409144645] 5869  TRACE  : (38)    db_postgres.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5870  TRACE  : (38)    db_postgres.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5871  TRACE  : (38)    db_postgres.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5872  TRACE  : (38)    db_postgres.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5873  TRACE  : (38)    db_postgres.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5874  TRACE  : (38)    db_postgres.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5875  TRACE  : (38)    db_postgres.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 5876  TRACE  : (38)    db_postgres.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5877  TRACE  : (38)    db_postgres.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5878  TRACE  : (38)    db_postgres.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5879  TRACE  : (38)    db_postgres.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5880  TRACE  : (38)    db_postgres.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5881  TRACE  : (38)    db_postgres.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5882  TRACE  : (38)    db_postgres.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5883  TRACE  : (38)    db_postgres.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5884  TRACE  : (38)    db_postgres.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5885  TRACE  : (38)    db_postgres.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5886  TRACE  : (38)    db_postgres.ego 218: Push            "row count not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5887  TRACE  : (38)    db_postgres.ego 219: Call            3              stack[ 6]: row count not updated correctly on insert, 1, 1, c...
[20210409144645] 5888  TRACE  : (38)    db_postgres.ego 220: Call            1              stack[ 3]: [true row count not updated correctly on insert], ...
[20210409144645] 5889  TRACE  : (38)    db_postgres.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5890  TRACE  : (38)    db_postgres.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 5891  TRACE  : (38)    db_postgres.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5892  TRACE  : (38)    db_postgres.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5893  TRACE  : (38)    db_postgres.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5894  TRACE  : (38)    db_postgres.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5895  TRACE  : (38)    db_postgres.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5896  TRACE  : (38)    db_postgres.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5897  TRACE  : (38)    db_postgres.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5898  TRACE  : (38)    db_postgres.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5899  TRACE  : (38)    db_postgres.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5900  TRACE  : (38)    db_postgres.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 5901  TRACE  : (38)    db_postgres.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 5902  TRACE  : (38)    db_postgres.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5903  TRACE  : (38)    db_postgres.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 5904  TRACE  : (38)    db_postgres.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5905  TRACE  : (38)    db_postgres.ego 237: Push            1              stack[ 1]: 3
[20210409144645] 5906  TRACE  : (38)    db_postgres.ego 238: Add                            stack[ 2]: 1, 3
[20210409144645] 5907  TRACE  : (38)    db_postgres.ego 239: Store           "i"            stack[ 1]: 4
[20210409144645] 5908  TRACE  : (38)    db_postgres.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 5909  TRACE  : (38)    db_postgres.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 5910  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5911  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 1]: 4
[20210409144645] 5912  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 2]: functions.Length(), 4
[20210409144645] 5913  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5914  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 2]: 5, 4
[20210409144645] 5915  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 5916  TRACE  : (38)    db_postgres.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 5917  TRACE  : (38)    db_postgres.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 5918  TRACE  : (38)    db_postgres.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 5919  TRACE  : (38)    db_postgres.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5920  TRACE  : (38)    db_postgres.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5921  TRACE  : (38)    db_postgres.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5922  TRACE  : (38)    db_postgres.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 5923  TRACE  : (38)    db_postgres.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 5924  TRACE  : (38)    db_postgres.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 5925  TRACE  : (38)    db_postgres.ego 196: Add                            stack[ 4]: 4, 101, insert into members values($1, $2), runtim...
[20210409144645] 5926  TRACE  : (38)    db_postgres.ego 197: Load            "names"        stack[ 3]: 105, insert into members values($1, $2), runtime.D...
[20210409144645] 5927  TRACE  : (38)    db_postgres.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 105, ...
[20210409144645] 5928  TRACE  : (38)    db_postgres.ego 199: LoadIndex                      stack[ 5]: 4, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 5929  TRACE  : (38)    db_postgres.ego 200: Call            3              stack[ 4]: Tony, 105, insert into members values($1, $2), run...
[20210409144645] 5930  TRACE  : (38)    db_postgres.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5931  TRACE  : (38)    db_postgres.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5932  TRACE  : (38)    db_postgres.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 5933  TRACE  : (38)    db_postgres.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5934  TRACE  : (38)    db_postgres.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5935  TRACE  : (38)    db_postgres.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5936  TRACE  : (38)    db_postgres.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 5937  TRACE  : (38)    db_postgres.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5938  TRACE  : (38)    db_postgres.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5939  TRACE  : (38)    db_postgres.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5940  TRACE  : (38)    db_postgres.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5941  TRACE  : (38)    db_postgres.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5942  TRACE  : (38)    db_postgres.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5943  TRACE  : (38)    db_postgres.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5944  TRACE  : (38)    db_postgres.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 5945  TRACE  : (38)    db_postgres.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5946  TRACE  : (38)    db_postgres.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 5947  TRACE  : (38)    db_postgres.ego 218: Push            "row count not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 5948  TRACE  : (38)    db_postgres.ego 219: Call            3              stack[ 6]: row count not updated correctly on insert, 1, 1, c...
[20210409144645] 5949  TRACE  : (38)    db_postgres.ego 220: Call            1              stack[ 3]: [true row count not updated correctly on insert], ...
[20210409144645] 5950  TRACE  : (38)    db_postgres.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5951  TRACE  : (38)    db_postgres.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 5952  TRACE  : (38)    db_postgres.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5953  TRACE  : (38)    db_postgres.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5954  TRACE  : (38)    db_postgres.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5955  TRACE  : (38)    db_postgres.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5956  TRACE  : (38)    db_postgres.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5957  TRACE  : (38)    db_postgres.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5958  TRACE  : (38)    db_postgres.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5959  TRACE  : (38)    db_postgres.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 5960  TRACE  : (38)    db_postgres.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 5961  TRACE  : (38)    db_postgres.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 5962  TRACE  : (38)    db_postgres.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 5963  TRACE  : (38)    db_postgres.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 5964  TRACE  : (38)    db_postgres.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 5965  TRACE  : (38)    db_postgres.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5966  TRACE  : (38)    db_postgres.ego 237: Push            1              stack[ 1]: 4
[20210409144645] 5967  TRACE  : (38)    db_postgres.ego 238: Add                            stack[ 2]: 1, 4
[20210409144645] 5968  TRACE  : (38)    db_postgres.ego 239: Store           "i"            stack[ 1]: 5
[20210409144645] 5969  TRACE  : (38)    db_postgres.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 5970  TRACE  : (38)    db_postgres.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 5971  TRACE  : (38)    db_postgres.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 5972  TRACE  : (38)    db_postgres.ego 182: Load            "len"          stack[ 1]: 5
[20210409144645] 5973  TRACE  : (38)    db_postgres.ego 183: Load            "names"        stack[ 2]: functions.Length(), 5
[20210409144645] 5974  TRACE  : (38)    db_postgres.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 5975  TRACE  : (38)    db_postgres.ego 185: LT                             stack[ 2]: 5, 5
[20210409144645] 5976  TRACE  : (38)    db_postgres.ego 186: BranchFalse     @242           stack[ 1]: false
[20210409144645] 5977  TRACE  : (38)    db_postgres.ego 242: PopScope                       stack[ 0]: <empty>
[20210409144645] 5978  TRACE  : (38)    db_postgres.ego 243: DropToMarker                   stack[ 0]: <empty>
[20210409144645] 5979  TRACE  : (38)    db_postgres.ego 244: AtLine          37             stack[ 0]: <empty>
[20210409144645] 5980  TRACE  : (38)    db_postgres.ego 245: Load            "d"            stack[ 0]: <empty>
[20210409144645] 5981  TRACE  : (38)    db_postgres.ego 246: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5982  TRACE  : (38)    db_postgres.ego 247: Member          "QueryResult"  stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 5983  TRACE  : (38)    db_postgres.ego 248: Push            "select * from members order by name" stack[ 1]: runtime.DBQuery()
[20210409144645] 5984  TRACE  : (38)    db_postgres.ego 249: Call            1              stack[ 2]: select * from members order by name, runtime.DBQue...
[20210409144645] 5985  TRACE  : (38)    db_postgres.ego 250: StackCheck      2              stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 5986  TRACE  : (38)    db_postgres.ego 251: SymbolOptCreate "r"            stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 5987  TRACE  : (38)    db_postgres.ego 252: Store           "r"            stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 5988  TRACE  : (38)    db_postgres.ego 253: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5989  TRACE  : (38)    db_postgres.ego 254: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 5990  TRACE  : (38)    db_postgres.ego 255: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 5991  TRACE  : (38)    db_postgres.ego 256: AtLine          38             stack[ 0]: <empty>
[20210409144645] 5992  TRACE  : (38)    db_postgres.ego 257: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 5993  TRACE  : (38)    db_postgres.ego 258: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 5994  TRACE  : (38)    db_postgres.ego 259: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 5995  TRACE  : (38)    db_postgres.ego 260: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 5996  TRACE  : (38)    db_postgres.ego 261: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 5997  TRACE  : (38)    db_postgres.ego 262: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5998  TRACE  : (38)    db_postgres.ego 263: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 5999  TRACE  : (38)    db_postgres.ego 264: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6000  TRACE  : (38)    db_postgres.ego 265: Push            "select failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6001  TRACE  : (38)    db_postgres.ego 266: Call            2              stack[ 5]: select failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6002  TRACE  : (38)    db_postgres.ego 267: Call            1              stack[ 3]: [true select failed], compiler.TestAssert(), M<ass...
[20210409144645] 6003  TRACE  : (38)    db_postgres.ego 268: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6004  TRACE  : (38)    db_postgres.ego 269: AtLine          39             stack[ 0]: <empty>
[20210409144645] 6005  TRACE  : (38)    db_postgres.ego 270: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6006  TRACE  : (38)    db_postgres.ego 271: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6007  TRACE  : (38)    db_postgres.ego 272: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6008  TRACE  : (38)    db_postgres.ego 273: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6009  TRACE  : (38)    db_postgres.ego 274: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6010  TRACE  : (38)    db_postgres.ego 275: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6011  TRACE  : (38)    db_postgres.ego 276: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6012  TRACE  : (38)    db_postgres.ego 277: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6013  TRACE  : (38)    db_postgres.ego 278: Load            "r"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 6014  TRACE  : (38)    db_postgres.ego 279: Call            1              stack[ 5]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6015  TRACE  : (38)    db_postgres.ego 280: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6016  TRACE  : (38)    db_postgres.ego 281: Push            "wrong number of rows returned" stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6017  TRACE  : (38)    db_postgres.ego 282: Call            3              stack[ 6]: wrong number of rows returned, 5, 5, compiler.Test...
[20210409144645] 6018  TRACE  : (38)    db_postgres.ego 283: Call            1              stack[ 3]: [true wrong number of rows returned], compiler.Tes...
[20210409144645] 6019  TRACE  : (38)    db_postgres.ego 284: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6020  TRACE  : (38)    db_postgres.ego 285: AtLine          40             stack[ 0]: <empty>
[20210409144645] 6021  TRACE  : (38)    db_postgres.ego 286: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6022  TRACE  : (38)    db_postgres.ego 287: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6023  TRACE  : (38)    db_postgres.ego 288: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6024  TRACE  : (38)    db_postgres.ego 289: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6025  TRACE  : (38)    db_postgres.ego 290: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6026  TRACE  : (38)    db_postgres.ego 291: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6027  TRACE  : (38)    db_postgres.ego 292: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6028  TRACE  : (38)    db_postgres.ego 293: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6029  TRACE  : (38)    db_postgres.ego 294: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6030  TRACE  : (38)    db_postgres.ego 295: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6031  TRACE  : (38)    db_postgres.ego 296: Push            "wrong number of rows in result handle" stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6032  TRACE  : (38)    db_postgres.ego 297: Call            3              stack[ 6]: wrong number of rows in result handle, 5, 5, compi...
[20210409144645] 6033  TRACE  : (38)    db_postgres.ego 298: Call            1              stack[ 3]: [true wrong number of rows in result handle], comp...
[20210409144645] 6034  TRACE  : (38)    db_postgres.ego 299: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6035  TRACE  : (38)    db_postgres.ego 300: AtLine          41             stack[ 0]: <empty>
[20210409144645] 6036  TRACE  : (38)    db_postgres.ego 301: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6037  TRACE  : (38)    db_postgres.ego 302: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6038  TRACE  : (38)    db_postgres.ego 303: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6039  TRACE  : (38)    db_postgres.ego 304: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6040  TRACE  : (38)    db_postgres.ego 305: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6041  TRACE  : (38)    db_postgres.ego 306: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6042  TRACE  : (38)    db_postgres.ego 307: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6043  TRACE  : (38)    db_postgres.ego 308: Load            "r"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6044  TRACE  : (38)    db_postgres.ego 309: Push            0              stack[ 4]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6045  TRACE  : (38)    db_postgres.ego 310: LoadIndex                      stack[ 5]: 0, [[104 Chelsea], [102 Mary], [103 Sarah], [101 T...
[20210409144645] 6046  TRACE  : (38)    db_postgres.ego 311: Push            1              stack[ 4]: [104 Chelsea], compiler.TestEqual(), compiler.Test...
[20210409144645] 6047  TRACE  : (38)    db_postgres.ego 312: LoadIndex                      stack[ 5]: 1, [104 Chelsea], compiler.TestEqual(), compiler.T...
[20210409144645] 6048  TRACE  : (38)    db_postgres.ego 313: Push            "Chelsea"      stack[ 4]: Chelsea, compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 6049  TRACE  : (38)    db_postgres.ego 314: Push            "unexpected result set value(s)" stack[ 5]: Chelsea, Chelsea, compiler.TestEqual(), compiler.T...
[20210409144645] 6050  TRACE  : (38)    db_postgres.ego 315: Call            3              stack[ 6]: unexpected result set value(s), Chelsea, Chelsea, ...
[20210409144645] 6051  TRACE  : (38)    db_postgres.ego 316: Call            1              stack[ 3]: [true unexpected result set value(s)], compiler.Te...
[20210409144645] 6052  TRACE  : (38)    db_postgres.ego 317: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6053  TRACE  : (38)    db_postgres.ego 318: AtLine          45             stack[ 0]: <empty>
[20210409144645] 6054  TRACE  : (38)    db_postgres.ego 319: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6055  TRACE  : (38)    db_postgres.ego 320: Load            "d"            stack[ 1]: M<call>
[20210409144645] 6056  TRACE  : (38)    db_postgres.ego 321: SetThis                        stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6057  TRACE  : (38)    db_postgres.ego 322: Member          "AsStruct"     stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6058  TRACE  : (38)    db_postgres.ego 323: Push            true           stack[ 2]: runtime.DataBaseAsStruct(), M<call>
[20210409144645] 6059  TRACE  : (38)    db_postgres.ego 324: Call            1              stack[ 3]: true, runtime.DataBaseAsStruct(), M<call>
[20210409144645] 6060  TRACE  : (38)    db_postgres.ego 325: DropToMarker    M<call>        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6061  TRACE  : (38)    db_postgres.ego 326: AtLine          46             stack[ 0]: <empty>
[20210409144645] 6062  TRACE  : (38)    db_postgres.ego 327: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6063  TRACE  : (38)    db_postgres.ego 328: SetThis                        stack[ 1]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6064  TRACE  : (38)    db_postgres.ego 329: Member          "Query"        stack[ 1]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6065  TRACE  : (38)    db_postgres.ego 330: Push            "select * from members where name = $1" stack[ 1]: runtime.DBQueryRows()
[20210409144645] 6066  TRACE  : (38)    db_postgres.ego 331: Push            "Tony"         stack[ 2]: select * from members where name = $1, runtime.DBQ...
[20210409144645] 6067  TRACE  : (38)    db_postgres.ego 332: Call            2              stack[ 3]: Tony, select * from members where name = $1, runti...
[20210409144645] 6068  TRACE  : (38)    db_postgres.ego 333: StackCheck      2              stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6069  TRACE  : (38)    db_postgres.ego 334: SymbolOptCreate "r2"           stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6070  TRACE  : (38)    db_postgres.ego 335: Store           "r2"           stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6071  TRACE  : (38)    db_postgres.ego 336: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6072  TRACE  : (38)    db_postgres.ego 337: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6073  TRACE  : (38)    db_postgres.ego 338: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6074  TRACE  : (38)    db_postgres.ego 339: AtLine          47             stack[ 0]: <empty>
[20210409144645] 6075  TRACE  : (38)    db_postgres.ego 340: PushScope                      stack[ 0]: <empty>
[20210409144645] 6076  TRACE  : (38)    db_postgres.ego 341: Load            "r2"           stack[ 0]: <empty>
[20210409144645] 6077  TRACE  : (38)    db_postgres.ego 342: SetThis                        stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6078  TRACE  : (38)    db_postgres.ego 343: Member          "Next"         stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6079  TRACE  : (38)    db_postgres.ego 344: Call            0              stack[ 1]: runtime.rowsNext()
[20210409144645] 6080  TRACE  : (38)    db_postgres.ego 345: BranchFalse     @391           stack[ 1]: true
[20210409144645] 6081  TRACE  : (38)    db_postgres.ego 346: AtLine          47             stack[ 0]: <empty>
[20210409144645] 6082  TRACE  : (38)    db_postgres.ego 347: PushScope                      stack[ 0]: <empty>
[20210409144645] 6083  TRACE  : (38)    db_postgres.ego 348: AtLine          48             stack[ 0]: <empty>
[20210409144645] 6084  TRACE  : (38)    db_postgres.ego 349: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6085  TRACE  : (38)    db_postgres.ego 350: Load            "r2"           stack[ 1]: M<let>
[20210409144645] 6086  TRACE  : (38)    db_postgres.ego 351: SetThis                        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6087  TRACE  : (38)    db_postgres.ego 352: Member          "Scan"         stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6088  TRACE  : (38)    db_postgres.ego 353: Call            0              stack[ 2]: runtime.rowsScan(), M<let>
[20210409144645] 6089  TRACE  : (38)    db_postgres.ego 354: SymbolCreate    "info"         stack[ 4]: ["id": 105, "name": "Tony"], <nil>, M<results>, M<...
[20210409144645] 6090  TRACE  : (38)    db_postgres.ego 355: Store           "info"         stack[ 4]: ["id": 105, "name": "Tony"], <nil>, M<results>, M<...
[20210409144645] 6091  TRACE  : (38)    db_postgres.ego 356: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6092  TRACE  : (38)    db_postgres.ego 357: AtLine          49             stack[ 0]: <empty>
[20210409144645] 6093  TRACE  : (38)    db_postgres.ego 358: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6094  TRACE  : (38)    db_postgres.ego 359: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6095  TRACE  : (38)    db_postgres.ego 360: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6096  TRACE  : (38)    db_postgres.ego 361: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6097  TRACE  : (38)    db_postgres.ego 362: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6098  TRACE  : (38)    db_postgres.ego 363: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6099  TRACE  : (38)    db_postgres.ego 364: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6100  TRACE  : (38)    db_postgres.ego 365: Load            "info"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6101  TRACE  : (38)    db_postgres.ego 366: Member          "name"         stack[ 4]: ["id": 105, "name": "Tony"], compiler.TestEqual(),...
[20210409144645] 6102  TRACE  : (38)    db_postgres.ego 367: Push            "Tony"         stack[ 4]: Tony, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6103  TRACE  : (38)    db_postgres.ego 368: Push            "incorrect name returned from query" stack[ 5]: Tony, Tony, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 6104  TRACE  : (38)    db_postgres.ego 369: Call            3              stack[ 6]: incorrect name returned from query, Tony, Tony, co...
[20210409144645] 6105  TRACE  : (38)    db_postgres.ego 370: Call            1              stack[ 3]: [true incorrect name returned from query], compile...
[20210409144645] 6106  TRACE  : (38)    db_postgres.ego 371: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6107  TRACE  : (38)    db_postgres.ego 372: AtLine          50             stack[ 0]: <empty>
[20210409144645] 6108  TRACE  : (38)    db_postgres.ego 373: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6109  TRACE  : (38)    db_postgres.ego 374: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6110  TRACE  : (38)    db_postgres.ego 375: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6111  TRACE  : (38)    db_postgres.ego 376: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6112  TRACE  : (38)    db_postgres.ego 377: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6113  TRACE  : (38)    db_postgres.ego 378: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6114  TRACE  : (38)    db_postgres.ego 379: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6115  TRACE  : (38)    db_postgres.ego 380: Load            "int"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6116  TRACE  : (38)    db_postgres.ego 381: Load            "info"         stack[ 4]: functions.Int(), compiler.TestEqual(), compiler.Te...
[20210409144645] 6117  TRACE  : (38)    db_postgres.ego 382: Member          "id"           stack[ 5]: ["id": 105, "name": "Tony"], functions.Int(), comp...
[20210409144645] 6118  TRACE  : (38)    db_postgres.ego 383: Call            1              stack[ 5]: 105, functions.Int(), compiler.TestEqual(), compil...
[20210409144645] 6119  TRACE  : (38)    db_postgres.ego 384: Push            105            stack[ 4]: 105, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 6120  TRACE  : (38)    db_postgres.ego 385: Push            "incorrect id returned from query" stack[ 5]: 105, 105, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 6121  TRACE  : (38)    db_postgres.ego 386: Call            3              stack[ 6]: incorrect id returned from query, 105, 105, compil...
[20210409144645] 6122  TRACE  : (38)    db_postgres.ego 387: Call            1              stack[ 3]: [true incorrect id returned from query], compiler....
[20210409144645] 6123  TRACE  : (38)    db_postgres.ego 388: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6124  TRACE  : (38)    db_postgres.ego 389: PopScope                       stack[ 0]: <empty>
[20210409144645] 6125  TRACE  : (38)    db_postgres.ego 390: Branch          @341           stack[ 0]: <empty>
[20210409144645] 6126  TRACE  : (38)    db_postgres.ego 341: Load            "r2"           stack[ 0]: <empty>
[20210409144645] 6127  TRACE  : (38)    db_postgres.ego 342: SetThis                        stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6128  TRACE  : (38)    db_postgres.ego 343: Member          "Next"         stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6129  TRACE  : (38)    db_postgres.ego 344: Call            0              stack[ 1]: runtime.rowsNext()
[20210409144645] 6130  TRACE  : (38)    db_postgres.ego 345: BranchFalse     @391           stack[ 1]: false
[20210409144645] 6131  TRACE  : (38)    db_postgres.ego 391: PopScope                       stack[ 0]: <empty>
[20210409144645] 6132  TRACE  : (38)    db_postgres.ego 392: AtLine          54             stack[ 0]: <empty>
[20210409144645] 6133  TRACE  : (38)    db_postgres.ego 393: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6134  TRACE  : (38)    db_postgres.ego 394: Load            "r2"           stack[ 1]: M<call>
[20210409144645] 6135  TRACE  : (38)    db_postgres.ego 395: SetThis                        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6136  TRACE  : (38)    db_postgres.ego 396: Member          "Close"        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6137  TRACE  : (38)    db_postgres.ego 397: Call            0              stack[ 2]: runtime.rowsClose(), M<call>
[20210409144645] 6138  TRACE  : (38)    db_postgres.ego 398: DropToMarker    M<call>        stack[ 1]: M<call>
[20210409144645] 6139  TRACE  : (38)    db_postgres.ego 399: AtLine          57             stack[ 0]: <empty>
[20210409144645] 6140  TRACE  : (38)    db_postgres.ego 400: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6141  TRACE  : (38)    db_postgres.ego 401: Load            "d"            stack[ 1]: M<call>
[20210409144645] 6142  TRACE  : (38)    db_postgres.ego 402: SetThis                        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6143  TRACE  : (38)    db_postgres.ego 403: Member          "Close"        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6144  TRACE  : (38)    db_postgres.ego 404: Call            0              stack[ 2]: runtime.DBClose(), M<call>
[20210409144645] 6145  TRACE  : (38)    db_postgres.ego 405: DropToMarker    M<call>        stack[ 2]: true, M<call>
[20210409144645] 6146  TRACE  : (38)    db_postgres.ego 406: AtLine          58             stack[ 0]: <empty>
[20210409144645] 6147  TRACE  : (38)    db_postgres.ego 407: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6148  TRACE  : (38)    db_postgres.ego 408: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6149  TRACE  : (38)    db_postgres.ego 409: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6150  TRACE  : (38)    db_postgres.ego 410: Member          "assert"       stack[ 2]: Testing{ description: "io: db using local postgres...
[20210409144645] 6151  TRACE  : (38)    db_postgres.ego 411: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6152  TRACE  : (38)    db_postgres.ego 412: SetThis                        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6153  TRACE  : (38)    db_postgres.ego 413: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using local postgres...
[20210409144645] 6154  TRACE  : (38)    db_postgres.ego 414: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6155  TRACE  : (38)    db_postgres.ego 415: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: <nil>, constr:...
[20210409144645] 6156  TRACE  : (38)    db_postgres.ego 416: Push            -1             stack[ 4]: -1, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 6157  TRACE  : (38)    db_postgres.ego 417: Push            "row count not updated after close" stack[ 5]: -1, -1, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 6158  TRACE  : (38)    db_postgres.ego 418: Call            3              stack[ 6]: row count not updated after close, -1, -1, compile...
[20210409144645] 6159  TRACE  : (38)    db_postgres.ego 419: Call            1              stack[ 3]: [true row count not updated after close], compiler...
[20210409144645] 6160  TRACE  : (38)    db_postgres.ego 420: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6161  TRACE  : (38)    db_postgres.ego 421: PopScope                       stack[ 0]: <empty>
[20210409144645] 6162  TRACE  : (38)    db_postgres.ego 422: PopScope                       stack[ 0]: <empty>
[20210409144645] 6163  TRACE  : (38)    db_postgres.ego 423: AtLine          61             stack[ 0]: <empty>
[20210409144645] 6164  TRACE  : (38)    db_postgres.ego 424: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6165  TRACE  : (38)    db_postgres.ego 425: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 6166  TRACE  : (38)    db_postgres.ego 426: Print                          stack[ 1]: (PASS)  
[20210409144645] 6167  TRACE  : (38)    db_postgres.ego 427: Timer           1              stack[ 0]: <empty>
[20210409144645] 6168  TRACE  : (38)    db_postgres.ego 428: Print                          stack[ 1]: 0.218s
[20210409144645] 6169  TRACE  : (38)    db_postgres.ego 429: Say             true           stack[ 0]: <empty>
TEST: io: db using local postgres                       (PASS)  0.218s
[20210409144645] 6170  TRACE  : (38)    db_postgres.ego 430: Stop                           stack[ 0]: <empty>
[20210409144645] 6171  TRACE  : *** Tracing db_sqlite3.ego (39)  
[20210409144645] 6172  TRACE  : (39)     db_sqlite3.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 6173  TRACE  : (39)     db_sqlite3.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6174  TRACE  : (39)     db_sqlite3.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 6175  TRACE  : (39)     db_sqlite3.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6176  TRACE  : (39)     db_sqlite3.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6177  TRACE  : (39)     db_sqlite3.ego   5: Push            Testing{ description: "io: db using integrated sqlite3" } stack[ 0]: <empty>
[20210409144645] 6178  TRACE  : (39)     db_sqlite3.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6179  TRACE  : (39)     db_sqlite3.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 6180  TRACE  : (39)     db_sqlite3.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 6181  TRACE  : (39)     db_sqlite3.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 6182  TRACE  : (39)     db_sqlite3.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6183  TRACE  : (39)     db_sqlite3.ego  11: Print                          stack[ 1]: io: db using integrated sqlite3
[20210409144645] 6184  TRACE  : (39)     db_sqlite3.ego  12: Push            "                   " stack[ 0]: <empty>
[20210409144645] 6185  TRACE  : (39)     db_sqlite3.ego  13: Print                          stack[ 1]:                    
[20210409144645] 6186  TRACE  : (39)     db_sqlite3.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 6187  TRACE  : (39)     db_sqlite3.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 6188  TRACE  : (39)     db_sqlite3.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 6189  TRACE  : (39)     db_sqlite3.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 6190  TRACE  : (39)     db_sqlite3.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6191  TRACE  : (39)     db_sqlite3.ego  19: Push            "sqlite3://foo.db" stack[ 1]: M<let>
[20210409144645] 6192  TRACE  : (39)     db_sqlite3.ego  20: SymbolCreate    "constr"       stack[ 2]: sqlite3://foo.db, M<let>
[20210409144645] 6193  TRACE  : (39)     db_sqlite3.ego  21: Store           "constr"       stack[ 2]: sqlite3://foo.db, M<let>
[20210409144645] 6194  TRACE  : (39)     db_sqlite3.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6195  TRACE  : (39)     db_sqlite3.ego  23: AtLine          5              stack[ 0]: <empty>
[20210409144645] 6196  TRACE  : (39)     db_sqlite3.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6197  TRACE  : (39)     db_sqlite3.ego  25: Load            "db"           stack[ 1]: M<let>
[20210409144645] 6198  TRACE  : (39)     db_sqlite3.ego  26: SetThis                        stack[ 2]: Pkg< New: runtime.DBNew() >, M<let>
[20210409144645] 6199  TRACE  : (39)     db_sqlite3.ego  27: Member          "New"          stack[ 2]: Pkg< New: runtime.DBNew() >, M<let>
[20210409144645] 6200  TRACE  : (39)     db_sqlite3.ego  28: Load            "constr"       stack[ 2]: runtime.DBNew(), M<let>
[20210409144645] 6201  TRACE  : (39)     db_sqlite3.ego  29: Call            1              stack[ 3]: sqlite3://foo.db, runtime.DBNew(), M<let>
[20210409144645] 6202  TRACE  : (39)     db_sqlite3.ego  30: SymbolCreate    "d"            stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6203  TRACE  : (39)     db_sqlite3.ego  31: Store           "d"            stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6204  TRACE  : (39)     db_sqlite3.ego  32: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6205  TRACE  : (39)     db_sqlite3.ego  33: AtLine          8              stack[ 0]: <empty>
[20210409144645] 6206  TRACE  : (39)     db_sqlite3.ego  34: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6207  TRACE  : (39)     db_sqlite3.ego  35: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6208  TRACE  : (39)     db_sqlite3.ego  36: Member          "Query"        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6209  TRACE  : (39)     db_sqlite3.ego  37: Push            "select 0 where 1=0" stack[ 1]: runtime.DBQueryRows()
[20210409144645] 6210  TRACE  : (39)     db_sqlite3.ego  38: Call            1              stack[ 2]: select 0 where 1=0, runtime.DBQueryRows()
[20210409144645] 6211  TRACE  : (39)     db_sqlite3.ego  39: StackCheck      2              stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6212  TRACE  : (39)     db_sqlite3.ego  40: SymbolOptCreate "_"            stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6213  TRACE  : (39)     db_sqlite3.ego  41: Store           "_"            stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6214  TRACE  : (39)     db_sqlite3.ego  42: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6215  TRACE  : (39)     db_sqlite3.ego  43: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6216  TRACE  : (39)     db_sqlite3.ego  44: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6217  TRACE  : (39)     db_sqlite3.ego  45: AtLine          9              stack[ 0]: <empty>
[20210409144645] 6218  TRACE  : (39)     db_sqlite3.ego  46: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 6219  TRACE  : (39)     db_sqlite3.ego  47: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 6220  TRACE  : (39)     db_sqlite3.ego  48: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 6221  TRACE  : (39)     db_sqlite3.ego  49: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 6222  TRACE  : (39)     db_sqlite3.ego  50: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 6223  TRACE  : (39)     db_sqlite3.ego  51: BranchFalse     @110           stack[ 1]: false
[20210409144645] 6224  TRACE  : (39)     db_sqlite3.ego 110: AtLine          17             stack[ 0]: <empty>
[20210409144645] 6225  TRACE  : (39)     db_sqlite3.ego 111: PushScope                      stack[ 0]: <empty>
[20210409144645] 6226  TRACE  : (39)     db_sqlite3.ego 112: AtLine          20             stack[ 0]: <empty>
[20210409144645] 6227  TRACE  : (39)     db_sqlite3.ego 113: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6228  TRACE  : (39)     db_sqlite3.ego 114: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6229  TRACE  : (39)     db_sqlite3.ego 115: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6230  TRACE  : (39)     db_sqlite3.ego 116: Push            "drop table if exists members" stack[ 1]: runtime.DBExecute()
[20210409144645] 6231  TRACE  : (39)     db_sqlite3.ego 117: Call            1              stack[ 2]: drop table if exists members, runtime.DBExecute()
[20210409144645] 6232  TRACE  : (39)     db_sqlite3.ego 118: StackCheck      2              stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6233  TRACE  : (39)     db_sqlite3.ego 119: SymbolOptCreate "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6234  TRACE  : (39)     db_sqlite3.ego 120: Store           "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6235  TRACE  : (39)     db_sqlite3.ego 121: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6236  TRACE  : (39)     db_sqlite3.ego 122: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6237  TRACE  : (39)     db_sqlite3.ego 123: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6238  TRACE  : (39)     db_sqlite3.ego 124: AtLine          21             stack[ 0]: <empty>
[20210409144645] 6239  TRACE  : (39)     db_sqlite3.ego 125: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6240  TRACE  : (39)     db_sqlite3.ego 126: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6241  TRACE  : (39)     db_sqlite3.ego 127: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6242  TRACE  : (39)     db_sqlite3.ego 128: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6243  TRACE  : (39)     db_sqlite3.ego 129: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6244  TRACE  : (39)     db_sqlite3.ego 130: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6245  TRACE  : (39)     db_sqlite3.ego 131: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6246  TRACE  : (39)     db_sqlite3.ego 132: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6247  TRACE  : (39)     db_sqlite3.ego 133: Push            "drop table failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6248  TRACE  : (39)     db_sqlite3.ego 134: Call            2              stack[ 5]: drop table failed, <nil>, compiler.TestNil(), comp...
[20210409144645] 6249  TRACE  : (39)     db_sqlite3.ego 135: Call            1              stack[ 3]: [true drop table failed], compiler.TestAssert(), M...
[20210409144645] 6250  TRACE  : (39)     db_sqlite3.ego 136: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6251  TRACE  : (39)     db_sqlite3.ego 137: AtLine          24             stack[ 0]: <empty>
[20210409144645] 6252  TRACE  : (39)     db_sqlite3.ego 138: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6253  TRACE  : (39)     db_sqlite3.ego 139: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6254  TRACE  : (39)     db_sqlite3.ego 140: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6255  TRACE  : (39)     db_sqlite3.ego 141: Push            "create table members(id integer, name char varying(50))" stack[ 1]: runtime.DBExecute()
[20210409144645] 6256  TRACE  : (39)     db_sqlite3.ego 142: Call            1              stack[ 2]: create table members(id integer, name char varying...
[20210409144645] 6257  TRACE  : (39)     db_sqlite3.ego 143: StackCheck      2              stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6258  TRACE  : (39)     db_sqlite3.ego 144: SymbolOptCreate "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6259  TRACE  : (39)     db_sqlite3.ego 145: Store           "_"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6260  TRACE  : (39)     db_sqlite3.ego 146: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6261  TRACE  : (39)     db_sqlite3.ego 147: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6262  TRACE  : (39)     db_sqlite3.ego 148: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6263  TRACE  : (39)     db_sqlite3.ego 149: AtLine          25             stack[ 0]: <empty>
[20210409144645] 6264  TRACE  : (39)     db_sqlite3.ego 150: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6265  TRACE  : (39)     db_sqlite3.ego 151: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6266  TRACE  : (39)     db_sqlite3.ego 152: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6267  TRACE  : (39)     db_sqlite3.ego 153: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6268  TRACE  : (39)     db_sqlite3.ego 154: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6269  TRACE  : (39)     db_sqlite3.ego 155: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6270  TRACE  : (39)     db_sqlite3.ego 156: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6271  TRACE  : (39)     db_sqlite3.ego 157: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6272  TRACE  : (39)     db_sqlite3.ego 158: Push            "create table failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6273  TRACE  : (39)     db_sqlite3.ego 159: Call            2              stack[ 5]: create table failed, <nil>, compiler.TestNil(), co...
[20210409144645] 6274  TRACE  : (39)     db_sqlite3.ego 160: Call            1              stack[ 3]: [true create table failed], compiler.TestAssert(),...
[20210409144645] 6275  TRACE  : (39)     db_sqlite3.ego 161: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6276  TRACE  : (39)     db_sqlite3.ego 162: AtLine          28             stack[ 0]: <empty>
[20210409144645] 6277  TRACE  : (39)     db_sqlite3.ego 163: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6278  TRACE  : (39)     db_sqlite3.ego 164: Push            "Tom"          stack[ 1]: M<let>
[20210409144645] 6279  TRACE  : (39)     db_sqlite3.ego 165: Push            "Mary"         stack[ 2]: Tom, M<let>
[20210409144645] 6280  TRACE  : (39)     db_sqlite3.ego 166: Push            "Sarah"        stack[ 3]: Mary, Tom, M<let>
[20210409144645] 6281  TRACE  : (39)     db_sqlite3.ego 167: Push            "Chelsea"      stack[ 4]: Sarah, Mary, Tom, M<let>
[20210409144645] 6282  TRACE  : (39)     db_sqlite3.ego 168: Push            "Tony"         stack[ 5]: Chelsea, Sarah, Mary, Tom, M<let>
[20210409144645] 6283  TRACE  : (39)     db_sqlite3.ego 169: Array           5              stack[ 6]: Tony, Chelsea, Sarah, Mary, Tom, M<let>
[20210409144645] 6284  TRACE  : (39)     db_sqlite3.ego 170: SymbolCreate    "names"        stack[ 2]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], M<let...
[20210409144645] 6285  TRACE  : (39)     db_sqlite3.ego 171: Store           "names"        stack[ 2]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], M<let...
[20210409144645] 6286  TRACE  : (39)     db_sqlite3.ego 172: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6287  TRACE  : (39)     db_sqlite3.ego 173: AtLine          29             stack[ 0]: <empty>
[20210409144645] 6288  TRACE  : (39)     db_sqlite3.ego 174: PushScope                      stack[ 0]: <empty>
[20210409144645] 6289  TRACE  : (39)     db_sqlite3.ego 175: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6290  TRACE  : (39)     db_sqlite3.ego 176: Push            0              stack[ 1]: M<let>
[20210409144645] 6291  TRACE  : (39)     db_sqlite3.ego 177: SymbolCreate    "i"            stack[ 2]: 0, M<let>
[20210409144645] 6292  TRACE  : (39)     db_sqlite3.ego 178: Store           "i"            stack[ 2]: 0, M<let>
[20210409144645] 6293  TRACE  : (39)     db_sqlite3.ego 179: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6294  TRACE  : (39)     db_sqlite3.ego 180: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6295  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 1]: M<let>
[20210409144645] 6296  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 2]: 0, M<let>
[20210409144645] 6297  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 3]: functions.Length(), 0, M<let>
[20210409144645] 6298  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6299  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 3]: 5, 0, M<let>
[20210409144645] 6300  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 2]: true, M<let>
[20210409144645] 6301  TRACE  : (39)     db_sqlite3.ego 187: AtLine          29             stack[ 1]: M<let>
[20210409144645] 6302  TRACE  : (39)     db_sqlite3.ego 188: PushScope                      stack[ 1]: M<let>
[20210409144645] 6303  TRACE  : (39)     db_sqlite3.ego 189: AtLine          30             stack[ 1]: M<let>
[20210409144645] 6304  TRACE  : (39)     db_sqlite3.ego 190: Load            "d"            stack[ 1]: M<let>
[20210409144645] 6305  TRACE  : (39)     db_sqlite3.ego 191: SetThis                        stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6306  TRACE  : (39)     db_sqlite3.ego 192: Member          "Execute"      stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6307  TRACE  : (39)     db_sqlite3.ego 193: Push            "insert into members values($1, $2)" stack[ 2]: runtime.DBExecute(), M<let>
[20210409144645] 6308  TRACE  : (39)     db_sqlite3.ego 194: Push            101            stack[ 3]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 6309  TRACE  : (39)     db_sqlite3.ego 195: Load            "i"            stack[ 4]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6310  TRACE  : (39)     db_sqlite3.ego 196: Add                            stack[ 5]: 0, 101, insert into members values($1, $2), runtim...
[20210409144645] 6311  TRACE  : (39)     db_sqlite3.ego 197: Load            "names"        stack[ 4]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6312  TRACE  : (39)     db_sqlite3.ego 198: Load            "i"            stack[ 5]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 101, ...
[20210409144645] 6313  TRACE  : (39)     db_sqlite3.ego 199: LoadIndex                      stack[ 6]: 0, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 6314  TRACE  : (39)     db_sqlite3.ego 200: Call            3              stack[ 5]: Tom, 101, insert into members values($1, $2), runt...
[20210409144645] 6315  TRACE  : (39)     db_sqlite3.ego 201: StackCheck      2              stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 6316  TRACE  : (39)     db_sqlite3.ego 202: SymbolOptCreate "_"            stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 6317  TRACE  : (39)     db_sqlite3.ego 203: Store           "_"            stack[ 4]: 1, <nil>, M<results>, M<let>
[20210409144645] 6318  TRACE  : (39)     db_sqlite3.ego 204: SymbolOptCreate "e"            stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6319  TRACE  : (39)     db_sqlite3.ego 205: Store           "e"            stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6320  TRACE  : (39)     db_sqlite3.ego 206: DropToMarker                   stack[ 2]: M<results>, M<let>
[20210409144645] 6321  TRACE  : (39)     db_sqlite3.ego 207: AtLine          31             stack[ 1]: M<let>
[20210409144645] 6322  TRACE  : (39)     db_sqlite3.ego 208: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 6323  TRACE  : (39)     db_sqlite3.ego 209: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 6324  TRACE  : (39)     db_sqlite3.ego 210: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 6325  TRACE  : (39)     db_sqlite3.ego 211: Member          "assert"       stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6326  TRACE  : (39)     db_sqlite3.ego 212: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 6327  TRACE  : (39)     db_sqlite3.ego 213: SetThis                        stack[ 4]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6328  TRACE  : (39)     db_sqlite3.ego 214: Member          "Equal"        stack[ 4]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6329  TRACE  : (39)     db_sqlite3.ego 215: Load            "d"            stack[ 4]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6330  TRACE  : (39)     db_sqlite3.ego 216: Member          "rowCount"     stack[ 5]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6331  TRACE  : (39)     db_sqlite3.ego 217: Push            1              stack[ 5]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6332  TRACE  : (39)     db_sqlite3.ego 218: Push            "rowcount not updated correctly on insert" stack[ 6]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6333  TRACE  : (39)     db_sqlite3.ego 219: Call            3              stack[ 7]: rowcount not updated correctly on insert, 1, 1, co...
[20210409144645] 6334  TRACE  : (39)     db_sqlite3.ego 220: Call            1              stack[ 4]: [true rowcount not updated correctly on insert], c...
[20210409144645] 6335  TRACE  : (39)     db_sqlite3.ego 221: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 6336  TRACE  : (39)     db_sqlite3.ego 222: AtLine          32             stack[ 1]: M<let>
[20210409144645] 6337  TRACE  : (39)     db_sqlite3.ego 223: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 6338  TRACE  : (39)     db_sqlite3.ego 224: Push            M<assert>      stack[ 1]: M<let>
[20210409144645] 6339  TRACE  : (39)     db_sqlite3.ego 225: Load            "T"            stack[ 2]: M<assert>, M<let>
[20210409144645] 6340  TRACE  : (39)     db_sqlite3.ego 226: Member          "assert"       stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6341  TRACE  : (39)     db_sqlite3.ego 227: Load            "T"            stack[ 3]: compiler.TestAssert(), M<assert>, M<let>
[20210409144645] 6342  TRACE  : (39)     db_sqlite3.ego 228: SetThis                        stack[ 4]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6343  TRACE  : (39)     db_sqlite3.ego 229: Member          "Nil"          stack[ 4]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6344  TRACE  : (39)     db_sqlite3.ego 230: Load            "e"            stack[ 4]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6345  TRACE  : (39)     db_sqlite3.ego 231: Push            "insert failed" stack[ 5]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6346  TRACE  : (39)     db_sqlite3.ego 232: Call            2              stack[ 6]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6347  TRACE  : (39)     db_sqlite3.ego 233: Call            1              stack[ 4]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 6348  TRACE  : (39)     db_sqlite3.ego 234: DropToMarker                   stack[ 3]: true, M<assert>, M<let>
[20210409144645] 6349  TRACE  : (39)     db_sqlite3.ego 235: PopScope                       stack[ 1]: M<let>
[20210409144645] 6350  TRACE  : (39)     db_sqlite3.ego 236: Load            "i"            stack[ 1]: M<let>
[20210409144645] 6351  TRACE  : (39)     db_sqlite3.ego 237: Push            1              stack[ 2]: 0, M<let>
[20210409144645] 6352  TRACE  : (39)     db_sqlite3.ego 238: Add                            stack[ 3]: 1, 0, M<let>
[20210409144645] 6353  TRACE  : (39)     db_sqlite3.ego 239: Store           "i"            stack[ 2]: 1, M<let>
[20210409144645] 6354  TRACE  : (39)     db_sqlite3.ego 240: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6355  TRACE  : (39)     db_sqlite3.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 6356  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6357  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 1]: 1
[20210409144645] 6358  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 2]: functions.Length(), 1
[20210409144645] 6359  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6360  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 2]: 5, 1
[20210409144645] 6361  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 6362  TRACE  : (39)     db_sqlite3.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 6363  TRACE  : (39)     db_sqlite3.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 6364  TRACE  : (39)     db_sqlite3.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 6365  TRACE  : (39)     db_sqlite3.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6366  TRACE  : (39)     db_sqlite3.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6367  TRACE  : (39)     db_sqlite3.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6368  TRACE  : (39)     db_sqlite3.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 6369  TRACE  : (39)     db_sqlite3.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 6370  TRACE  : (39)     db_sqlite3.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6371  TRACE  : (39)     db_sqlite3.ego 196: Add                            stack[ 4]: 1, 101, insert into members values($1, $2), runtim...
[20210409144645] 6372  TRACE  : (39)     db_sqlite3.ego 197: Load            "names"        stack[ 3]: 102, insert into members values($1, $2), runtime.D...
[20210409144645] 6373  TRACE  : (39)     db_sqlite3.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 102, ...
[20210409144645] 6374  TRACE  : (39)     db_sqlite3.ego 199: LoadIndex                      stack[ 5]: 1, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 6375  TRACE  : (39)     db_sqlite3.ego 200: Call            3              stack[ 4]: Mary, 102, insert into members values($1, $2), run...
[20210409144645] 6376  TRACE  : (39)     db_sqlite3.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6377  TRACE  : (39)     db_sqlite3.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6378  TRACE  : (39)     db_sqlite3.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6379  TRACE  : (39)     db_sqlite3.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6380  TRACE  : (39)     db_sqlite3.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6381  TRACE  : (39)     db_sqlite3.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6382  TRACE  : (39)     db_sqlite3.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 6383  TRACE  : (39)     db_sqlite3.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6384  TRACE  : (39)     db_sqlite3.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6385  TRACE  : (39)     db_sqlite3.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6386  TRACE  : (39)     db_sqlite3.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6387  TRACE  : (39)     db_sqlite3.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6388  TRACE  : (39)     db_sqlite3.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6389  TRACE  : (39)     db_sqlite3.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6390  TRACE  : (39)     db_sqlite3.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6391  TRACE  : (39)     db_sqlite3.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6392  TRACE  : (39)     db_sqlite3.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6393  TRACE  : (39)     db_sqlite3.ego 218: Push            "rowcount not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6394  TRACE  : (39)     db_sqlite3.ego 219: Call            3              stack[ 6]: rowcount not updated correctly on insert, 1, 1, co...
[20210409144645] 6395  TRACE  : (39)     db_sqlite3.ego 220: Call            1              stack[ 3]: [true rowcount not updated correctly on insert], c...
[20210409144645] 6396  TRACE  : (39)     db_sqlite3.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6397  TRACE  : (39)     db_sqlite3.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 6398  TRACE  : (39)     db_sqlite3.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6399  TRACE  : (39)     db_sqlite3.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6400  TRACE  : (39)     db_sqlite3.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6401  TRACE  : (39)     db_sqlite3.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6402  TRACE  : (39)     db_sqlite3.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6403  TRACE  : (39)     db_sqlite3.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6404  TRACE  : (39)     db_sqlite3.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6405  TRACE  : (39)     db_sqlite3.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6406  TRACE  : (39)     db_sqlite3.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6407  TRACE  : (39)     db_sqlite3.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6408  TRACE  : (39)     db_sqlite3.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 6409  TRACE  : (39)     db_sqlite3.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6410  TRACE  : (39)     db_sqlite3.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 6411  TRACE  : (39)     db_sqlite3.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6412  TRACE  : (39)     db_sqlite3.ego 237: Push            1              stack[ 1]: 1
[20210409144645] 6413  TRACE  : (39)     db_sqlite3.ego 238: Add                            stack[ 2]: 1, 1
[20210409144645] 6414  TRACE  : (39)     db_sqlite3.ego 239: Store           "i"            stack[ 1]: 2
[20210409144645] 6415  TRACE  : (39)     db_sqlite3.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 6416  TRACE  : (39)     db_sqlite3.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 6417  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6418  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 1]: 2
[20210409144645] 6419  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 2]: functions.Length(), 2
[20210409144645] 6420  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6421  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 2]: 5, 2
[20210409144645] 6422  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 6423  TRACE  : (39)     db_sqlite3.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 6424  TRACE  : (39)     db_sqlite3.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 6425  TRACE  : (39)     db_sqlite3.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 6426  TRACE  : (39)     db_sqlite3.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6427  TRACE  : (39)     db_sqlite3.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6428  TRACE  : (39)     db_sqlite3.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6429  TRACE  : (39)     db_sqlite3.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 6430  TRACE  : (39)     db_sqlite3.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 6431  TRACE  : (39)     db_sqlite3.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6432  TRACE  : (39)     db_sqlite3.ego 196: Add                            stack[ 4]: 2, 101, insert into members values($1, $2), runtim...
[20210409144645] 6433  TRACE  : (39)     db_sqlite3.ego 197: Load            "names"        stack[ 3]: 103, insert into members values($1, $2), runtime.D...
[20210409144645] 6434  TRACE  : (39)     db_sqlite3.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 103, ...
[20210409144645] 6435  TRACE  : (39)     db_sqlite3.ego 199: LoadIndex                      stack[ 5]: 2, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 6436  TRACE  : (39)     db_sqlite3.ego 200: Call            3              stack[ 4]: Sarah, 103, insert into members values($1, $2), ru...
[20210409144645] 6437  TRACE  : (39)     db_sqlite3.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6438  TRACE  : (39)     db_sqlite3.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6439  TRACE  : (39)     db_sqlite3.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6440  TRACE  : (39)     db_sqlite3.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6441  TRACE  : (39)     db_sqlite3.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6442  TRACE  : (39)     db_sqlite3.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6443  TRACE  : (39)     db_sqlite3.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 6444  TRACE  : (39)     db_sqlite3.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6445  TRACE  : (39)     db_sqlite3.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6446  TRACE  : (39)     db_sqlite3.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6447  TRACE  : (39)     db_sqlite3.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6448  TRACE  : (39)     db_sqlite3.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6449  TRACE  : (39)     db_sqlite3.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6450  TRACE  : (39)     db_sqlite3.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6451  TRACE  : (39)     db_sqlite3.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6452  TRACE  : (39)     db_sqlite3.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6453  TRACE  : (39)     db_sqlite3.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6454  TRACE  : (39)     db_sqlite3.ego 218: Push            "rowcount not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6455  TRACE  : (39)     db_sqlite3.ego 219: Call            3              stack[ 6]: rowcount not updated correctly on insert, 1, 1, co...
[20210409144645] 6456  TRACE  : (39)     db_sqlite3.ego 220: Call            1              stack[ 3]: [true rowcount not updated correctly on insert], c...
[20210409144645] 6457  TRACE  : (39)     db_sqlite3.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6458  TRACE  : (39)     db_sqlite3.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 6459  TRACE  : (39)     db_sqlite3.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6460  TRACE  : (39)     db_sqlite3.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6461  TRACE  : (39)     db_sqlite3.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6462  TRACE  : (39)     db_sqlite3.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6463  TRACE  : (39)     db_sqlite3.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6464  TRACE  : (39)     db_sqlite3.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6465  TRACE  : (39)     db_sqlite3.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6466  TRACE  : (39)     db_sqlite3.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6467  TRACE  : (39)     db_sqlite3.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6468  TRACE  : (39)     db_sqlite3.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6469  TRACE  : (39)     db_sqlite3.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 6470  TRACE  : (39)     db_sqlite3.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6471  TRACE  : (39)     db_sqlite3.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 6472  TRACE  : (39)     db_sqlite3.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6473  TRACE  : (39)     db_sqlite3.ego 237: Push            1              stack[ 1]: 2
[20210409144645] 6474  TRACE  : (39)     db_sqlite3.ego 238: Add                            stack[ 2]: 1, 2
[20210409144645] 6475  TRACE  : (39)     db_sqlite3.ego 239: Store           "i"            stack[ 1]: 3
[20210409144645] 6476  TRACE  : (39)     db_sqlite3.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 6477  TRACE  : (39)     db_sqlite3.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 6478  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6479  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 1]: 3
[20210409144645] 6480  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 2]: functions.Length(), 3
[20210409144645] 6481  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6482  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 2]: 5, 3
[20210409144645] 6483  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 6484  TRACE  : (39)     db_sqlite3.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 6485  TRACE  : (39)     db_sqlite3.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 6486  TRACE  : (39)     db_sqlite3.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 6487  TRACE  : (39)     db_sqlite3.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6488  TRACE  : (39)     db_sqlite3.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6489  TRACE  : (39)     db_sqlite3.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6490  TRACE  : (39)     db_sqlite3.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 6491  TRACE  : (39)     db_sqlite3.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 6492  TRACE  : (39)     db_sqlite3.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6493  TRACE  : (39)     db_sqlite3.ego 196: Add                            stack[ 4]: 3, 101, insert into members values($1, $2), runtim...
[20210409144645] 6494  TRACE  : (39)     db_sqlite3.ego 197: Load            "names"        stack[ 3]: 104, insert into members values($1, $2), runtime.D...
[20210409144645] 6495  TRACE  : (39)     db_sqlite3.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 104, ...
[20210409144645] 6496  TRACE  : (39)     db_sqlite3.ego 199: LoadIndex                      stack[ 5]: 3, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 6497  TRACE  : (39)     db_sqlite3.ego 200: Call            3              stack[ 4]: Chelsea, 104, insert into members values($1, $2), ...
[20210409144645] 6498  TRACE  : (39)     db_sqlite3.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6499  TRACE  : (39)     db_sqlite3.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6500  TRACE  : (39)     db_sqlite3.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6501  TRACE  : (39)     db_sqlite3.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6502  TRACE  : (39)     db_sqlite3.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6503  TRACE  : (39)     db_sqlite3.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6504  TRACE  : (39)     db_sqlite3.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 6505  TRACE  : (39)     db_sqlite3.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6506  TRACE  : (39)     db_sqlite3.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6507  TRACE  : (39)     db_sqlite3.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6508  TRACE  : (39)     db_sqlite3.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6509  TRACE  : (39)     db_sqlite3.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6510  TRACE  : (39)     db_sqlite3.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6511  TRACE  : (39)     db_sqlite3.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6512  TRACE  : (39)     db_sqlite3.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6513  TRACE  : (39)     db_sqlite3.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6514  TRACE  : (39)     db_sqlite3.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6515  TRACE  : (39)     db_sqlite3.ego 218: Push            "rowcount not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6516  TRACE  : (39)     db_sqlite3.ego 219: Call            3              stack[ 6]: rowcount not updated correctly on insert, 1, 1, co...
[20210409144645] 6517  TRACE  : (39)     db_sqlite3.ego 220: Call            1              stack[ 3]: [true rowcount not updated correctly on insert], c...
[20210409144645] 6518  TRACE  : (39)     db_sqlite3.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6519  TRACE  : (39)     db_sqlite3.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 6520  TRACE  : (39)     db_sqlite3.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6521  TRACE  : (39)     db_sqlite3.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6522  TRACE  : (39)     db_sqlite3.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6523  TRACE  : (39)     db_sqlite3.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6524  TRACE  : (39)     db_sqlite3.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6525  TRACE  : (39)     db_sqlite3.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6526  TRACE  : (39)     db_sqlite3.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6527  TRACE  : (39)     db_sqlite3.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6528  TRACE  : (39)     db_sqlite3.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6529  TRACE  : (39)     db_sqlite3.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6530  TRACE  : (39)     db_sqlite3.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 6531  TRACE  : (39)     db_sqlite3.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6532  TRACE  : (39)     db_sqlite3.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 6533  TRACE  : (39)     db_sqlite3.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6534  TRACE  : (39)     db_sqlite3.ego 237: Push            1              stack[ 1]: 3
[20210409144645] 6535  TRACE  : (39)     db_sqlite3.ego 238: Add                            stack[ 2]: 1, 3
[20210409144645] 6536  TRACE  : (39)     db_sqlite3.ego 239: Store           "i"            stack[ 1]: 4
[20210409144645] 6537  TRACE  : (39)     db_sqlite3.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 6538  TRACE  : (39)     db_sqlite3.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 6539  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6540  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 1]: 4
[20210409144645] 6541  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 2]: functions.Length(), 4
[20210409144645] 6542  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6543  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 2]: 5, 4
[20210409144645] 6544  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 1]: true
[20210409144645] 6545  TRACE  : (39)     db_sqlite3.ego 187: AtLine          29             stack[ 0]: <empty>
[20210409144645] 6546  TRACE  : (39)     db_sqlite3.ego 188: PushScope                      stack[ 0]: <empty>
[20210409144645] 6547  TRACE  : (39)     db_sqlite3.ego 189: AtLine          30             stack[ 0]: <empty>
[20210409144645] 6548  TRACE  : (39)     db_sqlite3.ego 190: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6549  TRACE  : (39)     db_sqlite3.ego 191: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6550  TRACE  : (39)     db_sqlite3.ego 192: Member          "Execute"      stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6551  TRACE  : (39)     db_sqlite3.ego 193: Push            "insert into members values($1, $2)" stack[ 1]: runtime.DBExecute()
[20210409144645] 6552  TRACE  : (39)     db_sqlite3.ego 194: Push            101            stack[ 2]: insert into members values($1, $2), runtime.DBExec...
[20210409144645] 6553  TRACE  : (39)     db_sqlite3.ego 195: Load            "i"            stack[ 3]: 101, insert into members values($1, $2), runtime.D...
[20210409144645] 6554  TRACE  : (39)     db_sqlite3.ego 196: Add                            stack[ 4]: 4, 101, insert into members values($1, $2), runtim...
[20210409144645] 6555  TRACE  : (39)     db_sqlite3.ego 197: Load            "names"        stack[ 3]: 105, insert into members values($1, $2), runtime.D...
[20210409144645] 6556  TRACE  : (39)     db_sqlite3.ego 198: Load            "i"            stack[ 4]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 105, ...
[20210409144645] 6557  TRACE  : (39)     db_sqlite3.ego 199: LoadIndex                      stack[ 5]: 4, ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], 10...
[20210409144645] 6558  TRACE  : (39)     db_sqlite3.ego 200: Call            3              stack[ 4]: Tony, 105, insert into members values($1, $2), run...
[20210409144645] 6559  TRACE  : (39)     db_sqlite3.ego 201: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6560  TRACE  : (39)     db_sqlite3.ego 202: SymbolOptCreate "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6561  TRACE  : (39)     db_sqlite3.ego 203: Store           "_"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 6562  TRACE  : (39)     db_sqlite3.ego 204: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6563  TRACE  : (39)     db_sqlite3.ego 205: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6564  TRACE  : (39)     db_sqlite3.ego 206: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6565  TRACE  : (39)     db_sqlite3.ego 207: AtLine          31             stack[ 0]: <empty>
[20210409144645] 6566  TRACE  : (39)     db_sqlite3.ego 208: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6567  TRACE  : (39)     db_sqlite3.ego 209: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6568  TRACE  : (39)     db_sqlite3.ego 210: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6569  TRACE  : (39)     db_sqlite3.ego 211: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6570  TRACE  : (39)     db_sqlite3.ego 212: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6571  TRACE  : (39)     db_sqlite3.ego 213: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6572  TRACE  : (39)     db_sqlite3.ego 214: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6573  TRACE  : (39)     db_sqlite3.ego 215: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6574  TRACE  : (39)     db_sqlite3.ego 216: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6575  TRACE  : (39)     db_sqlite3.ego 217: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6576  TRACE  : (39)     db_sqlite3.ego 218: Push            "rowcount not updated correctly on insert" stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6577  TRACE  : (39)     db_sqlite3.ego 219: Call            3              stack[ 6]: rowcount not updated correctly on insert, 1, 1, co...
[20210409144645] 6578  TRACE  : (39)     db_sqlite3.ego 220: Call            1              stack[ 3]: [true rowcount not updated correctly on insert], c...
[20210409144645] 6579  TRACE  : (39)     db_sqlite3.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6580  TRACE  : (39)     db_sqlite3.ego 222: AtLine          32             stack[ 0]: <empty>
[20210409144645] 6581  TRACE  : (39)     db_sqlite3.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6582  TRACE  : (39)     db_sqlite3.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6583  TRACE  : (39)     db_sqlite3.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6584  TRACE  : (39)     db_sqlite3.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6585  TRACE  : (39)     db_sqlite3.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6586  TRACE  : (39)     db_sqlite3.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6587  TRACE  : (39)     db_sqlite3.ego 229: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6588  TRACE  : (39)     db_sqlite3.ego 230: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6589  TRACE  : (39)     db_sqlite3.ego 231: Push            "insert failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6590  TRACE  : (39)     db_sqlite3.ego 232: Call            2              stack[ 5]: insert failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6591  TRACE  : (39)     db_sqlite3.ego 233: Call            1              stack[ 3]: [true insert failed], compiler.TestAssert(), M<ass...
[20210409144645] 6592  TRACE  : (39)     db_sqlite3.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6593  TRACE  : (39)     db_sqlite3.ego 235: PopScope                       stack[ 0]: <empty>
[20210409144645] 6594  TRACE  : (39)     db_sqlite3.ego 236: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6595  TRACE  : (39)     db_sqlite3.ego 237: Push            1              stack[ 1]: 4
[20210409144645] 6596  TRACE  : (39)     db_sqlite3.ego 238: Add                            stack[ 2]: 1, 4
[20210409144645] 6597  TRACE  : (39)     db_sqlite3.ego 239: Store           "i"            stack[ 1]: 5
[20210409144645] 6598  TRACE  : (39)     db_sqlite3.ego 240: DropToMarker    M<let>         stack[ 0]: <empty>
[20210409144645] 6599  TRACE  : (39)     db_sqlite3.ego 241: Branch          @181           stack[ 0]: <empty>
[20210409144645] 6600  TRACE  : (39)     db_sqlite3.ego 181: Load            "i"            stack[ 0]: <empty>
[20210409144645] 6601  TRACE  : (39)     db_sqlite3.ego 182: Load            "len"          stack[ 1]: 5
[20210409144645] 6602  TRACE  : (39)     db_sqlite3.ego 183: Load            "names"        stack[ 2]: functions.Length(), 5
[20210409144645] 6603  TRACE  : (39)     db_sqlite3.ego 184: Call            1              stack[ 3]: ["Tom", "Mary", "Sarah", "Chelsea", "Tony"], funct...
[20210409144645] 6604  TRACE  : (39)     db_sqlite3.ego 185: LT                             stack[ 2]: 5, 5
[20210409144645] 6605  TRACE  : (39)     db_sqlite3.ego 186: BranchFalse     @242           stack[ 1]: false
[20210409144645] 6606  TRACE  : (39)     db_sqlite3.ego 242: PopScope                       stack[ 0]: <empty>
[20210409144645] 6607  TRACE  : (39)     db_sqlite3.ego 243: DropToMarker                   stack[ 0]: <empty>
[20210409144645] 6608  TRACE  : (39)     db_sqlite3.ego 244: AtLine          37             stack[ 0]: <empty>
[20210409144645] 6609  TRACE  : (39)     db_sqlite3.ego 245: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6610  TRACE  : (39)     db_sqlite3.ego 246: SetThis                        stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6611  TRACE  : (39)     db_sqlite3.ego 247: Member          "QueryResult"  stack[ 1]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6612  TRACE  : (39)     db_sqlite3.ego 248: Push            "select * from members order by name" stack[ 1]: runtime.DBQuery()
[20210409144645] 6613  TRACE  : (39)     db_sqlite3.ego 249: Call            1              stack[ 2]: select * from members order by name, runtime.DBQue...
[20210409144645] 6614  TRACE  : (39)     db_sqlite3.ego 250: StackCheck      2              stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6615  TRACE  : (39)     db_sqlite3.ego 251: SymbolOptCreate "r"            stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6616  TRACE  : (39)     db_sqlite3.ego 252: Store           "r"            stack[ 3]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6617  TRACE  : (39)     db_sqlite3.ego 253: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6618  TRACE  : (39)     db_sqlite3.ego 254: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6619  TRACE  : (39)     db_sqlite3.ego 255: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6620  TRACE  : (39)     db_sqlite3.ego 256: AtLine          38             stack[ 0]: <empty>
[20210409144645] 6621  TRACE  : (39)     db_sqlite3.ego 257: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6622  TRACE  : (39)     db_sqlite3.ego 258: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6623  TRACE  : (39)     db_sqlite3.ego 259: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6624  TRACE  : (39)     db_sqlite3.ego 260: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6625  TRACE  : (39)     db_sqlite3.ego 261: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6626  TRACE  : (39)     db_sqlite3.ego 262: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6627  TRACE  : (39)     db_sqlite3.ego 263: Member          "Nil"          stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6628  TRACE  : (39)     db_sqlite3.ego 264: Load            "e"            stack[ 3]: compiler.TestNil(), compiler.TestAssert(), M<asser...
[20210409144645] 6629  TRACE  : (39)     db_sqlite3.ego 265: Push            "select failed" stack[ 4]: <nil>, compiler.TestNil(), compiler.TestAssert(), ...
[20210409144645] 6630  TRACE  : (39)     db_sqlite3.ego 266: Call            2              stack[ 5]: select failed, <nil>, compiler.TestNil(), compiler...
[20210409144645] 6631  TRACE  : (39)     db_sqlite3.ego 267: Call            1              stack[ 3]: [true select failed], compiler.TestAssert(), M<ass...
[20210409144645] 6632  TRACE  : (39)     db_sqlite3.ego 268: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6633  TRACE  : (39)     db_sqlite3.ego 269: AtLine          39             stack[ 0]: <empty>
[20210409144645] 6634  TRACE  : (39)     db_sqlite3.ego 270: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6635  TRACE  : (39)     db_sqlite3.ego 271: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6636  TRACE  : (39)     db_sqlite3.ego 272: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6637  TRACE  : (39)     db_sqlite3.ego 273: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6638  TRACE  : (39)     db_sqlite3.ego 274: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6639  TRACE  : (39)     db_sqlite3.ego 275: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6640  TRACE  : (39)     db_sqlite3.ego 276: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6641  TRACE  : (39)     db_sqlite3.ego 277: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6642  TRACE  : (39)     db_sqlite3.ego 278: Load            "r"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 6643  TRACE  : (39)     db_sqlite3.ego 279: Call            1              stack[ 5]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6644  TRACE  : (39)     db_sqlite3.ego 280: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6645  TRACE  : (39)     db_sqlite3.ego 281: Push            "wrong number of rows returned" stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6646  TRACE  : (39)     db_sqlite3.ego 282: Call            3              stack[ 6]: wrong number of rows returned, 5, 5, compiler.Test...
[20210409144645] 6647  TRACE  : (39)     db_sqlite3.ego 283: Call            1              stack[ 3]: [true wrong number of rows returned], compiler.Tes...
[20210409144645] 6648  TRACE  : (39)     db_sqlite3.ego 284: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6649  TRACE  : (39)     db_sqlite3.ego 285: AtLine          40             stack[ 0]: <empty>
[20210409144645] 6650  TRACE  : (39)     db_sqlite3.ego 286: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6651  TRACE  : (39)     db_sqlite3.ego 287: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6652  TRACE  : (39)     db_sqlite3.ego 288: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6653  TRACE  : (39)     db_sqlite3.ego 289: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6654  TRACE  : (39)     db_sqlite3.ego 290: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6655  TRACE  : (39)     db_sqlite3.ego 291: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6656  TRACE  : (39)     db_sqlite3.ego 292: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6657  TRACE  : (39)     db_sqlite3.ego 293: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6658  TRACE  : (39)     db_sqlite3.ego 294: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6659  TRACE  : (39)     db_sqlite3.ego 295: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 6660  TRACE  : (39)     db_sqlite3.ego 296: Push            "wrong number of rows in result handle" stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6661  TRACE  : (39)     db_sqlite3.ego 297: Call            3              stack[ 6]: wrong number of rows in result handle, 5, 5, compi...
[20210409144645] 6662  TRACE  : (39)     db_sqlite3.ego 298: Call            1              stack[ 3]: [true wrong number of rows in result handle], comp...
[20210409144645] 6663  TRACE  : (39)     db_sqlite3.ego 299: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6664  TRACE  : (39)     db_sqlite3.ego 300: AtLine          41             stack[ 0]: <empty>
[20210409144645] 6665  TRACE  : (39)     db_sqlite3.ego 301: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6666  TRACE  : (39)     db_sqlite3.ego 302: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6667  TRACE  : (39)     db_sqlite3.ego 303: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6668  TRACE  : (39)     db_sqlite3.ego 304: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6669  TRACE  : (39)     db_sqlite3.ego 305: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6670  TRACE  : (39)     db_sqlite3.ego 306: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6671  TRACE  : (39)     db_sqlite3.ego 307: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6672  TRACE  : (39)     db_sqlite3.ego 308: Load            "r"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6673  TRACE  : (39)     db_sqlite3.ego 309: Push            0              stack[ 4]: [[104 Chelsea], [102 Mary], [103 Sarah], [101 Tom]...
[20210409144645] 6674  TRACE  : (39)     db_sqlite3.ego 310: LoadIndex                      stack[ 5]: 0, [[104 Chelsea], [102 Mary], [103 Sarah], [101 T...
[20210409144645] 6675  TRACE  : (39)     db_sqlite3.ego 311: Push            1              stack[ 4]: [104 Chelsea], compiler.TestEqual(), compiler.Test...
[20210409144645] 6676  TRACE  : (39)     db_sqlite3.ego 312: LoadIndex                      stack[ 5]: 1, [104 Chelsea], compiler.TestEqual(), compiler.T...
[20210409144645] 6677  TRACE  : (39)     db_sqlite3.ego 313: Push            "Chelsea"      stack[ 4]: Chelsea, compiler.TestEqual(), compiler.TestAssert...
[20210409144645] 6678  TRACE  : (39)     db_sqlite3.ego 314: Push            "unexpected result set value(s)" stack[ 5]: Chelsea, Chelsea, compiler.TestEqual(), compiler.T...
[20210409144645] 6679  TRACE  : (39)     db_sqlite3.ego 315: Call            3              stack[ 6]: unexpected result set value(s), Chelsea, Chelsea, ...
[20210409144645] 6680  TRACE  : (39)     db_sqlite3.ego 316: Call            1              stack[ 3]: [true unexpected result set value(s)], compiler.Te...
[20210409144645] 6681  TRACE  : (39)     db_sqlite3.ego 317: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6682  TRACE  : (39)     db_sqlite3.ego 318: AtLine          45             stack[ 0]: <empty>
[20210409144645] 6683  TRACE  : (39)     db_sqlite3.ego 319: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6684  TRACE  : (39)     db_sqlite3.ego 320: Load            "d"            stack[ 1]: M<call>
[20210409144645] 6685  TRACE  : (39)     db_sqlite3.ego 321: SetThis                        stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6686  TRACE  : (39)     db_sqlite3.ego 322: Member          "AsStruct"     stack[ 2]: db.Client{ asStruct: false, client: ptr <*sql.DB V...
[20210409144645] 6687  TRACE  : (39)     db_sqlite3.ego 323: Push            true           stack[ 2]: runtime.DataBaseAsStruct(), M<call>
[20210409144645] 6688  TRACE  : (39)     db_sqlite3.ego 324: Call            1              stack[ 3]: true, runtime.DataBaseAsStruct(), M<call>
[20210409144645] 6689  TRACE  : (39)     db_sqlite3.ego 325: DropToMarker    M<call>        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6690  TRACE  : (39)     db_sqlite3.ego 326: AtLine          46             stack[ 0]: <empty>
[20210409144645] 6691  TRACE  : (39)     db_sqlite3.ego 327: Load            "d"            stack[ 0]: <empty>
[20210409144645] 6692  TRACE  : (39)     db_sqlite3.ego 328: SetThis                        stack[ 1]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6693  TRACE  : (39)     db_sqlite3.ego 329: Member          "Query"        stack[ 1]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6694  TRACE  : (39)     db_sqlite3.ego 330: Push            "select * from members where name = $1" stack[ 1]: runtime.DBQueryRows()
[20210409144645] 6695  TRACE  : (39)     db_sqlite3.ego 331: Push            "Tony"         stack[ 2]: select * from members where name = $1, runtime.DBQ...
[20210409144645] 6696  TRACE  : (39)     db_sqlite3.ego 332: Call            2              stack[ 3]: Tony, select * from members where name = $1, runti...
[20210409144645] 6697  TRACE  : (39)     db_sqlite3.ego 333: StackCheck      2              stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6698  TRACE  : (39)     db_sqlite3.ego 334: SymbolOptCreate "r2"           stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6699  TRACE  : (39)     db_sqlite3.ego 335: Store           "r2"           stack[ 3]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6700  TRACE  : (39)     db_sqlite3.ego 336: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6701  TRACE  : (39)     db_sqlite3.ego 337: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 6702  TRACE  : (39)     db_sqlite3.ego 338: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 6703  TRACE  : (39)     db_sqlite3.ego 339: AtLine          47             stack[ 0]: <empty>
[20210409144645] 6704  TRACE  : (39)     db_sqlite3.ego 340: PushScope                      stack[ 0]: <empty>
[20210409144645] 6705  TRACE  : (39)     db_sqlite3.ego 341: Load            "r2"           stack[ 0]: <empty>
[20210409144645] 6706  TRACE  : (39)     db_sqlite3.ego 342: SetThis                        stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6707  TRACE  : (39)     db_sqlite3.ego 343: Member          "Next"         stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6708  TRACE  : (39)     db_sqlite3.ego 344: Call            0              stack[ 1]: runtime.rowsNext()
[20210409144645] 6709  TRACE  : (39)     db_sqlite3.ego 345: BranchFalse     @391           stack[ 1]: true
[20210409144645] 6710  TRACE  : (39)     db_sqlite3.ego 346: AtLine          47             stack[ 0]: <empty>
[20210409144645] 6711  TRACE  : (39)     db_sqlite3.ego 347: PushScope                      stack[ 0]: <empty>
[20210409144645] 6712  TRACE  : (39)     db_sqlite3.ego 348: AtLine          48             stack[ 0]: <empty>
[20210409144645] 6713  TRACE  : (39)     db_sqlite3.ego 349: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6714  TRACE  : (39)     db_sqlite3.ego 350: Load            "r2"           stack[ 1]: M<let>
[20210409144645] 6715  TRACE  : (39)     db_sqlite3.ego 351: SetThis                        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6716  TRACE  : (39)     db_sqlite3.ego 352: Member          "Scan"         stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6717  TRACE  : (39)     db_sqlite3.ego 353: Call            0              stack[ 2]: runtime.rowsScan(), M<let>
[20210409144645] 6718  TRACE  : (39)     db_sqlite3.ego 354: SymbolCreate    "info"         stack[ 4]: ["id": 105, "name": "Tony"], <nil>, M<results>, M<...
[20210409144645] 6719  TRACE  : (39)     db_sqlite3.ego 355: Store           "info"         stack[ 4]: ["id": 105, "name": "Tony"], <nil>, M<results>, M<...
[20210409144645] 6720  TRACE  : (39)     db_sqlite3.ego 356: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6721  TRACE  : (39)     db_sqlite3.ego 357: AtLine          49             stack[ 0]: <empty>
[20210409144645] 6722  TRACE  : (39)     db_sqlite3.ego 358: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6723  TRACE  : (39)     db_sqlite3.ego 359: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6724  TRACE  : (39)     db_sqlite3.ego 360: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6725  TRACE  : (39)     db_sqlite3.ego 361: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6726  TRACE  : (39)     db_sqlite3.ego 362: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6727  TRACE  : (39)     db_sqlite3.ego 363: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6728  TRACE  : (39)     db_sqlite3.ego 364: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6729  TRACE  : (39)     db_sqlite3.ego 365: Load            "info"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6730  TRACE  : (39)     db_sqlite3.ego 366: Member          "name"         stack[ 4]: ["id": 105, "name": "Tony"], compiler.TestEqual(),...
[20210409144645] 6731  TRACE  : (39)     db_sqlite3.ego 367: Push            "Tony"         stack[ 4]: Tony, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 6732  TRACE  : (39)     db_sqlite3.ego 368: Push            "incorrect name returned from query" stack[ 5]: Tony, Tony, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 6733  TRACE  : (39)     db_sqlite3.ego 369: Call            3              stack[ 6]: incorrect name returned from query, Tony, Tony, co...
[20210409144645] 6734  TRACE  : (39)     db_sqlite3.ego 370: Call            1              stack[ 3]: [true incorrect name returned from query], compile...
[20210409144645] 6735  TRACE  : (39)     db_sqlite3.ego 371: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6736  TRACE  : (39)     db_sqlite3.ego 372: AtLine          50             stack[ 0]: <empty>
[20210409144645] 6737  TRACE  : (39)     db_sqlite3.ego 373: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6738  TRACE  : (39)     db_sqlite3.ego 374: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6739  TRACE  : (39)     db_sqlite3.ego 375: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6740  TRACE  : (39)     db_sqlite3.ego 376: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6741  TRACE  : (39)     db_sqlite3.ego 377: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6742  TRACE  : (39)     db_sqlite3.ego 378: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6743  TRACE  : (39)     db_sqlite3.ego 379: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6744  TRACE  : (39)     db_sqlite3.ego 380: Load            "int"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6745  TRACE  : (39)     db_sqlite3.ego 381: Load            "info"         stack[ 4]: functions.Int(), compiler.TestEqual(), compiler.Te...
[20210409144645] 6746  TRACE  : (39)     db_sqlite3.ego 382: Member          "id"           stack[ 5]: ["id": 105, "name": "Tony"], functions.Int(), comp...
[20210409144645] 6747  TRACE  : (39)     db_sqlite3.ego 383: Call            1              stack[ 5]: 105, functions.Int(), compiler.TestEqual(), compil...
[20210409144645] 6748  TRACE  : (39)     db_sqlite3.ego 384: Push            105            stack[ 4]: 105, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 6749  TRACE  : (39)     db_sqlite3.ego 385: Push            "incorrect id returned from query" stack[ 5]: 105, 105, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 6750  TRACE  : (39)     db_sqlite3.ego 386: Call            3              stack[ 6]: incorrect id returned from query, 105, 105, compil...
[20210409144645] 6751  TRACE  : (39)     db_sqlite3.ego 387: Call            1              stack[ 3]: [true incorrect id returned from query], compiler....
[20210409144645] 6752  TRACE  : (39)     db_sqlite3.ego 388: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6753  TRACE  : (39)     db_sqlite3.ego 389: PopScope                       stack[ 0]: <empty>
[20210409144645] 6754  TRACE  : (39)     db_sqlite3.ego 390: Branch          @341           stack[ 0]: <empty>
[20210409144645] 6755  TRACE  : (39)     db_sqlite3.ego 341: Load            "r2"           stack[ 0]: <empty>
[20210409144645] 6756  TRACE  : (39)     db_sqlite3.ego 342: SetThis                        stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6757  TRACE  : (39)     db_sqlite3.ego 343: Member          "Next"         stack[ 1]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6758  TRACE  : (39)     db_sqlite3.ego 344: Call            0              stack[ 1]: runtime.rowsNext()
[20210409144645] 6759  TRACE  : (39)     db_sqlite3.ego 345: BranchFalse     @391           stack[ 1]: false
[20210409144645] 6760  TRACE  : (39)     db_sqlite3.ego 391: PopScope                       stack[ 0]: <empty>
[20210409144645] 6761  TRACE  : (39)     db_sqlite3.ego 392: AtLine          54             stack[ 0]: <empty>
[20210409144645] 6762  TRACE  : (39)     db_sqlite3.ego 393: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6763  TRACE  : (39)     db_sqlite3.ego 394: Load            "r2"           stack[ 1]: M<call>
[20210409144645] 6764  TRACE  : (39)     db_sqlite3.ego 395: SetThis                        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6765  TRACE  : (39)     db_sqlite3.ego 396: Member          "Close"        stack[ 2]: db.Rows{ client: ptr <*sql.DB Value>, db: db.Clien...
[20210409144645] 6766  TRACE  : (39)     db_sqlite3.ego 397: Call            0              stack[ 2]: runtime.rowsClose(), M<call>
[20210409144645] 6767  TRACE  : (39)     db_sqlite3.ego 398: DropToMarker    M<call>        stack[ 1]: M<call>
[20210409144645] 6768  TRACE  : (39)     db_sqlite3.ego 399: AtLine          57             stack[ 0]: <empty>
[20210409144645] 6769  TRACE  : (39)     db_sqlite3.ego 400: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6770  TRACE  : (39)     db_sqlite3.ego 401: Load            "d"            stack[ 1]: M<call>
[20210409144645] 6771  TRACE  : (39)     db_sqlite3.ego 402: SetThis                        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6772  TRACE  : (39)     db_sqlite3.ego 403: Member          "Close"        stack[ 2]: db.Client{ asStruct: true, client: ptr <*sql.DB Va...
[20210409144645] 6773  TRACE  : (39)     db_sqlite3.ego 404: Call            0              stack[ 2]: runtime.DBClose(), M<call>
[20210409144645] 6774  TRACE  : (39)     db_sqlite3.ego 405: DropToMarker    M<call>        stack[ 2]: true, M<call>
[20210409144645] 6775  TRACE  : (39)     db_sqlite3.ego 406: AtLine          58             stack[ 0]: <empty>
[20210409144645] 6776  TRACE  : (39)     db_sqlite3.ego 407: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6777  TRACE  : (39)     db_sqlite3.ego 408: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6778  TRACE  : (39)     db_sqlite3.ego 409: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6779  TRACE  : (39)     db_sqlite3.ego 410: Member          "assert"       stack[ 2]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6780  TRACE  : (39)     db_sqlite3.ego 411: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6781  TRACE  : (39)     db_sqlite3.ego 412: SetThis                        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6782  TRACE  : (39)     db_sqlite3.ego 413: Member          "Equal"        stack[ 3]: Testing{ description: "io: db using integrated sql...
[20210409144645] 6783  TRACE  : (39)     db_sqlite3.ego 414: Load            "d"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6784  TRACE  : (39)     db_sqlite3.ego 415: Member          "rowCount"     stack[ 4]: db.Client{ asStruct: false, client: <nil>, constr:...
[20210409144645] 6785  TRACE  : (39)     db_sqlite3.ego 416: Push            -1             stack[ 4]: -1, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 6786  TRACE  : (39)     db_sqlite3.ego 417: Push            "rowcount not updated after close" stack[ 5]: -1, -1, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 6787  TRACE  : (39)     db_sqlite3.ego 418: Call            3              stack[ 6]: rowcount not updated after close, -1, -1, compiler...
[20210409144645] 6788  TRACE  : (39)     db_sqlite3.ego 419: Call            1              stack[ 3]: [true rowcount not updated after close], compiler....
[20210409144645] 6789  TRACE  : (39)     db_sqlite3.ego 420: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6790  TRACE  : (39)     db_sqlite3.ego 421: AtLine          60             stack[ 0]: <empty>
[20210409144645] 6791  TRACE  : (39)     db_sqlite3.ego 422: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 6792  TRACE  : (39)     db_sqlite3.ego 423: Load            "io"           stack[ 1]: M<call>
[20210409144645] 6793  TRACE  : (39)     db_sqlite3.ego 424: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6794  TRACE  : (39)     db_sqlite3.ego 425: Member          "Delete"       stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6795  TRACE  : (39)     db_sqlite3.ego 426: Push            "foo.db"       stack[ 2]: functions.DeleteFile(), M<call>
[20210409144645] 6796  TRACE  : (39)     db_sqlite3.ego 427: Call            1              stack[ 3]: foo.db, functions.DeleteFile(), M<call>
[20210409144645] 6797  TRACE  : (39)     db_sqlite3.ego 428: DropToMarker    M<call>        stack[ 4]: true, <nil>, M<results>, M<call>
[20210409144645] 6798  TRACE  : (39)     db_sqlite3.ego 429: PopScope                       stack[ 0]: <empty>
[20210409144645] 6799  TRACE  : (39)     db_sqlite3.ego 430: PopScope                       stack[ 0]: <empty>
[20210409144645] 6800  TRACE  : (39)     db_sqlite3.ego 431: AtLine          64             stack[ 0]: <empty>
[20210409144645] 6801  TRACE  : (39)     db_sqlite3.ego 432: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6802  TRACE  : (39)     db_sqlite3.ego 433: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 6803  TRACE  : (39)     db_sqlite3.ego 434: Print                          stack[ 1]: (PASS)  
[20210409144645] 6804  TRACE  : (39)     db_sqlite3.ego 435: Timer           1              stack[ 0]: <empty>
[20210409144645] 6805  TRACE  : (39)     db_sqlite3.ego 436: Print                          stack[ 1]: 0.014s
[20210409144645] 6806  TRACE  : (39)     db_sqlite3.ego 437: Say             true           stack[ 0]: <empty>
TEST: io: db using integrated sqlite3                   (PASS)  0.014s
[20210409144645] 6807  TRACE  : (39)     db_sqlite3.ego 438: Stop                           stack[ 0]: <empty>
[20210409144645] 6808  TRACE  : *** Tracing expand.ego (40)  
[20210409144645] 6809  TRACE  : (40)         expand.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 6810  TRACE  : (40)         expand.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6811  TRACE  : (40)         expand.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 6812  TRACE  : (40)         expand.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6813  TRACE  : (40)         expand.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6814  TRACE  : (40)         expand.ego   5: Push            Testing{ description: "io: io.Expand() testing" } stack[ 0]: <empty>
[20210409144645] 6815  TRACE  : (40)         expand.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: io.Expand() testing" }
[20210409144645] 6816  TRACE  : (40)         expand.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 6817  TRACE  : (40)         expand.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 6818  TRACE  : (40)         expand.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 6819  TRACE  : (40)         expand.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: io.Expand() testing" }
[20210409144645] 6820  TRACE  : (40)         expand.ego  11: Print                          stack[ 1]: io: io.Expand() testing
[20210409144645] 6821  TRACE  : (40)         expand.ego  12: Push            "                           " stack[ 0]: <empty>
[20210409144645] 6822  TRACE  : (40)         expand.ego  13: Print                          stack[ 1]:                            
[20210409144645] 6823  TRACE  : (40)         expand.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 6824  TRACE  : (40)         expand.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 6825  TRACE  : (40)         expand.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 6826  TRACE  : (40)         expand.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 6827  TRACE  : (40)         expand.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6828  TRACE  : (40)         expand.ego  19: Push            "/Users/tom/go/src/github.com/tucats/ego/main.go" stack[ 1]: M<let>
[20210409144645] 6829  TRACE  : (40)         expand.ego  20: Array           1              stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/main.go, M...
[20210409144645] 6830  TRACE  : (40)         expand.ego  21: SymbolCreate    "want"         stack[ 2]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6831  TRACE  : (40)         expand.ego  22: Store           "want"         stack[ 2]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6832  TRACE  : (40)         expand.ego  23: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6833  TRACE  : (40)         expand.ego  24: AtLine          5              stack[ 0]: <empty>
[20210409144645] 6834  TRACE  : (40)         expand.ego  25: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6835  TRACE  : (40)         expand.ego  26: Load            "io"           stack[ 1]: M<let>
[20210409144645] 6836  TRACE  : (40)         expand.ego  27: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6837  TRACE  : (40)         expand.ego  28: Member          "Expand"       stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6838  TRACE  : (40)         expand.ego  29: Push            "/Users/tom/go/src/github.com/tucats/ego/main.go" stack[ 2]: functions.Expand(), M<let>
[20210409144645] 6839  TRACE  : (40)         expand.ego  30: Call            1              stack[ 3]: /Users/tom/go/src/github.com/tucats/ego/main.go, f...
[20210409144645] 6840  TRACE  : (40)         expand.ego  31: SymbolCreate    "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6841  TRACE  : (40)         expand.ego  32: Store           "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6842  TRACE  : (40)         expand.ego  33: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6843  TRACE  : (40)         expand.ego  34: AtLine          6              stack[ 0]: <empty>
[20210409144645] 6844  TRACE  : (40)         expand.ego  35: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6845  TRACE  : (40)         expand.ego  36: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6846  TRACE  : (40)         expand.ego  37: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6847  TRACE  : (40)         expand.ego  38: Member          "assert"       stack[ 2]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6848  TRACE  : (40)         expand.ego  39: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6849  TRACE  : (40)         expand.ego  40: SetThis                        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6850  TRACE  : (40)         expand.ego  41: Member          "Equal"        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6851  TRACE  : (40)         expand.ego  42: Load            "want"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6852  TRACE  : (40)         expand.ego  43: Load            "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6853  TRACE  : (40)         expand.ego  44: Push            "single path name with no extension" stack[ 5]: ["/Users/tom/go/src/github.com/tucats/ego/main.go"...
[20210409144645] 6854  TRACE  : (40)         expand.ego  45: Call            3              stack[ 6]: single path name with no extension, ["/Users/tom/g...
[20210409144645] 6855  TRACE  : (40)         expand.ego  46: Call            1              stack[ 3]: [true single path name with no extension], compile...
[20210409144645] 6856  TRACE  : (40)         expand.ego  47: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6857  TRACE  : (40)         expand.ego  48: PopScope                       stack[ 0]: <empty>
[20210409144645] 6858  TRACE  : (40)         expand.ego  49: AtLine          9              stack[ 0]: <empty>
[20210409144645] 6859  TRACE  : (40)         expand.ego  50: PushScope                      stack[ 0]: <empty>
[20210409144645] 6860  TRACE  : (40)         expand.ego  51: AtLine          10             stack[ 0]: <empty>
[20210409144645] 6861  TRACE  : (40)         expand.ego  52: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6862  TRACE  : (40)         expand.ego  53: Push            "/Users/tom/go/src/github.com/tucats/ego/app-cli/app/actions.go" stack[ 1]: M<let>
[20210409144645] 6863  TRACE  : (40)         expand.ego  54: SymbolCreate    "want"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6864  TRACE  : (40)         expand.ego  55: Store           "want"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6865  TRACE  : (40)         expand.ego  56: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6866  TRACE  : (40)         expand.ego  57: AtLine          11             stack[ 0]: <empty>
[20210409144645] 6867  TRACE  : (40)         expand.ego  58: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6868  TRACE  : (40)         expand.ego  59: Load            "io"           stack[ 1]: M<let>
[20210409144645] 6869  TRACE  : (40)         expand.ego  60: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6870  TRACE  : (40)         expand.ego  61: Member          "Expand"       stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6871  TRACE  : (40)         expand.ego  62: Push            "/Users/tom/go/src/github.com/tucats/ego/" stack[ 2]: functions.Expand(), M<let>
[20210409144645] 6872  TRACE  : (40)         expand.ego  63: Push            ".go"          stack[ 3]: /Users/tom/go/src/github.com/tucats/ego/, function...
[20210409144645] 6873  TRACE  : (40)         expand.ego  64: Call            2              stack[ 4]: .go, /Users/tom/go/src/github.com/tucats/ego/, fun...
[20210409144645] 6874  TRACE  : (40)         expand.ego  65: SymbolCreate    "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/app-cli/...
[20210409144645] 6875  TRACE  : (40)         expand.ego  66: Store           "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/app-cli/...
[20210409144645] 6876  TRACE  : (40)         expand.ego  67: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6877  TRACE  : (40)         expand.ego  68: AtLine          12             stack[ 0]: <empty>
[20210409144645] 6878  TRACE  : (40)         expand.ego  69: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6879  TRACE  : (40)         expand.ego  70: Load            "got"          stack[ 1]: M<let>
[20210409144645] 6880  TRACE  : (40)         expand.ego  71: Push            0              stack[ 2]: ["/Users/tom/go/src/github.com/tucats/ego/app-cli/...
[20210409144645] 6881  TRACE  : (40)         expand.ego  72: LoadIndex                      stack[ 3]: 0, ["/Users/tom/go/src/github.com/tucats/ego/app-c...
[20210409144645] 6882  TRACE  : (40)         expand.ego  73: SymbolCreate    "gotf"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6883  TRACE  : (40)         expand.ego  74: Store           "gotf"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6884  TRACE  : (40)         expand.ego  75: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6885  TRACE  : (40)         expand.ego  76: AtLine          13             stack[ 0]: <empty>
[20210409144645] 6886  TRACE  : (40)         expand.ego  77: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6887  TRACE  : (40)         expand.ego  78: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6888  TRACE  : (40)         expand.ego  79: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6889  TRACE  : (40)         expand.ego  80: Member          "assert"       stack[ 2]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6890  TRACE  : (40)         expand.ego  81: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6891  TRACE  : (40)         expand.ego  82: SetThis                        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6892  TRACE  : (40)         expand.ego  83: Member          "Equal"        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6893  TRACE  : (40)         expand.ego  84: Load            "want"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6894  TRACE  : (40)         expand.ego  85: Load            "gotf"         stack[ 4]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6895  TRACE  : (40)         expand.ego  86: Push            "single path name with .go extension" stack[ 5]: /Users/tom/go/src/github.com/tucats/ego/app-cli/ap...
[20210409144645] 6896  TRACE  : (40)         expand.ego  87: Call            3              stack[ 6]: single path name with .go extension, /Users/tom/go...
[20210409144645] 6897  TRACE  : (40)         expand.ego  88: Call            1              stack[ 3]: [true single path name with .go extension], compil...
[20210409144645] 6898  TRACE  : (40)         expand.ego  89: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6899  TRACE  : (40)         expand.ego  90: PopScope                       stack[ 0]: <empty>
[20210409144645] 6900  TRACE  : (40)         expand.ego  91: AtLine          16             stack[ 0]: <empty>
[20210409144645] 6901  TRACE  : (40)         expand.ego  92: PushScope                      stack[ 0]: <empty>
[20210409144645] 6902  TRACE  : (40)         expand.ego  93: AtLine          17             stack[ 0]: <empty>
[20210409144645] 6903  TRACE  : (40)         expand.ego  94: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6904  TRACE  : (40)         expand.ego  95: Push            "/Users/tom/go/src/github.com/tucats/ego/tests/README.md" stack[ 1]: M<let>
[20210409144645] 6905  TRACE  : (40)         expand.ego  96: SymbolCreate    "want"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/tests/READ...
[20210409144645] 6906  TRACE  : (40)         expand.ego  97: Store           "want"         stack[ 2]: /Users/tom/go/src/github.com/tucats/ego/tests/READ...
[20210409144645] 6907  TRACE  : (40)         expand.ego  98: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6908  TRACE  : (40)         expand.ego  99: AtLine          18             stack[ 0]: <empty>
[20210409144645] 6909  TRACE  : (40)         expand.ego 100: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6910  TRACE  : (40)         expand.ego 101: Load            "io"           stack[ 1]: M<let>
[20210409144645] 6911  TRACE  : (40)         expand.ego 102: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6912  TRACE  : (40)         expand.ego 103: Member          "Expand"       stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 6913  TRACE  : (40)         expand.ego 104: Push            "/Users/tom/go/src/github.com/tucats/ego/tests" stack[ 2]: functions.Expand(), M<let>
[20210409144645] 6914  TRACE  : (40)         expand.ego 105: Call            1              stack[ 3]: /Users/tom/go/src/github.com/tucats/ego/tests, fun...
[20210409144645] 6915  TRACE  : (40)         expand.ego 106: SymbolCreate    "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6916  TRACE  : (40)         expand.ego 107: Store           "got"          stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6917  TRACE  : (40)         expand.ego 108: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 6918  TRACE  : (40)         expand.ego 109: AtLine          19             stack[ 0]: <empty>
[20210409144645] 6919  TRACE  : (40)         expand.ego 110: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6920  TRACE  : (40)         expand.ego 111: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6921  TRACE  : (40)         expand.ego 112: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6922  TRACE  : (40)         expand.ego 113: Member          "assert"       stack[ 2]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6923  TRACE  : (40)         expand.ego 114: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6924  TRACE  : (40)         expand.ego 115: SetThis                        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6925  TRACE  : (40)         expand.ego 116: Member          "True"         stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6926  TRACE  : (40)         expand.ego 117: Load            "len"          stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 6927  TRACE  : (40)         expand.ego 118: Load            "got"          stack[ 4]: functions.Length(), compiler.TestTrue(), compiler....
[20210409144645] 6928  TRACE  : (40)         expand.ego 119: Call            1              stack[ 5]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6929  TRACE  : (40)         expand.ego 120: Push            0              stack[ 4]: 60, compiler.TestTrue(), compiler.TestAssert(), M<...
[20210409144645] 6930  TRACE  : (40)         expand.ego 121: GT                             stack[ 5]: 0, 60, compiler.TestTrue(), compiler.TestAssert(),...
[20210409144645] 6931  TRACE  : (40)         expand.ego 122: Push            "did not return a list" stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 6932  TRACE  : (40)         expand.ego 123: Call            2              stack[ 5]: did not return a list, true, compiler.TestTrue(), ...
[20210409144645] 6933  TRACE  : (40)         expand.ego 124: Call            1              stack[ 3]: [true did not return a list], compiler.TestAssert(...
[20210409144645] 6934  TRACE  : (40)         expand.ego 125: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6935  TRACE  : (40)         expand.ego 126: AtLine          20             stack[ 0]: <empty>
[20210409144645] 6936  TRACE  : (40)         expand.ego 127: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6937  TRACE  : (40)         expand.ego 128: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 6938  TRACE  : (40)         expand.ego 129: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 6939  TRACE  : (40)         expand.ego 130: Member          "assert"       stack[ 2]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6940  TRACE  : (40)         expand.ego 131: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 6941  TRACE  : (40)         expand.ego 132: SetThis                        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6942  TRACE  : (40)         expand.ego 133: Member          "Equal"        stack[ 3]: Testing{ description: "io: io.Expand() testing" },...
[20210409144645] 6943  TRACE  : (40)         expand.ego 134: Load            "got"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 6944  TRACE  : (40)         expand.ego 135: Push            0              stack[ 4]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6945  TRACE  : (40)         expand.ego 136: LoadIndex                      stack[ 5]: 0, ["/Users/tom/go/src/github.com/tucats/ego/tests...
[20210409144645] 6946  TRACE  : (40)         expand.ego 137: Load            "want"         stack[ 4]: /Users/tom/go/src/github.com/tucats/ego/tests/READ...
[20210409144645] 6947  TRACE  : (40)         expand.ego 138: Push            "single level deep directory, got " stack[ 5]: /Users/tom/go/src/github.com/tucats/ego/tests/READ...
[20210409144645] 6948  TRACE  : (40)         expand.ego 139: Load            "string"       stack[ 6]: single level deep directory, got , /Users/tom/go/s...
[20210409144645] 6949  TRACE  : (40)         expand.ego 140: Load            "got"          stack[ 7]: functions.String(), single level deep directory, g...
[20210409144645] 6950  TRACE  : (40)         expand.ego 141: Call            1              stack[ 8]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6951  TRACE  : (40)         expand.ego 142: Add                            stack[ 7]: ["/Users/tom/go/src/github.com/tucats/ego/tests/RE...
[20210409144645] 6952  TRACE  : (40)         expand.ego 143: Call            3              stack[ 6]: single level deep directory, got ["/Users/tom/go/s...
[20210409144645] 6953  TRACE  : (40)         expand.ego 144: Call            1              stack[ 3]: [true single level deep directory, got ["/Users/to...
[20210409144645] 6954  TRACE  : (40)         expand.ego 145: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 6955  TRACE  : (40)         expand.ego 146: PopScope                       stack[ 0]: <empty>
[20210409144645] 6956  TRACE  : (40)         expand.ego 147: AtLine          23             stack[ 0]: <empty>
[20210409144645] 6957  TRACE  : (40)         expand.ego 148: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6958  TRACE  : (40)         expand.ego 149: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 6959  TRACE  : (40)         expand.ego 150: Print                          stack[ 1]: (PASS)  
[20210409144645] 6960  TRACE  : (40)         expand.ego 151: Timer           1              stack[ 0]: <empty>
[20210409144645] 6961  TRACE  : (40)         expand.ego 152: Print                          stack[ 1]: 0.064s
[20210409144645] 6962  TRACE  : (40)         expand.ego 153: Say             true           stack[ 0]: <empty>
TEST: io: io.Expand() testing                           (PASS)  0.064s
[20210409144645] 6963  TRACE  : (40)         expand.ego 154: Stop                           stack[ 0]: <empty>
[20210409144645] 6964  TRACE  : *** Tracing sscanf.ego (41)  
[20210409144645] 6965  TRACE  : (41)         sscanf.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 6966  TRACE  : (41)         sscanf.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 6967  TRACE  : (41)         sscanf.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 6968  TRACE  : (41)         sscanf.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6969  TRACE  : (41)         sscanf.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 6970  TRACE  : (41)         sscanf.ego   5: Push            Testing{ description: "io: Sscanf" } stack[ 0]: <empty>
[20210409144645] 6971  TRACE  : (41)         sscanf.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: Sscanf" }
[20210409144645] 6972  TRACE  : (41)         sscanf.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 6973  TRACE  : (41)         sscanf.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 6974  TRACE  : (41)         sscanf.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 6975  TRACE  : (41)         sscanf.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: Sscanf" }
[20210409144645] 6976  TRACE  : (41)         sscanf.ego  11: Print                          stack[ 1]: io: Sscanf
[20210409144645] 6977  TRACE  : (41)         sscanf.ego  12: Push            "                                        " stack[ 0]: <empty>
[20210409144645] 6978  TRACE  : (41)         sscanf.ego  13: Print                          stack[ 1]:                                         
[20210409144645] 6979  TRACE  : (41)         sscanf.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 6980  TRACE  : (41)         sscanf.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 6981  TRACE  : (41)         sscanf.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 6982  TRACE  : (41)         sscanf.ego  17: AtLine          3              stack[ 0]: <empty>
[20210409144645] 6983  TRACE  : (41)         sscanf.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 6984  TRACE  : (41)         sscanf.ego  19: Push            0              stack[ 1]: M<let>
[20210409144645] 6985  TRACE  : (41)         sscanf.ego  20: SymbolCreate    "x"            stack[ 2]: 0, M<let>
[20210409144645] 6986  TRACE  : (41)         sscanf.ego  21: Store           "x"            stack[ 2]: 0, M<let>
[20210409144645] 6987  TRACE  : (41)         sscanf.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 6988  TRACE  : (41)         sscanf.ego  23: AtLine          4              stack[ 0]: <empty>
[20210409144645] 6989  TRACE  : (41)         sscanf.ego  24: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 6990  TRACE  : (41)         sscanf.ego  25: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 6991  TRACE  : (41)         sscanf.ego  26: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 6992  TRACE  : (41)         sscanf.ego  27: Push            "name 35"      stack[ 1]: functions.Sscanf()
[20210409144645] 6993  TRACE  : (41)         sscanf.ego  28: Push            "age %d"       stack[ 2]: name 35, functions.Sscanf()
[20210409144645] 6994  TRACE  : (41)         sscanf.ego  29: AddressOf       "x"            stack[ 3]: age %d, name 35, functions.Sscanf()
[20210409144645] 6995  TRACE  : (41)         sscanf.ego  30: Call            3              stack[ 4]: &0, age %d, name 35, functions.Sscanf()
[20210409144645] 6996  TRACE  : (41)         sscanf.ego  31: StackCheck      2              stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6997  TRACE  : (41)         sscanf.ego  32: SymbolOptCreate "n"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6998  TRACE  : (41)         sscanf.ego  33: Store           "n"            stack[ 3]: 0, <nil>, M<results>
[20210409144645] 6999  TRACE  : (41)         sscanf.ego  34: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7000  TRACE  : (41)         sscanf.ego  35: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7001  TRACE  : (41)         sscanf.ego  36: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7002  TRACE  : (41)         sscanf.ego  37: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7003  TRACE  : (41)         sscanf.ego  38: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7004  TRACE  : (41)         sscanf.ego  39: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7005  TRACE  : (41)         sscanf.ego  40: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7006  TRACE  : (41)         sscanf.ego  41: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7007  TRACE  : (41)         sscanf.ego  42: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7008  TRACE  : (41)         sscanf.ego  43: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7009  TRACE  : (41)         sscanf.ego  44: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7010  TRACE  : (41)         sscanf.ego  45: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7011  TRACE  : (41)         sscanf.ego  46: Push            0              stack[ 4]: 0, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7012  TRACE  : (41)         sscanf.ego  47: Call            2              stack[ 5]: 0, 0, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7013  TRACE  : (41)         sscanf.ego  48: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7014  TRACE  : (41)         sscanf.ego  49: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7015  TRACE  : (41)         sscanf.ego  50: AtLine          6              stack[ 0]: <empty>
[20210409144645] 7016  TRACE  : (41)         sscanf.ego  51: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7017  TRACE  : (41)         sscanf.ego  52: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7018  TRACE  : (41)         sscanf.ego  53: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7019  TRACE  : (41)         sscanf.ego  54: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7020  TRACE  : (41)         sscanf.ego  55: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7021  TRACE  : (41)         sscanf.ego  56: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7022  TRACE  : (41)         sscanf.ego  57: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7023  TRACE  : (41)         sscanf.ego  58: Load            "x"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7024  TRACE  : (41)         sscanf.ego  59: Push            0              stack[ 4]: 0, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7025  TRACE  : (41)         sscanf.ego  60: Call            2              stack[ 5]: 0, 0, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7026  TRACE  : (41)         sscanf.ego  61: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7027  TRACE  : (41)         sscanf.ego  62: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7028  TRACE  : (41)         sscanf.ego  63: AtLine          8              stack[ 0]: <empty>
[20210409144645] 7029  TRACE  : (41)         sscanf.ego  64: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 7030  TRACE  : (41)         sscanf.ego  65: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7031  TRACE  : (41)         sscanf.ego  66: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7032  TRACE  : (41)         sscanf.ego  67: Push            "age 35"       stack[ 1]: functions.Sscanf()
[20210409144645] 7033  TRACE  : (41)         sscanf.ego  68: Push            "age %d"       stack[ 2]: age 35, functions.Sscanf()
[20210409144645] 7034  TRACE  : (41)         sscanf.ego  69: AddressOf       "x"            stack[ 3]: age %d, age 35, functions.Sscanf()
[20210409144645] 7035  TRACE  : (41)         sscanf.ego  70: Call            3              stack[ 4]: &0, age %d, age 35, functions.Sscanf()
[20210409144645] 7036  TRACE  : (41)         sscanf.ego  71: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7037  TRACE  : (41)         sscanf.ego  72: SymbolOptCreate "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7038  TRACE  : (41)         sscanf.ego  73: Store           "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7039  TRACE  : (41)         sscanf.ego  74: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7040  TRACE  : (41)         sscanf.ego  75: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7041  TRACE  : (41)         sscanf.ego  76: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7042  TRACE  : (41)         sscanf.ego  77: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7043  TRACE  : (41)         sscanf.ego  78: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7044  TRACE  : (41)         sscanf.ego  79: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7045  TRACE  : (41)         sscanf.ego  80: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7046  TRACE  : (41)         sscanf.ego  81: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7047  TRACE  : (41)         sscanf.ego  82: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7048  TRACE  : (41)         sscanf.ego  83: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7049  TRACE  : (41)         sscanf.ego  84: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7050  TRACE  : (41)         sscanf.ego  85: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7051  TRACE  : (41)         sscanf.ego  86: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7052  TRACE  : (41)         sscanf.ego  87: Call            2              stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7053  TRACE  : (41)         sscanf.ego  88: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7054  TRACE  : (41)         sscanf.ego  89: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7055  TRACE  : (41)         sscanf.ego  90: AtLine          11             stack[ 0]: <empty>
[20210409144645] 7056  TRACE  : (41)         sscanf.ego  91: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7057  TRACE  : (41)         sscanf.ego  92: Push            false          stack[ 1]: M<let>
[20210409144645] 7058  TRACE  : (41)         sscanf.ego  93: SymbolCreate    "t"            stack[ 2]: false, M<let>
[20210409144645] 7059  TRACE  : (41)         sscanf.ego  94: Store           "t"            stack[ 2]: false, M<let>
[20210409144645] 7060  TRACE  : (41)         sscanf.ego  95: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7061  TRACE  : (41)         sscanf.ego  96: AtLine          12             stack[ 0]: <empty>
[20210409144645] 7062  TRACE  : (41)         sscanf.ego  97: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 7063  TRACE  : (41)         sscanf.ego  98: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7064  TRACE  : (41)         sscanf.ego  99: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7065  TRACE  : (41)         sscanf.ego 100: Push            "is true"      stack[ 1]: functions.Sscanf()
[20210409144645] 7066  TRACE  : (41)         sscanf.ego 101: Push            "is %t"        stack[ 2]: is true, functions.Sscanf()
[20210409144645] 7067  TRACE  : (41)         sscanf.ego 102: AddressOf       "t"            stack[ 3]: is %t, is true, functions.Sscanf()
[20210409144645] 7068  TRACE  : (41)         sscanf.ego 103: Call            3              stack[ 4]: &false, is %t, is true, functions.Sscanf()
[20210409144645] 7069  TRACE  : (41)         sscanf.ego 104: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7070  TRACE  : (41)         sscanf.ego 105: SymbolOptCreate "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7071  TRACE  : (41)         sscanf.ego 106: Store           "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7072  TRACE  : (41)         sscanf.ego 107: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7073  TRACE  : (41)         sscanf.ego 108: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7074  TRACE  : (41)         sscanf.ego 109: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7075  TRACE  : (41)         sscanf.ego 110: AtLine          13             stack[ 0]: <empty>
[20210409144645] 7076  TRACE  : (41)         sscanf.ego 111: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7077  TRACE  : (41)         sscanf.ego 112: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7078  TRACE  : (41)         sscanf.ego 113: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7079  TRACE  : (41)         sscanf.ego 114: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7080  TRACE  : (41)         sscanf.ego 115: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7081  TRACE  : (41)         sscanf.ego 116: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7082  TRACE  : (41)         sscanf.ego 117: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7083  TRACE  : (41)         sscanf.ego 118: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7084  TRACE  : (41)         sscanf.ego 119: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7085  TRACE  : (41)         sscanf.ego 120: Call            2              stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7086  TRACE  : (41)         sscanf.ego 121: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7087  TRACE  : (41)         sscanf.ego 122: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7088  TRACE  : (41)         sscanf.ego 123: AtLine          14             stack[ 0]: <empty>
[20210409144645] 7089  TRACE  : (41)         sscanf.ego 124: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7090  TRACE  : (41)         sscanf.ego 125: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7091  TRACE  : (41)         sscanf.ego 126: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7092  TRACE  : (41)         sscanf.ego 127: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7093  TRACE  : (41)         sscanf.ego 128: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7094  TRACE  : (41)         sscanf.ego 129: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7095  TRACE  : (41)         sscanf.ego 130: Member          "True"         stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7096  TRACE  : (41)         sscanf.ego 131: Load            "t"            stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 7097  TRACE  : (41)         sscanf.ego 132: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 7098  TRACE  : (41)         sscanf.ego 133: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7099  TRACE  : (41)         sscanf.ego 134: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7100  TRACE  : (41)         sscanf.ego 135: AtLine          16             stack[ 0]: <empty>
[20210409144645] 7101  TRACE  : (41)         sscanf.ego 136: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7102  TRACE  : (41)         sscanf.ego 137: Push            0              stack[ 1]: M<let>
[20210409144645] 7103  TRACE  : (41)         sscanf.ego 138: SymbolCreate    "f"            stack[ 2]: 0, M<let>
[20210409144645] 7104  TRACE  : (41)         sscanf.ego 139: Store           "f"            stack[ 2]: 0, M<let>
[20210409144645] 7105  TRACE  : (41)         sscanf.ego 140: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7106  TRACE  : (41)         sscanf.ego 141: AtLine          17             stack[ 0]: <empty>
[20210409144645] 7107  TRACE  : (41)         sscanf.ego 142: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 7108  TRACE  : (41)         sscanf.ego 143: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7109  TRACE  : (41)         sscanf.ego 144: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7110  TRACE  : (41)         sscanf.ego 145: Push            "3.14"         stack[ 1]: functions.Sscanf()
[20210409144645] 7111  TRACE  : (41)         sscanf.ego 146: Push            "%f"           stack[ 2]: 3.14, functions.Sscanf()
[20210409144645] 7112  TRACE  : (41)         sscanf.ego 147: AddressOf       "f"            stack[ 3]: %f, 3.14, functions.Sscanf()
[20210409144645] 7113  TRACE  : (41)         sscanf.ego 148: Call            3              stack[ 4]: &0, %f, 3.14, functions.Sscanf()
[20210409144645] 7114  TRACE  : (41)         sscanf.ego 149: StackCheck      2              stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7115  TRACE  : (41)         sscanf.ego 150: SymbolOptCreate "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7116  TRACE  : (41)         sscanf.ego 151: Store           "n"            stack[ 3]: 1, <nil>, M<results>
[20210409144645] 7117  TRACE  : (41)         sscanf.ego 152: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7118  TRACE  : (41)         sscanf.ego 153: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7119  TRACE  : (41)         sscanf.ego 154: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7120  TRACE  : (41)         sscanf.ego 155: AtLine          18             stack[ 0]: <empty>
[20210409144645] 7121  TRACE  : (41)         sscanf.ego 156: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7122  TRACE  : (41)         sscanf.ego 157: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7123  TRACE  : (41)         sscanf.ego 158: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7124  TRACE  : (41)         sscanf.ego 159: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7125  TRACE  : (41)         sscanf.ego 160: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7126  TRACE  : (41)         sscanf.ego 161: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7127  TRACE  : (41)         sscanf.ego 162: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7128  TRACE  : (41)         sscanf.ego 163: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7129  TRACE  : (41)         sscanf.ego 164: Push            1              stack[ 4]: 1, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7130  TRACE  : (41)         sscanf.ego 165: Call            2              stack[ 5]: 1, 1, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7131  TRACE  : (41)         sscanf.ego 166: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7132  TRACE  : (41)         sscanf.ego 167: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7133  TRACE  : (41)         sscanf.ego 168: AtLine          19             stack[ 0]: <empty>
[20210409144645] 7134  TRACE  : (41)         sscanf.ego 169: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7135  TRACE  : (41)         sscanf.ego 170: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7136  TRACE  : (41)         sscanf.ego 171: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7137  TRACE  : (41)         sscanf.ego 172: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7138  TRACE  : (41)         sscanf.ego 173: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7139  TRACE  : (41)         sscanf.ego 174: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7140  TRACE  : (41)         sscanf.ego 175: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7141  TRACE  : (41)         sscanf.ego 176: Load            "f"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7142  TRACE  : (41)         sscanf.ego 177: Push            3.14           stack[ 4]: 3.14, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7143  TRACE  : (41)         sscanf.ego 178: Call            2              stack[ 5]: 3.14, 3.14, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 7144  TRACE  : (41)         sscanf.ego 179: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7145  TRACE  : (41)         sscanf.ego 180: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7146  TRACE  : (41)         sscanf.ego 181: AtLine          21             stack[ 0]: <empty>
[20210409144645] 7147  TRACE  : (41)         sscanf.ego 182: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 7148  TRACE  : (41)         sscanf.ego 183: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7149  TRACE  : (41)         sscanf.ego 184: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7150  TRACE  : (41)         sscanf.ego 185: Push            "5 at 2.50"    stack[ 1]: functions.Sscanf()
[20210409144645] 7151  TRACE  : (41)         sscanf.ego 186: Push            "%d at %f"     stack[ 2]: 5 at 2.50, functions.Sscanf()
[20210409144645] 7152  TRACE  : (41)         sscanf.ego 187: AddressOf       "x"            stack[ 3]: %d at %f, 5 at 2.50, functions.Sscanf()
[20210409144645] 7153  TRACE  : (41)         sscanf.ego 188: AddressOf       "f"            stack[ 4]: &35, %d at %f, 5 at 2.50, functions.Sscanf()
[20210409144645] 7154  TRACE  : (41)         sscanf.ego 189: Call            4              stack[ 5]: &3.14, &35, %d at %f, 5 at 2.50, functions.Sscanf(...
[20210409144645] 7155  TRACE  : (41)         sscanf.ego 190: StackCheck      2              stack[ 3]: 2, <nil>, M<results>
[20210409144645] 7156  TRACE  : (41)         sscanf.ego 191: SymbolOptCreate "n"            stack[ 3]: 2, <nil>, M<results>
[20210409144645] 7157  TRACE  : (41)         sscanf.ego 192: Store           "n"            stack[ 3]: 2, <nil>, M<results>
[20210409144645] 7158  TRACE  : (41)         sscanf.ego 193: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7159  TRACE  : (41)         sscanf.ego 194: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7160  TRACE  : (41)         sscanf.ego 195: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7161  TRACE  : (41)         sscanf.ego 196: AtLine          22             stack[ 0]: <empty>
[20210409144645] 7162  TRACE  : (41)         sscanf.ego 197: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7163  TRACE  : (41)         sscanf.ego 198: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7164  TRACE  : (41)         sscanf.ego 199: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7165  TRACE  : (41)         sscanf.ego 200: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7166  TRACE  : (41)         sscanf.ego 201: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7167  TRACE  : (41)         sscanf.ego 202: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7168  TRACE  : (41)         sscanf.ego 203: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7169  TRACE  : (41)         sscanf.ego 204: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7170  TRACE  : (41)         sscanf.ego 205: Push            2              stack[ 4]: 2, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7171  TRACE  : (41)         sscanf.ego 206: Call            2              stack[ 5]: 2, 2, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7172  TRACE  : (41)         sscanf.ego 207: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7173  TRACE  : (41)         sscanf.ego 208: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7174  TRACE  : (41)         sscanf.ego 209: AtLine          23             stack[ 0]: <empty>
[20210409144645] 7175  TRACE  : (41)         sscanf.ego 210: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7176  TRACE  : (41)         sscanf.ego 211: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7177  TRACE  : (41)         sscanf.ego 212: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7178  TRACE  : (41)         sscanf.ego 213: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7179  TRACE  : (41)         sscanf.ego 214: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7180  TRACE  : (41)         sscanf.ego 215: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7181  TRACE  : (41)         sscanf.ego 216: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7182  TRACE  : (41)         sscanf.ego 217: Load            "f"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7183  TRACE  : (41)         sscanf.ego 218: Push            2.5            stack[ 4]: 2.5, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 7184  TRACE  : (41)         sscanf.ego 219: Call            2              stack[ 5]: 2.5, 2.5, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 7185  TRACE  : (41)         sscanf.ego 220: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7186  TRACE  : (41)         sscanf.ego 221: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7187  TRACE  : (41)         sscanf.ego 222: AtLine          24             stack[ 0]: <empty>
[20210409144645] 7188  TRACE  : (41)         sscanf.ego 223: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7189  TRACE  : (41)         sscanf.ego 224: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7190  TRACE  : (41)         sscanf.ego 225: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7191  TRACE  : (41)         sscanf.ego 226: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7192  TRACE  : (41)         sscanf.ego 227: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7193  TRACE  : (41)         sscanf.ego 228: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7194  TRACE  : (41)         sscanf.ego 229: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7195  TRACE  : (41)         sscanf.ego 230: Load            "x"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7196  TRACE  : (41)         sscanf.ego 231: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7197  TRACE  : (41)         sscanf.ego 232: Call            2              stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7198  TRACE  : (41)         sscanf.ego 233: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7199  TRACE  : (41)         sscanf.ego 234: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7200  TRACE  : (41)         sscanf.ego 235: AtLine          26             stack[ 0]: <empty>
[20210409144645] 7201  TRACE  : (41)         sscanf.ego 236: Load            "fmt"          stack[ 0]: <empty>
[20210409144645] 7202  TRACE  : (41)         sscanf.ego 237: SetThis                        stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7203  TRACE  : (41)         sscanf.ego 238: Member          "Sscanf"       stack[ 1]: Pkg< Print: functions.Print(), Printf: functions.P...
[20210409144645] 7204  TRACE  : (41)         sscanf.ego 239: Push            "thirty"       stack[ 1]: functions.Sscanf()
[20210409144645] 7205  TRACE  : (41)         sscanf.ego 240: Push            "%d"           stack[ 2]: thirty, functions.Sscanf()
[20210409144645] 7206  TRACE  : (41)         sscanf.ego 241: AddressOf       "x"            stack[ 3]: %d, thirty, functions.Sscanf()
[20210409144645] 7207  TRACE  : (41)         sscanf.ego 242: Call            3              stack[ 4]: &5, %d, thirty, functions.Sscanf()
[20210409144645] 7208  TRACE  : (41)         sscanf.ego 243: StackCheck      2              stack[ 3]: 0, expected integer: Sscanf(), M<results>
[20210409144645] 7209  TRACE  : (41)         sscanf.ego 244: SymbolOptCreate "n"            stack[ 3]: 0, expected integer: Sscanf(), M<results>
[20210409144645] 7210  TRACE  : (41)         sscanf.ego 245: Store           "n"            stack[ 3]: 0, expected integer: Sscanf(), M<results>
[20210409144645] 7211  TRACE  : (41)         sscanf.ego 246: SymbolOptCreate "e"            stack[ 2]: expected integer: Sscanf(), M<results>
[20210409144645] 7212  TRACE  : (41)         sscanf.ego 247: Store           "e"            stack[ 2]: expected integer: Sscanf(), M<results>
[20210409144645] 7213  TRACE  : (41)         sscanf.ego 248: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7214  TRACE  : (41)         sscanf.ego 249: AtLine          27             stack[ 0]: <empty>
[20210409144645] 7215  TRACE  : (41)         sscanf.ego 250: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7216  TRACE  : (41)         sscanf.ego 251: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7217  TRACE  : (41)         sscanf.ego 252: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7218  TRACE  : (41)         sscanf.ego 253: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7219  TRACE  : (41)         sscanf.ego 254: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7220  TRACE  : (41)         sscanf.ego 255: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7221  TRACE  : (41)         sscanf.ego 256: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7222  TRACE  : (41)         sscanf.ego 257: Load            "n"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7223  TRACE  : (41)         sscanf.ego 258: Push            0              stack[ 4]: 0, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7224  TRACE  : (41)         sscanf.ego 259: Call            2              stack[ 5]: 0, 0, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7225  TRACE  : (41)         sscanf.ego 260: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7226  TRACE  : (41)         sscanf.ego 261: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7227  TRACE  : (41)         sscanf.ego 262: AtLine          28             stack[ 0]: <empty>
[20210409144645] 7228  TRACE  : (41)         sscanf.ego 263: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7229  TRACE  : (41)         sscanf.ego 264: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7230  TRACE  : (41)         sscanf.ego 265: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7231  TRACE  : (41)         sscanf.ego 266: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7232  TRACE  : (41)         sscanf.ego 267: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7233  TRACE  : (41)         sscanf.ego 268: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7234  TRACE  : (41)         sscanf.ego 269: Member          "True"         stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7235  TRACE  : (41)         sscanf.ego 270: Load            "e"            stack[ 3]: compiler.TestTrue(), compiler.TestAssert(), M<asse...
[20210409144645] 7236  TRACE  : (41)         sscanf.ego 271: Push                           stack[ 4]: expected integer: Sscanf(), compiler.TestTrue(), c...
[20210409144645] 7237  TRACE  : (41)         sscanf.ego 272: NotEqual                       stack[ 5]: <nil>, expected integer: Sscanf(), compiler.TestTr...
[20210409144645] 7238  TRACE  : (41)         sscanf.ego 273: Call            1              stack[ 4]: true, compiler.TestTrue(), compiler.TestAssert(), ...
[20210409144645] 7239  TRACE  : (41)         sscanf.ego 274: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7240  TRACE  : (41)         sscanf.ego 275: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7241  TRACE  : (41)         sscanf.ego 276: AtLine          29             stack[ 0]: <empty>
[20210409144645] 7242  TRACE  : (41)         sscanf.ego 277: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7243  TRACE  : (41)         sscanf.ego 278: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7244  TRACE  : (41)         sscanf.ego 279: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7245  TRACE  : (41)         sscanf.ego 280: Member          "assert"       stack[ 2]: Testing{ description: "io: Sscanf" }, M<assert>
[20210409144645] 7246  TRACE  : (41)         sscanf.ego 281: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7247  TRACE  : (41)         sscanf.ego 282: SetThis                        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7248  TRACE  : (41)         sscanf.ego 283: Member          "Equal"        stack[ 3]: Testing{ description: "io: Sscanf" }, compiler.Tes...
[20210409144645] 7249  TRACE  : (41)         sscanf.ego 284: Load            "x"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 7250  TRACE  : (41)         sscanf.ego 285: Push            5              stack[ 4]: 5, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 7251  TRACE  : (41)         sscanf.ego 286: Call            2              stack[ 5]: 5, 5, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 7252  TRACE  : (41)         sscanf.ego 287: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7253  TRACE  : (41)         sscanf.ego 288: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7254  TRACE  : (41)         sscanf.ego 289: PopScope                       stack[ 0]: <empty>
[20210409144645] 7255  TRACE  : (41)         sscanf.ego 290: AtLine          32             stack[ 0]: <empty>
[20210409144645] 7256  TRACE  : (41)         sscanf.ego 291: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7257  TRACE  : (41)         sscanf.ego 292: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7258  TRACE  : (41)         sscanf.ego 293: Print                          stack[ 1]: (PASS)  
[20210409144645] 7259  TRACE  : (41)         sscanf.ego 294: Timer           1              stack[ 0]: <empty>
[20210409144645] 7260  TRACE  : (41)         sscanf.ego 295: Print                          stack[ 1]: 0.002s
[20210409144645] 7261  TRACE  : (41)         sscanf.ego 296: Say             true           stack[ 0]: <empty>
TEST: io: Sscanf                                        (PASS)  0.002s
[20210409144645] 7262  TRACE  : (41)         sscanf.ego 297: Stop                           stack[ 0]: <empty>
[20210409144645] 7263  TRACE  : *** Tracing table_sort.ego (42)  
[20210409144645] 7264  TRACE  : (42)     table_sort.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 7265  TRACE  : (42)     table_sort.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7266  TRACE  : (42)     table_sort.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7267  TRACE  : (42)     table_sort.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7268  TRACE  : (42)     table_sort.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7269  TRACE  : (42)     table_sort.ego   5: Push            Testing{ description: "io: table sort" } stack[ 0]: <empty>
[20210409144645] 7270  TRACE  : (42)     table_sort.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: table sort" }
[20210409144645] 7271  TRACE  : (42)     table_sort.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7272  TRACE  : (42)     table_sort.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7273  TRACE  : (42)     table_sort.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7274  TRACE  : (42)     table_sort.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: table sort" }
[20210409144645] 7275  TRACE  : (42)     table_sort.ego  11: Print                          stack[ 1]: io: table sort
[20210409144645] 7276  TRACE  : (42)     table_sort.ego  12: Push            "                                    " stack[ 0]: <empty>
[20210409144645] 7277  TRACE  : (42)     table_sort.ego  13: Print                          stack[ 1]:                                     
[20210409144645] 7278  TRACE  : (42)     table_sort.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7279  TRACE  : (42)     table_sort.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 7280  TRACE  : (42)     table_sort.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 7281  TRACE  : (42)     table_sort.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 7282  TRACE  : (42)     table_sort.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7283  TRACE  : (42)     table_sort.ego  19: Push            "Name"         stack[ 1]: M<let>
[20210409144645] 7284  TRACE  : (42)     table_sort.ego  20: Push            "Age"          stack[ 2]: Name, M<let>
[20210409144645] 7285  TRACE  : (42)     table_sort.ego  21: Push            "Title"        stack[ 3]: Age, Name, M<let>
[20210409144645] 7286  TRACE  : (42)     table_sort.ego  22: Push            T(string)      stack[ 4]: Title, Age, Name, M<let>
[20210409144645] 7287  TRACE  : (42)     table_sort.ego  23: MakeArray       3              stack[ 5]: T(string), Title, Age, Name, M<let>
[20210409144645] 7288  TRACE  : (42)     table_sort.ego  24: SymbolCreate    "h"            stack[ 2]: ["Name", "Age", "Title"], M<let>
[20210409144645] 7289  TRACE  : (42)     table_sort.ego  25: Store           "h"            stack[ 2]: ["Name", "Age", "Title"], M<let>
[20210409144645] 7290  TRACE  : (42)     table_sort.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7291  TRACE  : (42)     table_sort.ego  27: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7292  TRACE  : (42)     table_sort.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7293  TRACE  : (42)     table_sort.ego  29: Load            "tables"       stack[ 1]: M<let>
[20210409144645] 7294  TRACE  : (42)     table_sort.ego  30: SetThis                        stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 7295  TRACE  : (42)     table_sort.ego  31: Member          "New"          stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 7296  TRACE  : (42)     table_sort.ego  32: Load            "h"            stack[ 2]: runtime.TableNew(), M<let>
[20210409144645] 7297  TRACE  : (42)     table_sort.ego  33: Call            1              stack[ 3]: ["Name", "Age", "Title"], runtime.TableNew(), M<le...
[20210409144645] 7298  TRACE  : (42)     table_sort.ego  34: SymbolCreate    "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7299  TRACE  : (42)     table_sort.ego  35: Store           "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7300  TRACE  : (42)     table_sort.ego  36: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7301  TRACE  : (42)     table_sort.ego  37: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7302  TRACE  : (42)     table_sort.ego  38: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7303  TRACE  : (42)     table_sort.ego  39: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7304  TRACE  : (42)     table_sort.ego  40: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7305  TRACE  : (42)     table_sort.ego  41: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7306  TRACE  : (42)     table_sort.ego  42: Push            "Tom"          stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 7307  TRACE  : (42)     table_sort.ego  43: Push            "53"           stack[ 3]: Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7308  TRACE  : (42)     table_sort.ego  44: Push            "Dad"          stack[ 4]: 53, Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7309  TRACE  : (42)     table_sort.ego  45: Call            3              stack[ 5]: Dad, 53, Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7310  TRACE  : (42)     table_sort.ego  46: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7311  TRACE  : (42)     table_sort.ego  47: AtLine          8              stack[ 0]: <empty>
[20210409144645] 7312  TRACE  : (42)     table_sort.ego  48: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7313  TRACE  : (42)     table_sort.ego  49: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7314  TRACE  : (42)     table_sort.ego  50: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7315  TRACE  : (42)     table_sort.ego  51: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7316  TRACE  : (42)     table_sort.ego  52: Push            "Mary"         stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 7317  TRACE  : (42)     table_sort.ego  53: Push            "47"           stack[ 3]: Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7318  TRACE  : (42)     table_sort.ego  54: Push            "Mom"          stack[ 4]: 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7319  TRACE  : (42)     table_sort.ego  55: Push            T(string)      stack[ 5]: Mom, 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7320  TRACE  : (42)     table_sort.ego  56: MakeArray       3              stack[ 6]: T(string), Mom, 47, Mary, runtime.TableAddRow(), M...
[20210409144645] 7321  TRACE  : (42)     table_sort.ego  57: Flatten                        stack[ 3]: ["Mary", "47", "Mom"], runtime.TableAddRow(), M<ca...
[20210409144645] 7322  TRACE  : (42)     table_sort.ego  58: Call            1              stack[ 5]: Mom, 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7323  TRACE  : (42)     table_sort.ego  59: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7324  TRACE  : (42)     table_sort.ego  60: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7325  TRACE  : (42)     table_sort.ego  61: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7326  TRACE  : (42)     table_sort.ego  62: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7327  TRACE  : (42)     table_sort.ego  63: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7328  TRACE  : (42)     table_sort.ego  64: Member          "Sort"         stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7329  TRACE  : (42)     table_sort.ego  65: Push            "Name"         stack[ 2]: runtime.TableSort(), M<call>
[20210409144645] 7330  TRACE  : (42)     table_sort.ego  66: Call            1              stack[ 3]: Name, runtime.TableSort(), M<call>
[20210409144645] 7331  TRACE  : (42)     table_sort.ego  67: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7332  TRACE  : (42)     table_sort.ego  68: AtLine          14             stack[ 0]: <empty>
[20210409144645] 7333  TRACE  : (42)     table_sort.ego  69: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7334  TRACE  : (42)     table_sort.ego  70: Load            "new"          stack[ 1]: M<let>
[20210409144645] 7335  TRACE  : (42)     table_sort.ego  71: Push            T([]struct{Age int, Name string, Title string}) stack[ 2]: functions.New(), M<let>
[20210409144645] 7336  TRACE  : (42)     table_sort.ego  72: Call            1              stack[ 3]: T([]struct{Age int, Name string, Title string}), f...
[20210409144645] 7337  TRACE  : (42)     table_sort.ego  73: SymbolCreate    "r"            stack[ 2]: [], M<let>
[20210409144645] 7338  TRACE  : (42)     table_sort.ego  74: Store           "r"            stack[ 2]: [], M<let>
[20210409144645] 7339  TRACE  : (42)     table_sort.ego  75: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7340  TRACE  : (42)     table_sort.ego  76: AtLine          18             stack[ 0]: <empty>
[20210409144645] 7341  TRACE  : (42)     table_sort.ego  77: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7342  TRACE  : (42)     table_sort.ego  78: Load            "json"         stack[ 1]: M<call>
[20210409144645] 7343  TRACE  : (42)     table_sort.ego  79: SetThis                        stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7344  TRACE  : (42)     table_sort.ego  80: Member          "Unmarshal"    stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7345  TRACE  : (42)     table_sort.ego  81: Load            "t"            stack[ 2]: functions.Decode(), M<call>
[20210409144645] 7346  TRACE  : (42)     table_sort.ego  82: SetThis                        stack[ 3]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7347  TRACE  : (42)     table_sort.ego  83: Member          "String"       stack[ 3]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7348  TRACE  : (42)     table_sort.ego  84: Push            "json"         stack[ 3]: runtime.TableString(), functions.Decode(), M<call>
[20210409144645] 7349  TRACE  : (42)     table_sort.ego  85: Call            1              stack[ 4]: json, runtime.TableString(), functions.Decode(), M...
[20210409144645] 7350  TRACE  : (42)     table_sort.ego  86: AddressOf       "r"            stack[ 3]: [{"Name":"Mary","Age":47,"Title":"Mom"},{"Name":"T...
[20210409144645] 7351  TRACE  : (42)     table_sort.ego  87: Call            2              stack[ 4]: &&datatypes.EgoArray{data:[]interface {}{}, valueT...
[20210409144645] 7352  TRACE  : (42)     table_sort.ego  88: DropToMarker    M<call>        stack[ 4]: [{ Age: 47, Name: "Mary", Title: "Mom" }, { Age: 5...
[20210409144645] 7353  TRACE  : (42)     table_sort.ego  89: AtLine          21             stack[ 0]: <empty>
[20210409144645] 7354  TRACE  : (42)     table_sort.ego  90: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7355  TRACE  : (42)     table_sort.ego  91: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7356  TRACE  : (42)     table_sort.ego  92: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7357  TRACE  : (42)     table_sort.ego  93: Member          "assert"       stack[ 2]: Testing{ description: "io: table sort" }, M<assert...
[20210409144645] 7358  TRACE  : (42)     table_sort.ego  94: Load            "r"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7359  TRACE  : (42)     table_sort.ego  95: Push            0              stack[ 3]: [{ Age: 47, Name: "Mary", Title: "Mom" }, { Age: 5...
[20210409144645] 7360  TRACE  : (42)     table_sort.ego  96: LoadIndex                      stack[ 4]: 0, [{ Age: 47, Name: "Mary", Title: "Mom" }, { Age...
[20210409144645] 7361  TRACE  : (42)     table_sort.ego  97: Member          "Name"         stack[ 3]: { Age: 47, Name: "Mary", Title: "Mom" }, compiler....
[20210409144645] 7362  TRACE  : (42)     table_sort.ego  98: Push            "Mary"         stack[ 3]: Mary, compiler.TestAssert(), M<assert>
[20210409144645] 7363  TRACE  : (42)     table_sort.ego  99: Equal                          stack[ 4]: Mary, Mary, compiler.TestAssert(), M<assert>
[20210409144645] 7364  TRACE  : (42)     table_sort.ego 100: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7365  TRACE  : (42)     table_sort.ego 101: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7366  TRACE  : (42)     table_sort.ego 102: AtLine          22             stack[ 0]: <empty>
[20210409144645] 7367  TRACE  : (42)     table_sort.ego 103: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7368  TRACE  : (42)     table_sort.ego 104: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7369  TRACE  : (42)     table_sort.ego 105: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7370  TRACE  : (42)     table_sort.ego 106: Member          "assert"       stack[ 2]: Testing{ description: "io: table sort" }, M<assert...
[20210409144645] 7371  TRACE  : (42)     table_sort.ego 107: Load            "r"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7372  TRACE  : (42)     table_sort.ego 108: Push            1              stack[ 3]: [{ Age: 47, Name: "Mary", Title: "Mom" }, { Age: 5...
[20210409144645] 7373  TRACE  : (42)     table_sort.ego 109: LoadIndex                      stack[ 4]: 1, [{ Age: 47, Name: "Mary", Title: "Mom" }, { Age...
[20210409144645] 7374  TRACE  : (42)     table_sort.ego 110: Member          "Name"         stack[ 3]: { Age: 53, Name: "Tom", Title: "Dad" }, compiler.T...
[20210409144645] 7375  TRACE  : (42)     table_sort.ego 111: Push            "Tom"          stack[ 3]: Tom, compiler.TestAssert(), M<assert>
[20210409144645] 7376  TRACE  : (42)     table_sort.ego 112: Equal                          stack[ 4]: Tom, Tom, compiler.TestAssert(), M<assert>
[20210409144645] 7377  TRACE  : (42)     table_sort.ego 113: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7378  TRACE  : (42)     table_sort.ego 114: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7379  TRACE  : (42)     table_sort.ego 115: AtLine          24             stack[ 0]: <empty>
[20210409144645] 7380  TRACE  : (42)     table_sort.ego 116: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7381  TRACE  : (42)     table_sort.ego 117: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7382  TRACE  : (42)     table_sort.ego 118: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7383  TRACE  : (42)     table_sort.ego 119: Member          "Sort"         stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7384  TRACE  : (42)     table_sort.ego 120: Push            "~Age"         stack[ 2]: runtime.TableSort(), M<call>
[20210409144645] 7385  TRACE  : (42)     table_sort.ego 121: Call            1              stack[ 3]: ~Age, runtime.TableSort(), M<call>
[20210409144645] 7386  TRACE  : (42)     table_sort.ego 122: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7387  TRACE  : (42)     table_sort.ego 123: AtLine          26             stack[ 0]: <empty>
[20210409144645] 7388  TRACE  : (42)     table_sort.ego 124: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7389  TRACE  : (42)     table_sort.ego 125: Load            "new"          stack[ 1]: M<let>
[20210409144645] 7390  TRACE  : (42)     table_sort.ego 126: Push            T([]struct{Age int, Name string, Title string}) stack[ 2]: functions.New(), M<let>
[20210409144645] 7391  TRACE  : (42)     table_sort.ego 127: Call            1              stack[ 3]: T([]struct{Age int, Name string, Title string}), f...
[20210409144645] 7392  TRACE  : (42)     table_sort.ego 128: Store           "r"            stack[ 2]: [], M<let>
[20210409144645] 7393  TRACE  : (42)     table_sort.ego 129: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7394  TRACE  : (42)     table_sort.ego 130: AtLine          29             stack[ 0]: <empty>
[20210409144645] 7395  TRACE  : (42)     table_sort.ego 131: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7396  TRACE  : (42)     table_sort.ego 132: Load            "json"         stack[ 1]: M<call>
[20210409144645] 7397  TRACE  : (42)     table_sort.ego 133: SetThis                        stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7398  TRACE  : (42)     table_sort.ego 134: Member          "Unmarshal"    stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7399  TRACE  : (42)     table_sort.ego 135: Load            "t"            stack[ 2]: functions.Decode(), M<call>
[20210409144645] 7400  TRACE  : (42)     table_sort.ego 136: SetThis                        stack[ 3]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7401  TRACE  : (42)     table_sort.ego 137: Member          "String"       stack[ 3]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7402  TRACE  : (42)     table_sort.ego 138: Push            "json"         stack[ 3]: runtime.TableString(), functions.Decode(), M<call>
[20210409144645] 7403  TRACE  : (42)     table_sort.ego 139: Call            1              stack[ 4]: json, runtime.TableString(), functions.Decode(), M...
[20210409144645] 7404  TRACE  : (42)     table_sort.ego 140: AddressOf       "r"            stack[ 3]: [{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Ma...
[20210409144645] 7405  TRACE  : (42)     table_sort.ego 141: Call            2              stack[ 4]: &&datatypes.EgoArray{data:[]interface {}{}, valueT...
[20210409144645] 7406  TRACE  : (42)     table_sort.ego 142: DropToMarker    M<call>        stack[ 4]: [{ Age: 53, Name: "Tom", Title: "Dad" }, { Age: 47...
[20210409144645] 7407  TRACE  : (42)     table_sort.ego 143: AtLine          32             stack[ 0]: <empty>
[20210409144645] 7408  TRACE  : (42)     table_sort.ego 144: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7409  TRACE  : (42)     table_sort.ego 145: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7410  TRACE  : (42)     table_sort.ego 146: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7411  TRACE  : (42)     table_sort.ego 147: Member          "assert"       stack[ 2]: Testing{ description: "io: table sort" }, M<assert...
[20210409144645] 7412  TRACE  : (42)     table_sort.ego 148: Load            "r"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7413  TRACE  : (42)     table_sort.ego 149: Push            0              stack[ 3]: [{ Age: 53, Name: "Tom", Title: "Dad" }, { Age: 47...
[20210409144645] 7414  TRACE  : (42)     table_sort.ego 150: LoadIndex                      stack[ 4]: 0, [{ Age: 53, Name: "Tom", Title: "Dad" }, { Age:...
[20210409144645] 7415  TRACE  : (42)     table_sort.ego 151: Member          "Age"          stack[ 3]: { Age: 53, Name: "Tom", Title: "Dad" }, compiler.T...
[20210409144645] 7416  TRACE  : (42)     table_sort.ego 152: Push            53             stack[ 3]: 53, compiler.TestAssert(), M<assert>
[20210409144645] 7417  TRACE  : (42)     table_sort.ego 153: Equal                          stack[ 4]: 53, 53, compiler.TestAssert(), M<assert>
[20210409144645] 7418  TRACE  : (42)     table_sort.ego 154: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7419  TRACE  : (42)     table_sort.ego 155: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7420  TRACE  : (42)     table_sort.ego 156: AtLine          33             stack[ 0]: <empty>
[20210409144645] 7421  TRACE  : (42)     table_sort.ego 157: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7422  TRACE  : (42)     table_sort.ego 158: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7423  TRACE  : (42)     table_sort.ego 159: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7424  TRACE  : (42)     table_sort.ego 160: Member          "assert"       stack[ 2]: Testing{ description: "io: table sort" }, M<assert...
[20210409144645] 7425  TRACE  : (42)     table_sort.ego 161: Load            "r"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7426  TRACE  : (42)     table_sort.ego 162: Push            1              stack[ 3]: [{ Age: 53, Name: "Tom", Title: "Dad" }, { Age: 47...
[20210409144645] 7427  TRACE  : (42)     table_sort.ego 163: LoadIndex                      stack[ 4]: 1, [{ Age: 53, Name: "Tom", Title: "Dad" }, { Age:...
[20210409144645] 7428  TRACE  : (42)     table_sort.ego 164: Member          "Age"          stack[ 3]: { Age: 47, Name: "Mary", Title: "Mom" }, compiler....
[20210409144645] 7429  TRACE  : (42)     table_sort.ego 165: Push            47             stack[ 3]: 47, compiler.TestAssert(), M<assert>
[20210409144645] 7430  TRACE  : (42)     table_sort.ego 166: Equal                          stack[ 4]: 47, 47, compiler.TestAssert(), M<assert>
[20210409144645] 7431  TRACE  : (42)     table_sort.ego 167: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7432  TRACE  : (42)     table_sort.ego 168: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7433  TRACE  : (42)     table_sort.ego 169: PopScope                       stack[ 0]: <empty>
[20210409144645] 7434  TRACE  : (42)     table_sort.ego 170: AtLine          36             stack[ 0]: <empty>
[20210409144645] 7435  TRACE  : (42)     table_sort.ego 171: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7436  TRACE  : (42)     table_sort.ego 172: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7437  TRACE  : (42)     table_sort.ego 173: Print                          stack[ 1]: (PASS)  
[20210409144645] 7438  TRACE  : (42)     table_sort.ego 174: Timer           1              stack[ 0]: <empty>
[20210409144645] 7439  TRACE  : (42)     table_sort.ego 175: Print                          stack[ 1]: 0.001s
[20210409144645] 7440  TRACE  : (42)     table_sort.ego 176: Say             true           stack[ 0]: <empty>
TEST: io: table sort                                    (PASS)  0.001s
[20210409144645] 7441  TRACE  : (42)     table_sort.ego 177: Stop                           stack[ 0]: <empty>
[20210409144645] 7442  TRACE  : *** Tracing tables_print.ego (43)  
[20210409144645] 7443  TRACE  : (43)   tables_print.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 7444  TRACE  : (43)   tables_print.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7445  TRACE  : (43)   tables_print.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7446  TRACE  : (43)   tables_print.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7447  TRACE  : (43)   tables_print.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7448  TRACE  : (43)   tables_print.ego   5: Push            Testing{ description: "io: table print" } stack[ 0]: <empty>
[20210409144645] 7449  TRACE  : (43)   tables_print.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "io: table print" }
[20210409144645] 7450  TRACE  : (43)   tables_print.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7451  TRACE  : (43)   tables_print.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7452  TRACE  : (43)   tables_print.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7453  TRACE  : (43)   tables_print.ego  10: Member          "description"  stack[ 1]: Testing{ description: "io: table print" }
[20210409144645] 7454  TRACE  : (43)   tables_print.ego  11: Print                          stack[ 1]: io: table print
[20210409144645] 7455  TRACE  : (43)   tables_print.ego  12: Push            "                                   " stack[ 0]: <empty>
[20210409144645] 7456  TRACE  : (43)   tables_print.ego  13: Print                          stack[ 1]:                                    
[20210409144645] 7457  TRACE  : (43)   tables_print.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7458  TRACE  : (43)   tables_print.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 7459  TRACE  : (43)   tables_print.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 7460  TRACE  : (43)   tables_print.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7461  TRACE  : (43)   tables_print.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7462  TRACE  : (43)   tables_print.ego  19: Push            "Name"         stack[ 1]: M<let>
[20210409144645] 7463  TRACE  : (43)   tables_print.ego  20: Push            "Age"          stack[ 2]: Name, M<let>
[20210409144645] 7464  TRACE  : (43)   tables_print.ego  21: Push            "Title"        stack[ 3]: Age, Name, M<let>
[20210409144645] 7465  TRACE  : (43)   tables_print.ego  22: Push            T(string)      stack[ 4]: Title, Age, Name, M<let>
[20210409144645] 7466  TRACE  : (43)   tables_print.ego  23: MakeArray       3              stack[ 5]: T(string), Title, Age, Name, M<let>
[20210409144645] 7467  TRACE  : (43)   tables_print.ego  24: SymbolCreate    "h"            stack[ 2]: ["Name", "Age", "Title"], M<let>
[20210409144645] 7468  TRACE  : (43)   tables_print.ego  25: Store           "h"            stack[ 2]: ["Name", "Age", "Title"], M<let>
[20210409144645] 7469  TRACE  : (43)   tables_print.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7470  TRACE  : (43)   tables_print.ego  27: AtLine          6              stack[ 0]: <empty>
[20210409144645] 7471  TRACE  : (43)   tables_print.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7472  TRACE  : (43)   tables_print.ego  29: Load            "tables"       stack[ 1]: M<let>
[20210409144645] 7473  TRACE  : (43)   tables_print.ego  30: SetThis                        stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 7474  TRACE  : (43)   tables_print.ego  31: Member          "New"          stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 7475  TRACE  : (43)   tables_print.ego  32: Load            "h"            stack[ 2]: runtime.TableNew(), M<let>
[20210409144645] 7476  TRACE  : (43)   tables_print.ego  33: Call            1              stack[ 3]: ["Name", "Age", "Title"], runtime.TableNew(), M<le...
[20210409144645] 7477  TRACE  : (43)   tables_print.ego  34: SymbolCreate    "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7478  TRACE  : (43)   tables_print.ego  35: Store           "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7479  TRACE  : (43)   tables_print.ego  36: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7480  TRACE  : (43)   tables_print.ego  37: AtLine          8              stack[ 0]: <empty>
[20210409144645] 7481  TRACE  : (43)   tables_print.ego  38: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7482  TRACE  : (43)   tables_print.ego  39: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7483  TRACE  : (43)   tables_print.ego  40: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7484  TRACE  : (43)   tables_print.ego  41: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7485  TRACE  : (43)   tables_print.ego  42: Push            "Tom"          stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 7486  TRACE  : (43)   tables_print.ego  43: Push            "53"           stack[ 3]: Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7487  TRACE  : (43)   tables_print.ego  44: Push            "Dad"          stack[ 4]: 53, Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7488  TRACE  : (43)   tables_print.ego  45: Call            3              stack[ 5]: Dad, 53, Tom, runtime.TableAddRow(), M<call>
[20210409144645] 7489  TRACE  : (43)   tables_print.ego  46: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7490  TRACE  : (43)   tables_print.ego  47: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7491  TRACE  : (43)   tables_print.ego  48: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7492  TRACE  : (43)   tables_print.ego  49: Load            "t"            stack[ 1]: M<call>
[20210409144645] 7493  TRACE  : (43)   tables_print.ego  50: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7494  TRACE  : (43)   tables_print.ego  51: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7495  TRACE  : (43)   tables_print.ego  52: Push            "Mary"         stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 7496  TRACE  : (43)   tables_print.ego  53: Push            "47"           stack[ 3]: Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7497  TRACE  : (43)   tables_print.ego  54: Push            "Mom"          stack[ 4]: 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7498  TRACE  : (43)   tables_print.ego  55: Push            T(string)      stack[ 5]: Mom, 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7499  TRACE  : (43)   tables_print.ego  56: MakeArray       3              stack[ 6]: T(string), Mom, 47, Mary, runtime.TableAddRow(), M...
[20210409144645] 7500  TRACE  : (43)   tables_print.ego  57: Flatten                        stack[ 3]: ["Mary", "47", "Mom"], runtime.TableAddRow(), M<ca...
[20210409144645] 7501  TRACE  : (43)   tables_print.ego  58: Call            1              stack[ 5]: Mom, 47, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 7502  TRACE  : (43)   tables_print.ego  59: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7503  TRACE  : (43)   tables_print.ego  60: AtLine          11             stack[ 0]: <empty>
[20210409144645] 7504  TRACE  : (43)   tables_print.ego  61: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7505  TRACE  : (43)   tables_print.ego  62: Load            "t"            stack[ 1]: M<let>
[20210409144645] 7506  TRACE  : (43)   tables_print.ego  63: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7507  TRACE  : (43)   tables_print.ego  64: Member          "String"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7508  TRACE  : (43)   tables_print.ego  65: Push            "json"         stack[ 2]: runtime.TableString(), M<let>
[20210409144645] 7509  TRACE  : (43)   tables_print.ego  66: Call            1              stack[ 3]: json, runtime.TableString(), M<let>
[20210409144645] 7510  TRACE  : (43)   tables_print.ego  67: SymbolCreate    "str"          stack[ 2]: [{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Ma...
[20210409144645] 7511  TRACE  : (43)   tables_print.ego  68: Store           "str"          stack[ 2]: [{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Ma...
[20210409144645] 7512  TRACE  : (43)   tables_print.ego  69: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7513  TRACE  : (43)   tables_print.ego  70: AtLine          12             stack[ 0]: <empty>
[20210409144645] 7514  TRACE  : (43)   tables_print.ego  71: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7515  TRACE  : (43)   tables_print.ego  72: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7516  TRACE  : (43)   tables_print.ego  73: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7517  TRACE  : (43)   tables_print.ego  74: Member          "assert"       stack[ 2]: Testing{ description: "io: table print" }, M<asser...
[20210409144645] 7518  TRACE  : (43)   tables_print.ego  75: Load            "str"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7519  TRACE  : (43)   tables_print.ego  76: Push            "[{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Mary","Age":47,"Title":"Mom"}]" stack[ 3]: [{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Ma...
[20210409144645] 7520  TRACE  : (43)   tables_print.ego  77: Equal                          stack[ 4]: [{"Name":"Tom","Age":53,"Title":"Dad"},{"Name":"Ma...
[20210409144645] 7521  TRACE  : (43)   tables_print.ego  78: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7522  TRACE  : (43)   tables_print.ego  79: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7523  TRACE  : (43)   tables_print.ego  80: AtLine          14             stack[ 0]: <empty>
[20210409144645] 7524  TRACE  : (43)   tables_print.ego  81: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7525  TRACE  : (43)   tables_print.ego  82: Load            "t"            stack[ 1]: M<let>
[20210409144645] 7526  TRACE  : (43)   tables_print.ego  83: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7527  TRACE  : (43)   tables_print.ego  84: Member          "String"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7528  TRACE  : (43)   tables_print.ego  85: Push            "text"         stack[ 2]: runtime.TableString(), M<let>
[20210409144645] 7529  TRACE  : (43)   tables_print.ego  86: Call            1              stack[ 3]: text, runtime.TableString(), M<let>
[20210409144645] 7530  TRACE  : (43)   tables_print.ego  87: Store           "str"          stack[ 2]: Name    Age    Title    \n====    ===    =====    ...
[20210409144645] 7531  TRACE  : (43)   tables_print.ego  88: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7532  TRACE  : (43)   tables_print.ego  89: AtLine          15             stack[ 0]: <empty>
[20210409144645] 7533  TRACE  : (43)   tables_print.ego  90: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7534  TRACE  : (43)   tables_print.ego  91: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7535  TRACE  : (43)   tables_print.ego  92: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7536  TRACE  : (43)   tables_print.ego  93: Member          "assert"       stack[ 2]: Testing{ description: "io: table print" }, M<asser...
[20210409144645] 7537  TRACE  : (43)   tables_print.ego  94: Load            "str"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7538  TRACE  : (43)   tables_print.ego  95: Push            "Name    Age    Title    \n====    ===    =====    \nTom     53     Dad      \nMary    47     Mom      \n" stack[ 3]: Name    Age    Title    \n====    ===    =====    ...
[20210409144645] 7539  TRACE  : (43)   tables_print.ego  96: Equal                          stack[ 4]: Name    Age    Title    \n====    ===    =====    ...
[20210409144645] 7540  TRACE  : (43)   tables_print.ego  97: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7541  TRACE  : (43)   tables_print.ego  98: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7542  TRACE  : (43)   tables_print.ego  99: AtLine          22             stack[ 0]: <empty>
[20210409144645] 7543  TRACE  : (43)   tables_print.ego 100: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7544  TRACE  : (43)   tables_print.ego 101: Load            "t"            stack[ 1]: M<let>
[20210409144645] 7545  TRACE  : (43)   tables_print.ego 102: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7546  TRACE  : (43)   tables_print.ego 103: Member          "String"       stack[ 2]: tables.Table{ headings: ["Name", "Age", "Title"], ...
[20210409144645] 7547  TRACE  : (43)   tables_print.ego 104: Push            "indented"     stack[ 2]: runtime.TableString(), M<let>
[20210409144645] 7548  TRACE  : (43)   tables_print.ego 105: Call            1              stack[ 3]: indented, runtime.TableString(), M<let>
[20210409144645] 7549  TRACE  : (43)   tables_print.ego 106: Store           "str"          stack[ 2]: [\n   {\n      "Age": 53,\n      "Name": "Tom",\n ...
[20210409144645] 7550  TRACE  : (43)   tables_print.ego 107: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7551  TRACE  : (43)   tables_print.ego 108: AtLine          23             stack[ 0]: <empty>
[20210409144645] 7552  TRACE  : (43)   tables_print.ego 109: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7553  TRACE  : (43)   tables_print.ego 110: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7554  TRACE  : (43)   tables_print.ego 111: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7555  TRACE  : (43)   tables_print.ego 112: Member          "assert"       stack[ 2]: Testing{ description: "io: table print" }, M<asser...
[20210409144645] 7556  TRACE  : (43)   tables_print.ego 113: Load            "str"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7557  TRACE  : (43)   tables_print.ego 114: Push            "[\n   {\n      "Age": 53,\n      "Name": "Tom",\n      "Title": "Dad"\n   },\n   {\n      "Age": 47,\n      "Name": "Mary",\n      "Title": "Mom"\n   }\n]\n" stack[ 3]: [\n   {\n      "Age": 53,\n      "Name": "Tom",\n ...
[20210409144645] 7558  TRACE  : (43)   tables_print.ego 115: Equal                          stack[ 4]: [\n   {\n      "Age": 53,\n      "Name": "Tom",\n ...
[20210409144645] 7559  TRACE  : (43)   tables_print.ego 116: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7560  TRACE  : (43)   tables_print.ego 117: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7561  TRACE  : (43)   tables_print.ego 118: PopScope                       stack[ 0]: <empty>
[20210409144645] 7562  TRACE  : (43)   tables_print.ego 119: AtLine          39             stack[ 0]: <empty>
[20210409144645] 7563  TRACE  : (43)   tables_print.ego 120: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7564  TRACE  : (43)   tables_print.ego 121: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7565  TRACE  : (43)   tables_print.ego 122: Print                          stack[ 1]: (PASS)  
[20210409144645] 7566  TRACE  : (43)   tables_print.ego 123: Timer           1              stack[ 0]: <empty>
[20210409144645] 7567  TRACE  : (43)   tables_print.ego 124: Print                          stack[ 1]: 0.871ms
[20210409144645] 7568  TRACE  : (43)   tables_print.ego 125: Say             true           stack[ 0]: <empty>
TEST: io: table print                                   (PASS)  0.871ms
[20210409144645] 7569  TRACE  : (43)   tables_print.ego 126: Stop                           stack[ 0]: <empty>
[20210409144645] 7570  TRACE  : *** Tracing import tests/packages/employee (44)  
[20210409144645] 7571  TRACE  : (44) import tests/packages/employee   0: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7572  TRACE  : (44) import tests/packages/employee   1: PushPackage     "employee"     stack[ 0]: <empty>
[20210409144645] 7573  TRACE  : (44) import tests/packages/employee   2: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7574  TRACE  : (44) import tests/packages/employee   3: Push            100            stack[ 0]: <empty>
[20210409144645] 7575  TRACE  : (44) import tests/packages/employee   4: Constant        "ManagerID"    stack[ 1]: 100
[20210409144645] 7576  TRACE  : (44) import tests/packages/employee   5: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7577  TRACE  : (44) import tests/packages/employee   6: Push            T(Employee struct{id int, name string}) stack[ 0]: <empty>
[20210409144645] 7578  TRACE  : (44) import tests/packages/employee   7: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string})
[20210409144645] 7579  TRACE  : (44) import tests/packages/employee   8: Push            T(Employee struct{id int, name string},SetName()) stack[ 0]: <empty>
[20210409144645] 7580  TRACE  : (44) import tests/packages/employee   9: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string},SetName())
[20210409144645] 7581  TRACE  : (44) import tests/packages/employee  10: PopPackage      "employee"     stack[ 0]: <empty>
[20210409144645] 7582  TRACE  : (44) import tests/packages/employee  11: Stop                           stack[ 0]: <empty>
[20210409144645] 7583  TRACE  : *** Tracing const.ego (45)  
[20210409144645] 7584  TRACE  : (45)          const.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 7585  TRACE  : (45)          const.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7586  TRACE  : (45)          const.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7587  TRACE  : (45)          const.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7588  TRACE  : (45)          const.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7589  TRACE  : (45)          const.ego   5: Push            Testing{ description: "packages: consts" } stack[ 0]: <empty>
[20210409144645] 7590  TRACE  : (45)          const.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: consts" }
[20210409144645] 7591  TRACE  : (45)          const.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7592  TRACE  : (45)          const.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7593  TRACE  : (45)          const.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7594  TRACE  : (45)          const.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: consts" }
[20210409144645] 7595  TRACE  : (45)          const.ego  11: Print                          stack[ 1]: packages: consts
[20210409144645] 7596  TRACE  : (45)          const.ego  12: Push            "                                  " stack[ 0]: <empty>
[20210409144645] 7597  TRACE  : (45)          const.ego  13: Print                          stack[ 1]:                                   
[20210409144645] 7598  TRACE  : (45)          const.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7599  TRACE  : (45)          const.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7600  TRACE  : (45)          const.ego  16: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7601  TRACE  : (45)          const.ego  17: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7602  TRACE  : (45)          const.ego  18: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7603  TRACE  : (45)          const.ego  19: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7604  TRACE  : (45)          const.ego  20: Member          "assert"       stack[ 2]: Testing{ description: "packages: consts" }, M<asse...
[20210409144645] 7605  TRACE  : (45)          const.ego  21: Push            100            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7606  TRACE  : (45)          const.ego  22: Load            "employee"     stack[ 3]: 100, compiler.TestAssert(), M<assert>
[20210409144645] 7607  TRACE  : (45)          const.ego  23: Member          "ManagerID"    stack[ 4]: Pkg< Employee: T(Employee struct{id int, name stri...
[20210409144645] 7608  TRACE  : (45)          const.ego  24: Equal                          stack[ 4]: 100, 100, compiler.TestAssert(), M<assert>
[20210409144645] 7609  TRACE  : (45)          const.ego  25: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7610  TRACE  : (45)          const.ego  26: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7611  TRACE  : (45)          const.ego  27: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7612  TRACE  : (45)          const.ego  28: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7613  TRACE  : (45)          const.ego  29: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7614  TRACE  : (45)          const.ego  30: Print                          stack[ 1]: (PASS)  
[20210409144645] 7615  TRACE  : (45)          const.ego  31: Timer           1              stack[ 0]: <empty>
[20210409144645] 7616  TRACE  : (45)          const.ego  32: Print                          stack[ 1]: 0.109ms
[20210409144645] 7617  TRACE  : (45)          const.ego  33: Say             true           stack[ 0]: <empty>
TEST: packages: consts                                  (PASS)  0.109ms
[20210409144645] 7618  TRACE  : (45)          const.ego  34: Stop                           stack[ 0]: <empty>
[20210409144645] 7619  TRACE  : *** Tracing files.ego (46)  
[20210409144645] 7620  TRACE  : (46)          files.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 7621  TRACE  : (46)          files.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7622  TRACE  : (46)          files.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7623  TRACE  : (46)          files.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7624  TRACE  : (46)          files.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7625  TRACE  : (46)          files.ego   5: Push            Testing{ description: "packages: io.File object type" } stack[ 0]: <empty>
[20210409144645] 7626  TRACE  : (46)          files.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: io.File object ty...
[20210409144645] 7627  TRACE  : (46)          files.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7628  TRACE  : (46)          files.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7629  TRACE  : (46)          files.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7630  TRACE  : (46)          files.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: io.File object ty...
[20210409144645] 7631  TRACE  : (46)          files.ego  11: Print                          stack[ 1]: packages: io.File object type
[20210409144645] 7632  TRACE  : (46)          files.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144645] 7633  TRACE  : (46)          files.ego  13: Print                          stack[ 1]:                      
[20210409144645] 7634  TRACE  : (46)          files.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7635  TRACE  : (46)          files.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 7636  TRACE  : (46)          files.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 7637  TRACE  : (46)          files.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7638  TRACE  : (46)          files.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7639  TRACE  : (46)          files.ego  19: Push            "file-"        stack[ 1]: M<let>
[20210409144645] 7640  TRACE  : (46)          files.ego  20: Load            "uuid"         stack[ 2]: file-, M<let>
[20210409144645] 7641  TRACE  : (46)          files.ego  21: SetThis                        stack[ 3]: Pkg< New: functions.UUIDNew(), Nil: functions.UUID...
[20210409144645] 7642  TRACE  : (46)          files.ego  22: Member          "New"          stack[ 3]: Pkg< New: functions.UUIDNew(), Nil: functions.UUID...
[20210409144645] 7643  TRACE  : (46)          files.ego  23: Call            0              stack[ 3]: functions.UUIDNew(), file-, M<let>
[20210409144645] 7644  TRACE  : (46)          files.ego  24: Add                            stack[ 3]: 7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, file-, M<let...
[20210409144645] 7645  TRACE  : (46)          files.ego  25: SymbolCreate    "name"         stack[ 2]: file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, M<let>
[20210409144645] 7646  TRACE  : (46)          files.ego  26: Store           "name"         stack[ 2]: file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, M<let>
[20210409144645] 7647  TRACE  : (46)          files.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7648  TRACE  : (46)          files.ego  28: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7649  TRACE  : (46)          files.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7650  TRACE  : (46)          files.ego  30: Load            "io"           stack[ 1]: M<let>
[20210409144645] 7651  TRACE  : (46)          files.ego  31: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7652  TRACE  : (46)          files.ego  32: Member          "Open"         stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7653  TRACE  : (46)          files.ego  33: Load            "name"         stack[ 2]: functions.OpenFile(), M<let>
[20210409144645] 7654  TRACE  : (46)          files.ego  34: Push            "create"       stack[ 3]: file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, functio...
[20210409144645] 7655  TRACE  : (46)          files.ego  35: Call            2              stack[ 4]: create, file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4,...
[20210409144645] 7656  TRACE  : (46)          files.ego  36: SymbolCreate    "f"            stack[ 4]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7657  TRACE  : (46)          files.ego  37: Store           "f"            stack[ 4]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7658  TRACE  : (46)          files.ego  38: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 7659  TRACE  : (46)          files.ego  39: AtLine          8              stack[ 0]: <empty>
[20210409144645] 7660  TRACE  : (46)          files.ego  40: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7661  TRACE  : (46)          files.ego  41: Load            "f"            stack[ 1]: M<call>
[20210409144645] 7662  TRACE  : (46)          files.ego  42: SetThis                        stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7663  TRACE  : (46)          files.ego  43: Member          "WriteString"  stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7664  TRACE  : (46)          files.ego  44: Push            "test"         stack[ 2]: functions.WriteString(), M<call>
[20210409144645] 7665  TRACE  : (46)          files.ego  45: Call            1              stack[ 3]: test, functions.WriteString(), M<call>
[20210409144645] 7666  TRACE  : (46)          files.ego  46: DropToMarker    M<call>        stack[ 4]: 5, <nil>, M<results>, M<call>
[20210409144645] 7667  TRACE  : (46)          files.ego  47: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7668  TRACE  : (46)          files.ego  48: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7669  TRACE  : (46)          files.ego  49: Load            "f"            stack[ 1]: M<call>
[20210409144645] 7670  TRACE  : (46)          files.ego  50: SetThis                        stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7671  TRACE  : (46)          files.ego  51: Member          "Close"        stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "output...
[20210409144645] 7672  TRACE  : (46)          files.ego  52: Call            0              stack[ 2]: functions.Close(), M<call>
[20210409144645] 7673  TRACE  : (46)          files.ego  53: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7674  TRACE  : (46)          files.ego  54: AtLine          11             stack[ 0]: <empty>
[20210409144645] 7675  TRACE  : (46)          files.ego  55: Load            "io"           stack[ 0]: <empty>
[20210409144645] 7676  TRACE  : (46)          files.ego  56: SetThis                        stack[ 1]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7677  TRACE  : (46)          files.ego  57: Member          "Open"         stack[ 1]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7678  TRACE  : (46)          files.ego  58: Load            "name"         stack[ 1]: functions.OpenFile()
[20210409144645] 7679  TRACE  : (46)          files.ego  59: Push            "read"         stack[ 2]: file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, functio...
[20210409144645] 7680  TRACE  : (46)          files.ego  60: Call            2              stack[ 3]: read, file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, f...
[20210409144645] 7681  TRACE  : (46)          files.ego  61: StackCheck      2              stack[ 3]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7682  TRACE  : (46)          files.ego  62: SymbolOptCreate "f2"           stack[ 3]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7683  TRACE  : (46)          files.ego  63: Store           "f2"           stack[ 3]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7684  TRACE  : (46)          files.ego  64: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7685  TRACE  : (46)          files.ego  65: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7686  TRACE  : (46)          files.ego  66: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7687  TRACE  : (46)          files.ego  67: AtLine          12             stack[ 0]: <empty>
[20210409144645] 7688  TRACE  : (46)          files.ego  68: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 7689  TRACE  : (46)          files.ego  69: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 7690  TRACE  : (46)          files.ego  70: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 7691  TRACE  : (46)          files.ego  71: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 7692  TRACE  : (46)          files.ego  72: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 7693  TRACE  : (46)          files.ego  73: BranchFalse     @86            stack[ 1]: false
[20210409144645] 7694  TRACE  : (46)          files.ego  86: AtLine          16             stack[ 0]: <empty>
[20210409144645] 7695  TRACE  : (46)          files.ego  87: Load            "f2"           stack[ 0]: <empty>
[20210409144645] 7696  TRACE  : (46)          files.ego  88: SetThis                        stack[ 1]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7697  TRACE  : (46)          files.ego  89: Member          "ReadString"   stack[ 1]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7698  TRACE  : (46)          files.ego  90: Call            0              stack[ 1]: functions.ReadString()
[20210409144645] 7699  TRACE  : (46)          files.ego  91: StackCheck      2              stack[ 3]: test, <nil>, M<results>
[20210409144645] 7700  TRACE  : (46)          files.ego  92: SymbolOptCreate "t"            stack[ 3]: test, <nil>, M<results>
[20210409144645] 7701  TRACE  : (46)          files.ego  93: Store           "t"            stack[ 3]: test, <nil>, M<results>
[20210409144645] 7702  TRACE  : (46)          files.ego  94: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7703  TRACE  : (46)          files.ego  95: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7704  TRACE  : (46)          files.ego  96: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7705  TRACE  : (46)          files.ego  97: AtLine          17             stack[ 0]: <empty>
[20210409144645] 7706  TRACE  : (46)          files.ego  98: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 7707  TRACE  : (46)          files.ego  99: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 7708  TRACE  : (46)          files.ego 100: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 7709  TRACE  : (46)          files.ego 101: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 7710  TRACE  : (46)          files.ego 102: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 7711  TRACE  : (46)          files.ego 103: BranchFalse     @124           stack[ 1]: false
[20210409144645] 7712  TRACE  : (46)          files.ego 124: AtLine          22             stack[ 0]: <empty>
[20210409144645] 7713  TRACE  : (46)          files.ego 125: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7714  TRACE  : (46)          files.ego 126: Load            "f2"           stack[ 1]: M<call>
[20210409144645] 7715  TRACE  : (46)          files.ego 127: SetThis                        stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7716  TRACE  : (46)          files.ego 128: Member          "Close"        stack[ 2]: io.File{ File: ptr <*os.File Value>, Mode: "input"...
[20210409144645] 7717  TRACE  : (46)          files.ego 129: Call            0              stack[ 2]: functions.Close(), M<call>
[20210409144645] 7718  TRACE  : (46)          files.ego 130: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 7719  TRACE  : (46)          files.ego 131: AtLine          23             stack[ 0]: <empty>
[20210409144645] 7720  TRACE  : (46)          files.ego 132: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7721  TRACE  : (46)          files.ego 133: Load            "io"           stack[ 1]: M<call>
[20210409144645] 7722  TRACE  : (46)          files.ego 134: SetThis                        stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7723  TRACE  : (46)          files.ego 135: Member          "Delete"       stack[ 2]: Pkg< Delete: functions.DeleteFile(), DirList: DirL...
[20210409144645] 7724  TRACE  : (46)          files.ego 136: Load            "name"         stack[ 2]: functions.DeleteFile(), M<call>
[20210409144645] 7725  TRACE  : (46)          files.ego 137: Call            1              stack[ 3]: file-7807ba1d-9a7c-4c11-8f23-376d4ce29ef4, functio...
[20210409144645] 7726  TRACE  : (46)          files.ego 138: DropToMarker    M<call>        stack[ 4]: true, <nil>, M<results>, M<call>
[20210409144645] 7727  TRACE  : (46)          files.ego 139: AtLine          25             stack[ 0]: <empty>
[20210409144645] 7728  TRACE  : (46)          files.ego 140: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7729  TRACE  : (46)          files.ego 141: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7730  TRACE  : (46)          files.ego 142: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7731  TRACE  : (46)          files.ego 143: Member          "assert"       stack[ 2]: Testing{ description: "packages: io.File object ty...
[20210409144645] 7732  TRACE  : (46)          files.ego 144: Load            "t"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7733  TRACE  : (46)          files.ego 145: Push            "test"         stack[ 3]: test, compiler.TestAssert(), M<assert>
[20210409144645] 7734  TRACE  : (46)          files.ego 146: Equal                          stack[ 4]: test, test, compiler.TestAssert(), M<assert>
[20210409144645] 7735  TRACE  : (46)          files.ego 147: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7736  TRACE  : (46)          files.ego 148: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7737  TRACE  : (46)          files.ego 149: AtLine          26             stack[ 0]: <empty>
[20210409144645] 7738  TRACE  : (46)          files.ego 150: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7739  TRACE  : (46)          files.ego 151: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7740  TRACE  : (46)          files.ego 152: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7741  TRACE  : (46)          files.ego 153: Member          "assert"       stack[ 2]: Testing{ description: "packages: io.File object ty...
[20210409144645] 7742  TRACE  : (46)          files.ego 154: Load            "f2"           stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7743  TRACE  : (46)          files.ego 155: Member          "Name"         stack[ 3]: io.File{ File: <nil>, Mode: "closed", Name: "", Sc...
[20210409144645] 7744  TRACE  : (46)          files.ego 156: Push            ""             stack[ 3]: , compiler.TestAssert(), M<assert>
[20210409144645] 7745  TRACE  : (46)          files.ego 157: Equal                          stack[ 4]: , , compiler.TestAssert(), M<assert>
[20210409144645] 7746  TRACE  : (46)          files.ego 158: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7747  TRACE  : (46)          files.ego 159: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7748  TRACE  : (46)          files.ego 160: AtLine          27             stack[ 0]: <empty>
[20210409144645] 7749  TRACE  : (46)          files.ego 161: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7750  TRACE  : (46)          files.ego 162: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7751  TRACE  : (46)          files.ego 163: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7752  TRACE  : (46)          files.ego 164: Member          "assert"       stack[ 2]: Testing{ description: "packages: io.File object ty...
[20210409144645] 7753  TRACE  : (46)          files.ego 165: Load            "f2"           stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7754  TRACE  : (46)          files.ego 166: Member          "Valid"        stack[ 3]: io.File{ File: <nil>, Mode: "closed", Name: "", Sc...
[20210409144645] 7755  TRACE  : (46)          files.ego 167: Push            false          stack[ 3]: false, compiler.TestAssert(), M<assert>
[20210409144645] 7756  TRACE  : (46)          files.ego 168: Equal                          stack[ 4]: false, false, compiler.TestAssert(), M<assert>
[20210409144645] 7757  TRACE  : (46)          files.ego 169: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7758  TRACE  : (46)          files.ego 170: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7759  TRACE  : (46)          files.ego 171: PopScope                       stack[ 0]: <empty>
[20210409144645] 7760  TRACE  : (46)          files.ego 172: AtLine          30             stack[ 0]: <empty>
[20210409144645] 7761  TRACE  : (46)          files.ego 173: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7762  TRACE  : (46)          files.ego 174: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7763  TRACE  : (46)          files.ego 175: Print                          stack[ 1]: (PASS)  
[20210409144645] 7764  TRACE  : (46)          files.ego 176: Timer           1              stack[ 0]: <empty>
[20210409144645] 7765  TRACE  : (46)          files.ego 177: Print                          stack[ 1]: 0.001s
[20210409144645] 7766  TRACE  : (46)          files.ego 178: Say             true           stack[ 0]: <empty>
TEST: packages: io.File object type                     (PASS)  0.001s
[20210409144645] 7767  TRACE  : (46)          files.ego 179: Stop                           stack[ 0]: <empty>
[20210409144645] 7768  TRACE  : *** Tracing import tests/packages/employee (47)  
[20210409144645] 7769  TRACE  : (47) import tests/packages/employee   0: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7770  TRACE  : (47) import tests/packages/employee   1: PushPackage     "employee"     stack[ 0]: <empty>
[20210409144645] 7771  TRACE  : (47) import tests/packages/employee   2: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7772  TRACE  : (47) import tests/packages/employee   3: Push            100            stack[ 0]: <empty>
[20210409144645] 7773  TRACE  : (47) import tests/packages/employee   4: Constant        "ManagerID"    stack[ 1]: 100
[20210409144645] 7774  TRACE  : (47) import tests/packages/employee   5: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7775  TRACE  : (47) import tests/packages/employee   6: Push            T(Employee struct{id int, name string}) stack[ 0]: <empty>
[20210409144645] 7776  TRACE  : (47) import tests/packages/employee   7: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string})
[20210409144645] 7777  TRACE  : (47) import tests/packages/employee   8: Push            T(Employee struct{id int, name string},SetName()) stack[ 0]: <empty>
[20210409144645] 7778  TRACE  : (47) import tests/packages/employee   9: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string},SetName())
[20210409144645] 7779  TRACE  : (47) import tests/packages/employee  10: PopPackage      "employee"     stack[ 0]: <empty>
[20210409144645] 7780  TRACE  : (47) import tests/packages/employee  11: Stop                           stack[ 0]: <empty>
[20210409144645] 7781  TRACE  : *** Tracing funcs.ego (48)  
[20210409144645] 7782  TRACE  : (48)          funcs.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 7783  TRACE  : (48)          funcs.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7784  TRACE  : (48)          funcs.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7785  TRACE  : (48)          funcs.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7786  TRACE  : (48)          funcs.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7787  TRACE  : (48)          funcs.ego   5: Push            Testing{ description: "packages: functions" } stack[ 0]: <empty>
[20210409144645] 7788  TRACE  : (48)          funcs.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: functions" }
[20210409144645] 7789  TRACE  : (48)          funcs.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7790  TRACE  : (48)          funcs.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7791  TRACE  : (48)          funcs.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7792  TRACE  : (48)          funcs.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: functions" }
[20210409144645] 7793  TRACE  : (48)          funcs.ego  11: Print                          stack[ 1]: packages: functions
[20210409144645] 7794  TRACE  : (48)          funcs.ego  12: Push            "                               " stack[ 0]: <empty>
[20210409144645] 7795  TRACE  : (48)          funcs.ego  13: Print                          stack[ 1]:                                
[20210409144645] 7796  TRACE  : (48)          funcs.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7797  TRACE  : (48)          funcs.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7798  TRACE  : (48)          funcs.ego  16: AtLine          7              stack[ 0]: <empty>
[20210409144645] 7799  TRACE  : (48)          funcs.ego  17: PushScope                      stack[ 0]: <empty>
[20210409144645] 7800  TRACE  : (48)          funcs.ego  18: AtLine          8              stack[ 0]: <empty>
[20210409144645] 7801  TRACE  : (48)          funcs.ego  19: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7802  TRACE  : (48)          funcs.ego  20: Load            "employee"     stack[ 1]: M<let>
[20210409144645] 7803  TRACE  : (48)          funcs.ego  21: Member          "Employee"     stack[ 2]: Pkg< Employee: T(Employee struct{id int, name stri...
[20210409144645] 7804  TRACE  : (48)          funcs.ego  22: Push            "__type"       stack[ 2]: T(Employee struct{id int, name string},SetName()),...
[20210409144645] 7805  TRACE  : (48)          funcs.ego  23: Push            155            stack[ 3]: __type, T(Employee struct{id int, name string},Set...
[20210409144645] 7806  TRACE  : (48)          funcs.ego  24: Push            "id"           stack[ 4]: 155, __type, T(Employee struct{id int, name string...
[20210409144645] 7807  TRACE  : (48)          funcs.ego  25: Struct          2              stack[ 5]: id, 155, __type, T(Employee struct{id int, name st...
[20210409144645] 7808  TRACE  : (48)          funcs.ego  26: SymbolCreate    "e"            stack[ 2]: Employee{ id: 155, name: "" }, M<let>
[20210409144645] 7809  TRACE  : (48)          funcs.ego  27: Store           "e"            stack[ 2]: Employee{ id: 155, name: "" }, M<let>
[20210409144645] 7810  TRACE  : (48)          funcs.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7811  TRACE  : (48)          funcs.ego  29: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7812  TRACE  : (48)          funcs.ego  30: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7813  TRACE  : (48)          funcs.ego  31: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7814  TRACE  : (48)          funcs.ego  32: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7815  TRACE  : (48)          funcs.ego  33: Member          "assert"       stack[ 2]: Testing{ description: "packages: functions" }, M<a...
[20210409144645] 7816  TRACE  : (48)          funcs.ego  34: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7817  TRACE  : (48)          funcs.ego  35: Member          "id"           stack[ 3]: Employee{ id: 155, name: "" }, compiler.TestAssert...
[20210409144645] 7818  TRACE  : (48)          funcs.ego  36: Push            155            stack[ 3]: 155, compiler.TestAssert(), M<assert>
[20210409144645] 7819  TRACE  : (48)          funcs.ego  37: Equal                          stack[ 4]: 155, 155, compiler.TestAssert(), M<assert>
[20210409144645] 7820  TRACE  : (48)          funcs.ego  38: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7821  TRACE  : (48)          funcs.ego  39: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7822  TRACE  : (48)          funcs.ego  40: AtLine          10             stack[ 0]: <empty>
[20210409144645] 7823  TRACE  : (48)          funcs.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7824  TRACE  : (48)          funcs.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7825  TRACE  : (48)          funcs.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7826  TRACE  : (48)          funcs.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "packages: functions" }, M<a...
[20210409144645] 7827  TRACE  : (48)          funcs.ego  45: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7828  TRACE  : (48)          funcs.ego  46: Member          "name"         stack[ 3]: Employee{ id: 155, name: "" }, compiler.TestAssert...
[20210409144645] 7829  TRACE  : (48)          funcs.ego  47: Push            ""             stack[ 3]: , compiler.TestAssert(), M<assert>
[20210409144645] 7830  TRACE  : (48)          funcs.ego  48: Equal                          stack[ 4]: , , compiler.TestAssert(), M<assert>
[20210409144645] 7831  TRACE  : (48)          funcs.ego  49: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7832  TRACE  : (48)          funcs.ego  50: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7833  TRACE  : (48)          funcs.ego  51: AtLine          12             stack[ 0]: <empty>
[20210409144645] 7834  TRACE  : (48)          funcs.ego  52: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 7835  TRACE  : (48)          funcs.ego  53: Load            "e"            stack[ 1]: M<call>
[20210409144645] 7836  TRACE  : (48)          funcs.ego  54: SetThis                        stack[ 2]: Employee{ id: 155, name: "" }, M<call>
[20210409144645] 7837  TRACE  : (48)          funcs.ego  55: Member          "SetName"      stack[ 2]: Employee{ id: 155, name: "" }, M<call>
[20210409144645] 7838  TRACE  : (48)          funcs.ego  56: Push            "Frodo"        stack[ 2]: SetName(), M<call>
[20210409144645] 7839  TRACE  : (48)          funcs.ego  57: Call            1              stack[ 3]: Frodo, SetName(), M<call>
[20210409144645] 7840  TRACE  : (48)            SetName   0: ArgCheck        [1 1 SetName]  stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7841  TRACE  : (48)            SetName   1: GetThis         "e"            stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7842  TRACE  : (48)            SetName   2: Load            "__args"       stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7843  TRACE  : (48)            SetName   3: LoadIndex       0              stack[ 3]: ["Frodo"], F<funcs.ego:12>, M<call>
[20210409144645] 7844  TRACE  : (48)            SetName   4: RequiredType    T(string)      stack[ 3]: Frodo, F<funcs.ego:12>, M<call>
[20210409144645] 7845  TRACE  : (48)            SetName   5: StoreAlways     "s"            stack[ 3]: Frodo, F<funcs.ego:12>, M<call>
[20210409144645] 7846  TRACE  : (48)            SetName   6: AtLine          14             stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7847  TRACE  : (48)            SetName   7: PushScope                      stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7848  TRACE  : (48)            SetName   8: AtLine          15             stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7849  TRACE  : (48)            SetName   9: Push            M<let>         stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7850  TRACE  : (48)            SetName  10: Load            "s"            stack[ 3]: M<let>, F<funcs.ego:12>, M<call>
[20210409144645] 7851  TRACE  : (48)            SetName  11: Load            "e"            stack[ 4]: Frodo, M<let>, F<funcs.ego:12>, M<call>
[20210409144645] 7852  TRACE  : (48)            SetName  12: Push            "name"         stack[ 5]: Employee{ id: 155, name: "" }, Frodo, M<let>, F<fu...
[20210409144645] 7853  TRACE  : (48)            SetName  13: StoreIndex                     stack[ 6]: name, Employee{ id: 155, name: "" }, Frodo, M<let>...
[20210409144645] 7854  TRACE  : (48)            SetName  14: DropToMarker    M<let>         stack[ 4]: Employee{ id: 155, name: "Frodo" }, M<let>, F<func...
[20210409144645] 7855  TRACE  : (48)            SetName  15: PopScope                       stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7856  TRACE  : (48)            SetName  16: Return                         stack[ 2]: F<funcs.ego:12>, M<call>
[20210409144645] 7857  TRACE  : (48)          funcs.ego  58: DropToMarker    M<call>        stack[ 2]: M<let>, M<call>
[20210409144645] 7858  TRACE  : (48)          funcs.ego  59: AtLine          14             stack[ 0]: <empty>
[20210409144645] 7859  TRACE  : (48)          funcs.ego  60: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7860  TRACE  : (48)          funcs.ego  61: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7861  TRACE  : (48)          funcs.ego  62: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7862  TRACE  : (48)          funcs.ego  63: Member          "assert"       stack[ 2]: Testing{ description: "packages: functions" }, M<a...
[20210409144645] 7863  TRACE  : (48)          funcs.ego  64: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7864  TRACE  : (48)          funcs.ego  65: Member          "name"         stack[ 3]: Employee{ id: 155, name: "Frodo" }, compiler.TestA...
[20210409144645] 7865  TRACE  : (48)          funcs.ego  66: Push            "Frodo"        stack[ 3]: Frodo, compiler.TestAssert(), M<assert>
[20210409144645] 7866  TRACE  : (48)          funcs.ego  67: Equal                          stack[ 4]: Frodo, Frodo, compiler.TestAssert(), M<assert>
[20210409144645] 7867  TRACE  : (48)          funcs.ego  68: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7868  TRACE  : (48)          funcs.ego  69: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7869  TRACE  : (48)          funcs.ego  70: PopScope                       stack[ 0]: <empty>
[20210409144645] 7870  TRACE  : (48)          funcs.ego  71: AtLine          16             stack[ 0]: <empty>
[20210409144645] 7871  TRACE  : (48)          funcs.ego  72: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7872  TRACE  : (48)          funcs.ego  73: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 7873  TRACE  : (48)          funcs.ego  74: Print                          stack[ 1]: (PASS)  
[20210409144645] 7874  TRACE  : (48)          funcs.ego  75: Timer           1              stack[ 0]: <empty>
[20210409144645] 7875  TRACE  : (48)          funcs.ego  76: Print                          stack[ 1]: 0.522ms
[20210409144645] 7876  TRACE  : (48)          funcs.ego  77: Say             true           stack[ 0]: <empty>
TEST: packages: functions                               (PASS)  0.522ms
[20210409144645] 7877  TRACE  : (48)          funcs.ego  78: Stop                           stack[ 0]: <empty>
[20210409144645] 7878  TRACE  : *** Tracing json.ego (49)  
[20210409144645] 7879  TRACE  : (49)           json.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 7880  TRACE  : (49)           json.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7881  TRACE  : (49)           json.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 7882  TRACE  : (49)           json.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7883  TRACE  : (49)           json.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 7884  TRACE  : (49)           json.ego   5: Push            Testing{ description: "packages: json" } stack[ 0]: <empty>
[20210409144645] 7885  TRACE  : (49)           json.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: json" }
[20210409144645] 7886  TRACE  : (49)           json.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 7887  TRACE  : (49)           json.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 7888  TRACE  : (49)           json.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 7889  TRACE  : (49)           json.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: json" }
[20210409144645] 7890  TRACE  : (49)           json.ego  11: Print                          stack[ 1]: packages: json
[20210409144645] 7891  TRACE  : (49)           json.ego  12: Push            "                                    " stack[ 0]: <empty>
[20210409144645] 7892  TRACE  : (49)           json.ego  13: Print                          stack[ 1]:                                     
[20210409144645] 7893  TRACE  : (49)           json.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 7894  TRACE  : (49)           json.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 7895  TRACE  : (49)           json.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 7896  TRACE  : (49)           json.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 7897  TRACE  : (49)           json.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7898  TRACE  : (49)           json.ego  19: Push            55             stack[ 1]: M<let>
[20210409144645] 7899  TRACE  : (49)           json.ego  20: Push            "age"          stack[ 2]: 55, M<let>
[20210409144645] 7900  TRACE  : (49)           json.ego  21: Push            "Tom"          stack[ 3]: age, 55, M<let>
[20210409144645] 7901  TRACE  : (49)           json.ego  22: Push            "name"         stack[ 4]: Tom, age, 55, M<let>
[20210409144645] 7902  TRACE  : (49)           json.ego  23: Struct          2              stack[ 5]: name, Tom, age, 55, M<let>
[20210409144645] 7903  TRACE  : (49)           json.ego  24: SymbolCreate    "anon"         stack[ 2]: { age: 55, name: "Tom" }, M<let>
[20210409144645] 7904  TRACE  : (49)           json.ego  25: Store           "anon"         stack[ 2]: { age: 55, name: "Tom" }, M<let>
[20210409144645] 7905  TRACE  : (49)           json.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 7906  TRACE  : (49)           json.ego  27: AtLine          6              stack[ 0]: <empty>
[20210409144645] 7907  TRACE  : (49)           json.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7908  TRACE  : (49)           json.ego  29: Load            "json"         stack[ 1]: M<let>
[20210409144645] 7909  TRACE  : (49)           json.ego  30: SetThis                        stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7910  TRACE  : (49)           json.ego  31: Member          "MarshalIndented" stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7911  TRACE  : (49)           json.ego  32: Load            "anon"         stack[ 2]: functions.EncodeFormatted(), M<let>
[20210409144645] 7912  TRACE  : (49)           json.ego  33: Call            1              stack[ 3]: { age: 55, name: "Tom" }, functions.EncodeFormatte...
[20210409144645] 7913  TRACE  : (49)           json.ego  34: SymbolCreate    "s"            stack[ 4]: {\n  "age": 55,\n  "name": "Tom"\n}, <nil>, M<resu...
[20210409144645] 7914  TRACE  : (49)           json.ego  35: Store           "s"            stack[ 4]: {\n  "age": 55,\n  "name": "Tom"\n}, <nil>, M<resu...
[20210409144645] 7915  TRACE  : (49)           json.ego  36: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 7916  TRACE  : (49)           json.ego  37: AtLine          9              stack[ 0]: <empty>
[20210409144645] 7917  TRACE  : (49)           json.ego  38: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7918  TRACE  : (49)           json.ego  39: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7919  TRACE  : (49)           json.ego  40: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7920  TRACE  : (49)           json.ego  41: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 7921  TRACE  : (49)           json.ego  42: Load            "s"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7922  TRACE  : (49)           json.ego  43: Push            "{\n  "age": 55,\n  "name": "Tom"\n}" stack[ 3]: {\n  "age": 55,\n  "name": "Tom"\n}, compiler.Test...
[20210409144645] 7923  TRACE  : (49)           json.ego  44: Equal                          stack[ 4]: {\n  "age": 55,\n  "name": "Tom"\n}, {\n  "age": 5...
[20210409144645] 7924  TRACE  : (49)           json.ego  45: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7925  TRACE  : (49)           json.ego  46: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7926  TRACE  : (49)           json.ego  47: AtLine          15             stack[ 0]: <empty>
[20210409144645] 7927  TRACE  : (49)           json.ego  48: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7928  TRACE  : (49)           json.ego  49: Load            "json"         stack[ 1]: M<let>
[20210409144645] 7929  TRACE  : (49)           json.ego  50: SetThis                        stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7930  TRACE  : (49)           json.ego  51: Member          "Marshal"      stack[ 2]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7931  TRACE  : (49)           json.ego  52: Load            "anon"         stack[ 2]: functions.Encode(), M<let>
[20210409144645] 7932  TRACE  : (49)           json.ego  53: Call            1              stack[ 3]: { age: 55, name: "Tom" }, functions.Encode(), M<le...
[20210409144645] 7933  TRACE  : (49)           json.ego  54: Store           "s"            stack[ 4]: {"age":55,"name":"Tom"}, <nil>, M<results>, M<let>
[20210409144645] 7934  TRACE  : (49)           json.ego  55: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 7935  TRACE  : (49)           json.ego  56: AtLine          16             stack[ 0]: <empty>
[20210409144645] 7936  TRACE  : (49)           json.ego  57: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7937  TRACE  : (49)           json.ego  58: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7938  TRACE  : (49)           json.ego  59: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7939  TRACE  : (49)           json.ego  60: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 7940  TRACE  : (49)           json.ego  61: Load            "s"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7941  TRACE  : (49)           json.ego  62: Push            "{"age":55,"name":"Tom"}" stack[ 3]: {"age":55,"name":"Tom"}, compiler.TestAssert(), M<...
[20210409144645] 7942  TRACE  : (49)           json.ego  63: Equal                          stack[ 4]: {"age":55,"name":"Tom"}, {"age":55,"name":"Tom"}, ...
[20210409144645] 7943  TRACE  : (49)           json.ego  64: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7944  TRACE  : (49)           json.ego  65: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7945  TRACE  : (49)           json.ego  66: AtLine          19             stack[ 0]: <empty>
[20210409144645] 7946  TRACE  : (49)           json.ego  67: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7947  TRACE  : (49)           json.ego  68: Push            -1             stack[ 1]: M<let>
[20210409144645] 7948  TRACE  : (49)           json.ego  69: Load            "anon"         stack[ 2]: -1, M<let>
[20210409144645] 7949  TRACE  : (49)           json.ego  70: Push            "age"          stack[ 3]: { age: 55, name: "Tom" }, -1, M<let>
[20210409144645] 7950  TRACE  : (49)           json.ego  71: StoreIndex                     stack[ 4]: age, { age: 55, name: "Tom" }, -1, M<let>
[20210409144645] 7951  TRACE  : (49)           json.ego  72: DropToMarker    M<let>         stack[ 2]: { age: -1, name: "Tom" }, M<let>
[20210409144645] 7952  TRACE  : (49)           json.ego  73: AtLine          20             stack[ 0]: <empty>
[20210409144645] 7953  TRACE  : (49)           json.ego  74: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7954  TRACE  : (49)           json.ego  75: Push            "aka"          stack[ 1]: M<let>
[20210409144645] 7955  TRACE  : (49)           json.ego  76: Load            "anon"         stack[ 2]: aka, M<let>
[20210409144645] 7956  TRACE  : (49)           json.ego  77: Push            "name"         stack[ 3]: { age: -1, name: "Tom" }, aka, M<let>
[20210409144645] 7957  TRACE  : (49)           json.ego  78: StoreIndex                     stack[ 4]: name, { age: -1, name: "Tom" }, aka, M<let>
[20210409144645] 7958  TRACE  : (49)           json.ego  79: DropToMarker    M<let>         stack[ 2]: { age: -1, name: "aka" }, M<let>
[20210409144645] 7959  TRACE  : (49)           json.ego  80: AtLine          22             stack[ 0]: <empty>
[20210409144645] 7960  TRACE  : (49)           json.ego  81: Load            "json"         stack[ 0]: <empty>
[20210409144645] 7961  TRACE  : (49)           json.ego  82: SetThis                        stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7962  TRACE  : (49)           json.ego  83: Member          "Unmarshal"    stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 7963  TRACE  : (49)           json.ego  84: Load            "s"            stack[ 1]: functions.Decode()
[20210409144645] 7964  TRACE  : (49)           json.ego  85: AddressOf       "anon"         stack[ 2]: {"age":55,"name":"Tom"}, functions.Decode()
[20210409144645] 7965  TRACE  : (49)           json.ego  86: Call            2              stack[ 3]: &&datatypes.EgoStruct{typeDef:datatypes.Type{name:...
[20210409144645] 7966  TRACE  : (49)           json.ego  87: StackCheck      2              stack[ 3]: { age: 55, name: "Tom" }, <nil>, M<results>
[20210409144645] 7967  TRACE  : (49)           json.ego  88: SymbolOptCreate "a2"           stack[ 3]: { age: 55, name: "Tom" }, <nil>, M<results>
[20210409144645] 7968  TRACE  : (49)           json.ego  89: Store           "a2"           stack[ 3]: { age: 55, name: "Tom" }, <nil>, M<results>
[20210409144645] 7969  TRACE  : (49)           json.ego  90: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7970  TRACE  : (49)           json.ego  91: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 7971  TRACE  : (49)           json.ego  92: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 7972  TRACE  : (49)           json.ego  93: AtLine          23             stack[ 0]: <empty>
[20210409144645] 7973  TRACE  : (49)           json.ego  94: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 7974  TRACE  : (49)           json.ego  95: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 7975  TRACE  : (49)           json.ego  96: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 7976  TRACE  : (49)           json.ego  97: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 7977  TRACE  : (49)           json.ego  98: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 7978  TRACE  : (49)           json.ego  99: BranchFalse     @112           stack[ 1]: false
[20210409144645] 7979  TRACE  : (49)           json.ego 112: AtLine          27             stack[ 0]: <empty>
[20210409144645] 7980  TRACE  : (49)           json.ego 113: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 7981  TRACE  : (49)           json.ego 114: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 7982  TRACE  : (49)           json.ego 115: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 7983  TRACE  : (49)           json.ego 116: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 7984  TRACE  : (49)           json.ego 117: Load            "a2"           stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 7985  TRACE  : (49)           json.ego 118: Push            55             stack[ 3]: { age: 55, name: "Tom" }, compiler.TestAssert(), M...
[20210409144645] 7986  TRACE  : (49)           json.ego 119: Push            "age"          stack[ 4]: 55, { age: 55, name: "Tom" }, compiler.TestAssert(...
[20210409144645] 7987  TRACE  : (49)           json.ego 120: Push            "Tom"          stack[ 5]: age, 55, { age: 55, name: "Tom" }, compiler.TestAs...
[20210409144645] 7988  TRACE  : (49)           json.ego 121: Push            "name"         stack[ 6]: Tom, age, 55, { age: 55, name: "Tom" }, compiler.T...
[20210409144645] 7989  TRACE  : (49)           json.ego 122: Struct          2              stack[ 7]: name, Tom, age, 55, { age: 55, name: "Tom" }, comp...
[20210409144645] 7990  TRACE  : (49)           json.ego 123: Equal                          stack[ 4]: { age: 55, name: "Tom" }, { age: 55, name: "Tom" }...
[20210409144645] 7991  TRACE  : (49)           json.ego 124: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 7992  TRACE  : (49)           json.ego 125: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 7993  TRACE  : (49)           json.ego 126: AtLine          30             stack[ 0]: <empty>
[20210409144645] 7994  TRACE  : (49)           json.ego 127: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 7995  TRACE  : (49)           json.ego 128: Load            "new"          stack[ 1]: M<let>
[20210409144645] 7996  TRACE  : (49)           json.ego 129: Push            T(map[string]interface{}) stack[ 2]: functions.New(), M<let>
[20210409144645] 7997  TRACE  : (49)           json.ego 130: Call            1              stack[ 3]: T(map[string]interface{}), functions.New(), M<let>
[20210409144645] 7998  TRACE  : (49)           json.ego 131: SymbolCreate    "m"            stack[ 2]: [], M<let>
[20210409144645] 7999  TRACE  : (49)           json.ego 132: Store           "m"            stack[ 2]: [], M<let>
[20210409144645] 8000  TRACE  : (49)           json.ego 133: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8001  TRACE  : (49)           json.ego 134: AtLine          32             stack[ 0]: <empty>
[20210409144645] 8002  TRACE  : (49)           json.ego 135: Load            "json"         stack[ 0]: <empty>
[20210409144645] 8003  TRACE  : (49)           json.ego 136: SetThis                        stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 8004  TRACE  : (49)           json.ego 137: Member          "Unmarshal"    stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 8005  TRACE  : (49)           json.ego 138: Load            "s"            stack[ 1]: functions.Decode()
[20210409144645] 8006  TRACE  : (49)           json.ego 139: AddressOf       "m"            stack[ 2]: {"age":55,"name":"Tom"}, functions.Decode()
[20210409144645] 8007  TRACE  : (49)           json.ego 140: Call            2              stack[ 3]: &&datatypes.EgoMap{data:map[interface {}]interface...
[20210409144645] 8008  TRACE  : (49)           json.ego 141: StackCheck      2              stack[ 3]: ["age": 55, "name": "Tom"], <nil>, M<results>
[20210409144645] 8009  TRACE  : (49)           json.ego 142: SymbolOptCreate "a3"           stack[ 3]: ["age": 55, "name": "Tom"], <nil>, M<results>
[20210409144645] 8010  TRACE  : (49)           json.ego 143: Store           "a3"           stack[ 3]: ["age": 55, "name": "Tom"], <nil>, M<results>
[20210409144645] 8011  TRACE  : (49)           json.ego 144: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 8012  TRACE  : (49)           json.ego 145: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 8013  TRACE  : (49)           json.ego 146: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 8014  TRACE  : (49)           json.ego 147: AtLine          33             stack[ 0]: <empty>
[20210409144645] 8015  TRACE  : (49)           json.ego 148: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 8016  TRACE  : (49)           json.ego 149: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 8017  TRACE  : (49)           json.ego 150: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 8018  TRACE  : (49)           json.ego 151: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 8019  TRACE  : (49)           json.ego 152: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 8020  TRACE  : (49)           json.ego 153: BranchFalse     @166           stack[ 1]: false
[20210409144645] 8021  TRACE  : (49)           json.ego 166: AtLine          37             stack[ 0]: <empty>
[20210409144645] 8022  TRACE  : (49)           json.ego 167: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8023  TRACE  : (49)           json.ego 168: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8024  TRACE  : (49)           json.ego 169: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8025  TRACE  : (49)           json.ego 170: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 8026  TRACE  : (49)           json.ego 171: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8027  TRACE  : (49)           json.ego 172: Load            "m"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 8028  TRACE  : (49)           json.ego 173: Call            1              stack[ 4]: ["age": 55, "name": "Tom"], functions.Type(), comp...
[20210409144645] 8029  TRACE  : (49)           json.ego 174: Push            "map[string]interface{}" stack[ 3]: map[string]interface{}, compiler.TestAssert(), M<a...
[20210409144645] 8030  TRACE  : (49)           json.ego 175: Equal                          stack[ 4]: map[string]interface{}, map[string]interface{}, co...
[20210409144645] 8031  TRACE  : (49)           json.ego 176: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8032  TRACE  : (49)           json.ego 177: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8033  TRACE  : (49)           json.ego 178: AtLine          38             stack[ 0]: <empty>
[20210409144645] 8034  TRACE  : (49)           json.ego 179: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8035  TRACE  : (49)           json.ego 180: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8036  TRACE  : (49)           json.ego 181: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8037  TRACE  : (49)           json.ego 182: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 8038  TRACE  : (49)           json.ego 183: Load            "m"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8039  TRACE  : (49)           json.ego 184: Push            "age"          stack[ 3]: ["age": 55, "name": "Tom"], compiler.TestAssert(),...
[20210409144645] 8040  TRACE  : (49)           json.ego 185: LoadIndex                      stack[ 4]: age, ["age": 55, "name": "Tom"], compiler.TestAsse...
[20210409144645] 8041  TRACE  : (49)           json.ego 186: Push            55             stack[ 3]: 55, compiler.TestAssert(), M<assert>
[20210409144645] 8042  TRACE  : (49)           json.ego 187: Equal                          stack[ 4]: 55, 55, compiler.TestAssert(), M<assert>
[20210409144645] 8043  TRACE  : (49)           json.ego 188: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8044  TRACE  : (49)           json.ego 189: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8045  TRACE  : (49)           json.ego 190: AtLine          39             stack[ 0]: <empty>
[20210409144645] 8046  TRACE  : (49)           json.ego 191: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8047  TRACE  : (49)           json.ego 192: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8048  TRACE  : (49)           json.ego 193: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8049  TRACE  : (49)           json.ego 194: Member          "assert"       stack[ 2]: Testing{ description: "packages: json" }, M<assert...
[20210409144645] 8050  TRACE  : (49)           json.ego 195: Load            "m"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8051  TRACE  : (49)           json.ego 196: Push            "name"         stack[ 3]: ["age": 55, "name": "Tom"], compiler.TestAssert(),...
[20210409144645] 8052  TRACE  : (49)           json.ego 197: LoadIndex                      stack[ 4]: name, ["age": 55, "name": "Tom"], compiler.TestAss...
[20210409144645] 8053  TRACE  : (49)           json.ego 198: Push            "Tom"          stack[ 3]: Tom, compiler.TestAssert(), M<assert>
[20210409144645] 8054  TRACE  : (49)           json.ego 199: Equal                          stack[ 4]: Tom, Tom, compiler.TestAssert(), M<assert>
[20210409144645] 8055  TRACE  : (49)           json.ego 200: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8056  TRACE  : (49)           json.ego 201: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8057  TRACE  : (49)           json.ego 202: AtLine          42             stack[ 0]: <empty>
[20210409144645] 8058  TRACE  : (49)           json.ego 203: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8059  TRACE  : (49)           json.ego 204: Push            "[1, 2, 3]"    stack[ 1]: M<let>
[20210409144645] 8060  TRACE  : (49)           json.ego 205: Store           "s"            stack[ 2]: [1, 2, 3], M<let>
[20210409144645] 8061  TRACE  : (49)           json.ego 206: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8062  TRACE  : (49)           json.ego 207: AtLine          43             stack[ 0]: <empty>
[20210409144645] 8063  TRACE  : (49)           json.ego 208: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8064  TRACE  : (49)           json.ego 209: Load            "new"          stack[ 1]: M<let>
[20210409144645] 8065  TRACE  : (49)           json.ego 210: Push            T([]int)       stack[ 2]: functions.New(), M<let>
[20210409144645] 8066  TRACE  : (49)           json.ego 211: Call            1              stack[ 3]: T([]int), functions.New(), M<let>
[20210409144645] 8067  TRACE  : (49)           json.ego 212: SymbolCreate    "a"            stack[ 2]: [], M<let>
[20210409144645] 8068  TRACE  : (49)           json.ego 213: Store           "a"            stack[ 2]: [], M<let>
[20210409144645] 8069  TRACE  : (49)           json.ego 214: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8070  TRACE  : (49)           json.ego 215: AtLine          45             stack[ 0]: <empty>
[20210409144645] 8071  TRACE  : (49)           json.ego 216: Load            "json"         stack[ 0]: <empty>
[20210409144645] 8072  TRACE  : (49)           json.ego 217: SetThis                        stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 8073  TRACE  : (49)           json.ego 218: Member          "Unmarshal"    stack[ 1]: Pkg< Marshal: functions.Encode(), MarshalIndented:...
[20210409144645] 8074  TRACE  : (49)           json.ego 219: Load            "s"            stack[ 1]: functions.Decode()
[20210409144645] 8075  TRACE  : (49)           json.ego 220: AddressOf       "a"            stack[ 2]: [1, 2, 3], functions.Decode()
[20210409144645] 8076  TRACE  : (49)           json.ego 221: Call            2              stack[ 3]: &&datatypes.EgoArray{data:[]interface {}{}, valueT...
[20210409144645] 8077  TRACE  : (49)           json.ego 222: StackCheck      2              stack[ 3]: [1, 2, 3], <nil>, M<results>
[20210409144645] 8078  TRACE  : (49)           json.ego 223: SymbolOptCreate "a4"           stack[ 3]: [1, 2, 3], <nil>, M<results>
[20210409144645] 8079  TRACE  : (49)           json.ego 224: Store           "a4"           stack[ 3]: [1, 2, 3], <nil>, M<results>
[20210409144645] 8080  TRACE  : (49)           json.ego 225: SymbolOptCreate "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 8081  TRACE  : (49)           json.ego 226: Store           "e"            stack[ 2]: <nil>, M<results>
[20210409144645] 8082  TRACE  : (49)           json.ego 227: DropToMarker                   stack[ 1]: M<results>
[20210409144645] 8083  TRACE  : (49)           json.ego 228: AtLine          46             stack[ 0]: <empty>
[20210409144645] 8084  TRACE  : (49)           json.ego 229: Load            "bool"         stack[ 0]: <empty>
[20210409144645] 8085  TRACE  : (49)           json.ego 230: Load            "e"            stack[ 1]: functions.Bool()
[20210409144645] 8086  TRACE  : (49)           json.ego 231: Push                           stack[ 2]: <nil>, functions.Bool()
[20210409144645] 8087  TRACE  : (49)           json.ego 232: NotEqual                       stack[ 3]: <nil>, <nil>, functions.Bool()
[20210409144645] 8088  TRACE  : (49)           json.ego 233: Call            1              stack[ 2]: false, functions.Bool()
[20210409144645] 8089  TRACE  : (49)           json.ego 234: BranchFalse     @247           stack[ 1]: false
[20210409144645] 8090  TRACE  : (49)           json.ego 247: PopScope                       stack[ 0]: <empty>
[20210409144645] 8091  TRACE  : (49)           json.ego 248: AtLine          51             stack[ 0]: <empty>
[20210409144645] 8092  TRACE  : (49)           json.ego 249: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8093  TRACE  : (49)           json.ego 250: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8094  TRACE  : (49)           json.ego 251: Print                          stack[ 1]: (PASS)  
[20210409144645] 8095  TRACE  : (49)           json.ego 252: Timer           1              stack[ 0]: <empty>
[20210409144645] 8096  TRACE  : (49)           json.ego 253: Print                          stack[ 1]: 0.001s
[20210409144645] 8097  TRACE  : (49)           json.ego 254: Say             true           stack[ 0]: <empty>
TEST: packages: json                                    (PASS)  0.001s
[20210409144645] 8098  TRACE  : (49)           json.ego 255: Stop                           stack[ 0]: <empty>
[20210409144645] 8099  TRACE  : *** Tracing import tests/packages/test1 (50)  
[20210409144645] 8100  TRACE  : (50) import tests/packages/test1   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 8101  TRACE  : (50) import tests/packages/test1   1: PushPackage     "test1"        stack[ 0]: <empty>
[20210409144645] 8102  TRACE  : (50) import tests/packages/test1   2: AtLine          3              stack[ 0]: <empty>
[20210409144645] 8103  TRACE  : (50) import tests/packages/test1   3: Push            0              stack[ 0]: <empty>
[20210409144645] 8104  TRACE  : (50) import tests/packages/test1   4: SymbolCreate    "Counter"      stack[ 1]: 0
[20210409144645] 8105  TRACE  : (50) import tests/packages/test1   5: Store           "Counter"      stack[ 1]: 0
[20210409144645] 8106  TRACE  : (50) import tests/packages/test1   6: Push            doubler()      stack[ 0]: <empty>
[20210409144645] 8107  TRACE  : (50) import tests/packages/test1   7: StoreAlways     "doubler"      stack[ 1]: doubler()
[20210409144645] 8108  TRACE  : (50) import tests/packages/test1   8: Push            SetCounter()   stack[ 0]: <empty>
[20210409144645] 8109  TRACE  : (50) import tests/packages/test1   9: StoreAlways     "SetCounter"   stack[ 1]: SetCounter()
[20210409144645] 8110  TRACE  : (50) import tests/packages/test1  10: PopPackage      "test1"        stack[ 0]: <empty>
[20210409144645] 8111  TRACE  : (50) import tests/packages/test1  11: Stop                           stack[ 0]: <empty>
[20210409144645] 8112  TRACE  : *** Tracing localfuncs.ego (51)  
[20210409144645] 8113  TRACE  : (51)     localfuncs.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 8114  TRACE  : (51)     localfuncs.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8115  TRACE  : (51)     localfuncs.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8116  TRACE  : (51)     localfuncs.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8117  TRACE  : (51)     localfuncs.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8118  TRACE  : (51)     localfuncs.ego   5: Push            Testing{ description: "packages: package-local functions" } stack[ 0]: <empty>
[20210409144645] 8119  TRACE  : (51)     localfuncs.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: package-local fun...
[20210409144645] 8120  TRACE  : (51)     localfuncs.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8121  TRACE  : (51)     localfuncs.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8122  TRACE  : (51)     localfuncs.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8123  TRACE  : (51)     localfuncs.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: package-local fun...
[20210409144645] 8124  TRACE  : (51)     localfuncs.ego  11: Print                          stack[ 1]: packages: package-local functions
[20210409144645] 8125  TRACE  : (51)     localfuncs.ego  12: Push            "                 " stack[ 0]: <empty>
[20210409144645] 8126  TRACE  : (51)     localfuncs.ego  13: Print                          stack[ 1]:                  
[20210409144645] 8127  TRACE  : (51)     localfuncs.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8128  TRACE  : (51)     localfuncs.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 8129  TRACE  : (51)     localfuncs.ego  16: Push            localfuncs()   stack[ 0]: <empty>
[20210409144645] 8130  TRACE  : (51)     localfuncs.ego  17: StoreAlways     "localfuncs"   stack[ 1]: localfuncs()
[20210409144645] 8131  TRACE  : (51)     localfuncs.ego  18: AtLine          12             stack[ 0]: <empty>
[20210409144645] 8132  TRACE  : (51)     localfuncs.ego  19: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 8133  TRACE  : (51)     localfuncs.ego  20: Load            "localfuncs"   stack[ 1]: M<call>
[20210409144645] 8134  TRACE  : (51)     localfuncs.ego  21: Call            0              stack[ 2]: localfuncs(), M<call>
[20210409144645] 8135  TRACE  : (51)         localfuncs   0: FromFile        "tests/packages/test1.ego" stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8136  TRACE  : (51)         localfuncs   1: ArgCheck        [0 0 localfuncs] stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8137  TRACE  : (51)         localfuncs   2: AtLine          6              stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8138  TRACE  : (51)         localfuncs   3: PushScope                      stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8139  TRACE  : (51)         localfuncs   4: AtLine          7              stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8140  TRACE  : (51)         localfuncs   5: Push            M<call>        stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8141  TRACE  : (51)         localfuncs   6: Load            "test1"        stack[ 3]: M<call>, F<localfuncs.ego:12>, M<call>
[20210409144645] 8142  TRACE  : (51)         localfuncs   7: SetThis                        stack[ 4]: Pkg< Counter: 0, SetCounter: SetCounter() >, M<cal...
[20210409144645] 8143  TRACE  : (51)         localfuncs   8: Member          "SetCounter"   stack[ 4]: Pkg< Counter: 0, SetCounter: SetCounter() >, M<cal...
[20210409144645] 8144  TRACE  : (51)         localfuncs   9: Push            42             stack[ 4]: SetCounter(), M<call>, F<localfuncs.ego:12>, M<cal...
[20210409144645] 8145  TRACE  : (51)         localfuncs  10: Call            1              stack[ 5]: 42, SetCounter(), M<call>, F<localfuncs.ego:12>, M...
[20210409144645] 8146  TRACE  : (51)  Using symbol table from package test1
[20210409144645] 8147  TRACE  : (51)         SetCounter   0: ArgCheck        [1 1 SetCounter] stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8148  TRACE  : (51)         SetCounter   1: Load            "__args"       stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8149  TRACE  : (51)         SetCounter   2: LoadIndex       0              stack[ 5]: [42], F<localfuncs:7>, M<call>, F<localfuncs.ego:1...
[20210409144645] 8150  TRACE  : (51)         SetCounter   3: RequiredType    T(int)         stack[ 5]: 42, F<localfuncs:7>, M<call>, F<localfuncs.ego:12>...
[20210409144645] 8151  TRACE  : (51)         SetCounter   4: StoreAlways     "i"            stack[ 5]: 42, F<localfuncs:7>, M<call>, F<localfuncs.ego:12>...
[20210409144645] 8152  TRACE  : (51)         SetCounter   5: AtLine          9              stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8153  TRACE  : (51)         SetCounter   6: PushScope                      stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8154  TRACE  : (51)         SetCounter   7: AtLine          10             stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8155  TRACE  : (51)         SetCounter   8: Push            M<let>         stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8156  TRACE  : (51)         SetCounter   9: Load            "doubler"      stack[ 5]: M<let>, F<localfuncs:7>, M<call>, F<localfuncs.ego...
[20210409144645] 8157  TRACE  : (51)         SetCounter  10: Load            "i"            stack[ 6]: doubler(), M<let>, F<localfuncs:7>, M<call>, F<loc...
[20210409144645] 8158  TRACE  : (51)         SetCounter  11: Call            1              stack[ 7]: 42, doubler(), M<let>, F<localfuncs:7>, M<call>, F...
[20210409144645] 8159  TRACE  : (51)            doubler   0: ArgCheck        [1 1 doubler]  stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8160  TRACE  : (51)            doubler   1: Load            "__args"       stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8161  TRACE  : (51)            doubler   2: LoadIndex       0              stack[ 7]: [42], F<SetCounter:10>, M<let>, F<localfuncs:7>, M...
[20210409144645] 8162  TRACE  : (51)            doubler   3: RequiredType    T(int)         stack[ 7]: 42, F<SetCounter:10>, M<let>, F<localfuncs:7>, M<c...
[20210409144645] 8163  TRACE  : (51)            doubler   4: StoreAlways     "n"            stack[ 7]: 42, F<SetCounter:10>, M<let>, F<localfuncs:7>, M<c...
[20210409144645] 8164  TRACE  : (51)            doubler   5: AtLine          5              stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8165  TRACE  : (51)            doubler   6: PushScope                      stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8166  TRACE  : (51)            doubler   7: AtLine          6              stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8167  TRACE  : (51)            doubler   8: Load            "n"            stack[ 6]: F<SetCounter:10>, M<let>, F<localfuncs:7>, M<call>...
[20210409144645] 8168  TRACE  : (51)            doubler   9: Push            2              stack[ 7]: 42, F<SetCounter:10>, M<let>, F<localfuncs:7>, M<c...
[20210409144645] 8169  TRACE  : (51)            doubler  10: Unknown 38                     stack[ 8]: 2, 42, F<SetCounter:10>, M<let>, F<localfuncs:7>, ...
[20210409144645] 8170  TRACE  : (51)            doubler  11: Coerce          T(int)         stack[ 7]: 84, F<SetCounter:10>, M<let>, F<localfuncs:7>, M<c...
[20210409144645] 8171  TRACE  : (51)            doubler  12: Return          true           stack[ 7]: 84, F<SetCounter:10>, M<let>, F<localfuncs:7>, M<c...
[20210409144645] 8172  TRACE  : (51)         SetCounter  12: Store           "Counter"      stack[ 6]: 84, M<let>, F<localfuncs:7>, M<call>, F<localfuncs...
[20210409144645] 8173  TRACE  : (51)         SetCounter  13: DropToMarker    M<let>         stack[ 5]: M<let>, F<localfuncs:7>, M<call>, F<localfuncs.ego...
[20210409144645] 8174  TRACE  : (51)         SetCounter  14: PopScope                       stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8175  TRACE  : (51)         SetCounter  15: Return                         stack[ 4]: F<localfuncs:7>, M<call>, F<localfuncs.ego:12>, M<...
[20210409144645] 8176  TRACE  : (51)         localfuncs  11: DropToMarker    M<call>        stack[ 4]: M<let>, M<call>, F<localfuncs.ego:12>, M<call>
[20210409144645] 8177  TRACE  : (51)         localfuncs  12: AtLine          8              stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8178  TRACE  : (51)         localfuncs  13: ModeCheck       "test"         stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8179  TRACE  : (51)         localfuncs  14: Push            M<assert>      stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8180  TRACE  : (51)         localfuncs  15: Load            "T"            stack[ 3]: M<assert>, F<localfuncs.ego:12>, M<call>
[20210409144645] 8181  TRACE  : (51)         localfuncs  16: Member          "assert"       stack[ 4]: Testing{ description: "packages: package-local fun...
[20210409144645] 8182  TRACE  : (51)         localfuncs  17: Load            "test1"        stack[ 4]: compiler.TestAssert(), M<assert>, F<localfuncs.ego...
[20210409144645] 8183  TRACE  : (51)         localfuncs  18: Member          "Counter"      stack[ 5]: Pkg< Counter: 84, SetCounter: SetCounter() >, comp...
[20210409144645] 8184  TRACE  : (51)         localfuncs  19: Push            84             stack[ 5]: 84, compiler.TestAssert(), M<assert>, F<localfuncs...
[20210409144645] 8185  TRACE  : (51)         localfuncs  20: Equal                          stack[ 6]: 84, 84, compiler.TestAssert(), M<assert>, F<localf...
[20210409144645] 8186  TRACE  : (51)         localfuncs  21: Call            1              stack[ 5]: true, compiler.TestAssert(), M<assert>, F<localfun...
[20210409144645] 8187  TRACE  : (51)         localfuncs  22: DropToMarker                   stack[ 4]: true, M<assert>, F<localfuncs.ego:12>, M<call>
[20210409144645] 8188  TRACE  : (51)         localfuncs  23: AtLine          9              stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8189  TRACE  : (51)         localfuncs  24: Push            0              stack[ 2]: F<localfuncs.ego:12>, M<call>
[20210409144645] 8190  TRACE  : (51)         localfuncs  25: Coerce          T(int)         stack[ 3]: 0, F<localfuncs.ego:12>, M<call>
[20210409144645] 8191  TRACE  : (51)         localfuncs  26: Return          true           stack[ 3]: 0, F<localfuncs.ego:12>, M<call>
[20210409144645] 8192  TRACE  : (51)     localfuncs.ego  22: DropToMarker    M<call>        stack[ 2]: 0, M<call>
[20210409144645] 8193  TRACE  : (51)     localfuncs.ego  23: AtLine          14             stack[ 0]: <empty>
[20210409144645] 8194  TRACE  : (51)     localfuncs.ego  24: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8195  TRACE  : (51)     localfuncs.ego  25: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8196  TRACE  : (51)     localfuncs.ego  26: Print                          stack[ 1]: (PASS)  
[20210409144645] 8197  TRACE  : (51)     localfuncs.ego  27: Timer           1              stack[ 0]: <empty>
[20210409144645] 8198  TRACE  : (51)     localfuncs.ego  28: Print                          stack[ 1]: 0.500ms
[20210409144645] 8199  TRACE  : (51)     localfuncs.ego  29: Say             true           stack[ 0]: <empty>
TEST: packages: package-local functions                 (PASS)  0.500ms
[20210409144645] 8200  TRACE  : (51)     localfuncs.ego  30: Stop                           stack[ 0]: <empty>
[20210409144645] 8201  TRACE  : *** Tracing reflection.ego (52)  
[20210409144645] 8202  TRACE  : (52)     reflection.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 8203  TRACE  : (52)     reflection.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8204  TRACE  : (52)     reflection.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8205  TRACE  : (52)     reflection.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8206  TRACE  : (52)     reflection.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8207  TRACE  : (52)     reflection.ego   5: Push            Testing{ description: "packages: reflect of packages" } stack[ 0]: <empty>
[20210409144645] 8208  TRACE  : (52)     reflection.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: reflect of packag...
[20210409144645] 8209  TRACE  : (52)     reflection.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8210  TRACE  : (52)     reflection.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8211  TRACE  : (52)     reflection.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8212  TRACE  : (52)     reflection.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: reflect of packag...
[20210409144645] 8213  TRACE  : (52)     reflection.ego  11: Print                          stack[ 1]: packages: reflect of packages
[20210409144645] 8214  TRACE  : (52)     reflection.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144645] 8215  TRACE  : (52)     reflection.ego  13: Print                          stack[ 1]:                      
[20210409144645] 8216  TRACE  : (52)     reflection.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8217  TRACE  : (52)     reflection.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 8218  TRACE  : (52)     reflection.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 8219  TRACE  : (52)     reflection.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 8220  TRACE  : (52)     reflection.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8221  TRACE  : (52)     reflection.ego  19: Load            "reflect"      stack[ 1]: M<let>
[20210409144645] 8222  TRACE  : (52)     reflection.ego  20: Load            "strings"      stack[ 2]: functions.Reflect(), M<let>
[20210409144645] 8223  TRACE  : (52)     reflection.ego  21: Call            1              stack[ 3]: Pkg< Blockfonts: functions.blockFonts(), Blockprin...
[20210409144645] 8224  TRACE  : (52)     reflection.ego  22: SymbolCreate    "p"            stack[ 2]: { members: ["Blockfonts", "Blockprint", "Camel", "...
[20210409144645] 8225  TRACE  : (52)     reflection.ego  23: Store           "p"            stack[ 2]: { members: ["Blockfonts", "Blockprint", "Camel", "...
[20210409144645] 8226  TRACE  : (52)     reflection.ego  24: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8227  TRACE  : (52)     reflection.ego  25: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8228  TRACE  : (52)     reflection.ego  26: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8229  TRACE  : (52)     reflection.ego  27: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8230  TRACE  : (52)     reflection.ego  28: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8231  TRACE  : (52)     reflection.ego  29: Member          "assert"       stack[ 2]: Testing{ description: "packages: reflect of packag...
[20210409144645] 8232  TRACE  : (52)     reflection.ego  30: Load            "p"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8233  TRACE  : (52)     reflection.ego  31: Member          "type"         stack[ 3]: { members: ["Blockfonts", "Blockprint", "Camel", "...
[20210409144645] 8234  TRACE  : (52)     reflection.ego  32: Push            "package"      stack[ 3]: package, compiler.TestAssert(), M<assert>
[20210409144645] 8235  TRACE  : (52)     reflection.ego  33: Equal                          stack[ 4]: package, package, compiler.TestAssert(), M<assert>
[20210409144645] 8236  TRACE  : (52)     reflection.ego  34: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8237  TRACE  : (52)     reflection.ego  35: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8238  TRACE  : (52)     reflection.ego  36: AtLine          8              stack[ 0]: <empty>
[20210409144645] 8239  TRACE  : (52)     reflection.ego  37: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8240  TRACE  : (52)     reflection.ego  38: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8241  TRACE  : (52)     reflection.ego  39: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8242  TRACE  : (52)     reflection.ego  40: Member          "assert"       stack[ 2]: Testing{ description: "packages: reflect of packag...
[20210409144645] 8243  TRACE  : (52)     reflection.ego  41: Load            "index"        stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8244  TRACE  : (52)     reflection.ego  42: Load            "p"            stack[ 3]: functions.Index(), compiler.TestAssert(), M<assert...
[20210409144645] 8245  TRACE  : (52)     reflection.ego  43: Member          "members"      stack[ 4]: { members: ["Blockfonts", "Blockprint", "Camel", "...
[20210409144645] 8246  TRACE  : (52)     reflection.ego  44: Push            "Camel"        stack[ 4]: ["Blockfonts", "Blockprint", "Camel", "Chars", "Co...
[20210409144645] 8247  TRACE  : (52)     reflection.ego  45: Call            2              stack[ 5]: Camel, ["Blockfonts", "Blockprint", "Camel", "Char...
[20210409144645] 8248  TRACE  : (52)     reflection.ego  46: Push            -1             stack[ 3]: 2, compiler.TestAssert(), M<assert>
[20210409144645] 8249  TRACE  : (52)     reflection.ego  47: GT                             stack[ 4]: -1, 2, compiler.TestAssert(), M<assert>
[20210409144645] 8250  TRACE  : (52)     reflection.ego  48: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8251  TRACE  : (52)     reflection.ego  49: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8252  TRACE  : (52)     reflection.ego  50: AtLine          9              stack[ 0]: <empty>
[20210409144645] 8253  TRACE  : (52)     reflection.ego  51: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8254  TRACE  : (52)     reflection.ego  52: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8255  TRACE  : (52)     reflection.ego  53: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8256  TRACE  : (52)     reflection.ego  54: Member          "assert"       stack[ 2]: Testing{ description: "packages: reflect of packag...
[20210409144645] 8257  TRACE  : (52)     reflection.ego  55: Load            "p"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8258  TRACE  : (52)     reflection.ego  56: Member          "native"       stack[ 3]: { members: ["Blockfonts", "Blockprint", "Camel", "...
[20210409144645] 8259  TRACE  : (52)     reflection.ego  57: Push            false          stack[ 3]: false, compiler.TestAssert(), M<assert>
[20210409144645] 8260  TRACE  : (52)     reflection.ego  58: Equal                          stack[ 4]: false, false, compiler.TestAssert(), M<assert>
[20210409144645] 8261  TRACE  : (52)     reflection.ego  59: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8262  TRACE  : (52)     reflection.ego  60: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8263  TRACE  : (52)     reflection.ego  61: PopScope                       stack[ 0]: <empty>
[20210409144645] 8264  TRACE  : (52)     reflection.ego  62: AtLine          12             stack[ 0]: <empty>
[20210409144645] 8265  TRACE  : (52)     reflection.ego  63: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8266  TRACE  : (52)     reflection.ego  64: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8267  TRACE  : (52)     reflection.ego  65: Print                          stack[ 1]: (PASS)  
[20210409144645] 8268  TRACE  : (52)     reflection.ego  66: Timer           1              stack[ 0]: <empty>
[20210409144645] 8269  TRACE  : (52)     reflection.ego  67: Print                          stack[ 1]: 0.350ms
[20210409144645] 8270  TRACE  : (52)     reflection.ego  68: Say             true           stack[ 0]: <empty>
TEST: packages: reflect of packages                     (PASS)  0.350ms
[20210409144645] 8271  TRACE  : (52)     reflection.ego  69: Stop                           stack[ 0]: <empty>
[20210409144645] 8272  TRACE  : *** Tracing tables.ego (53)  
[20210409144645] 8273  TRACE  : (53)         tables.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 8274  TRACE  : (53)         tables.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8275  TRACE  : (53)         tables.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8276  TRACE  : (53)         tables.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8277  TRACE  : (53)         tables.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8278  TRACE  : (53)         tables.ego   5: Push            Testing{ description: "packages: tables" } stack[ 0]: <empty>
[20210409144645] 8279  TRACE  : (53)         tables.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: tables" }
[20210409144645] 8280  TRACE  : (53)         tables.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8281  TRACE  : (53)         tables.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8282  TRACE  : (53)         tables.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8283  TRACE  : (53)         tables.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: tables" }
[20210409144645] 8284  TRACE  : (53)         tables.ego  11: Print                          stack[ 1]: packages: tables
[20210409144645] 8285  TRACE  : (53)         tables.ego  12: Push            "                                  " stack[ 0]: <empty>
[20210409144645] 8286  TRACE  : (53)         tables.ego  13: Print                          stack[ 1]:                                   
[20210409144645] 8287  TRACE  : (53)         tables.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8288  TRACE  : (53)         tables.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 8289  TRACE  : (53)         tables.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 8290  TRACE  : (53)         tables.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 8291  TRACE  : (53)         tables.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8292  TRACE  : (53)         tables.ego  19: Load            "tables"       stack[ 1]: M<let>
[20210409144645] 8293  TRACE  : (53)         tables.ego  20: SetThis                        stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 8294  TRACE  : (53)         tables.ego  21: Member          "New"          stack[ 2]: Pkg< New: runtime.TableNew() >, M<let>
[20210409144645] 8295  TRACE  : (53)         tables.ego  22: Push            "Name"         stack[ 2]: runtime.TableNew(), M<let>
[20210409144645] 8296  TRACE  : (53)         tables.ego  23: Push            "Age"          stack[ 3]: Name, runtime.TableNew(), M<let>
[20210409144645] 8297  TRACE  : (53)         tables.ego  24: Call            2              stack[ 4]: Age, Name, runtime.TableNew(), M<let>
[20210409144645] 8298  TRACE  : (53)         tables.ego  25: SymbolCreate    "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8299  TRACE  : (53)         tables.ego  26: Store           "t"            stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8300  TRACE  : (53)         tables.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8301  TRACE  : (53)         tables.ego  28: AtLine          6              stack[ 0]: <empty>
[20210409144645] 8302  TRACE  : (53)         tables.ego  29: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 8303  TRACE  : (53)         tables.ego  30: Load            "t"            stack[ 1]: M<call>
[20210409144645] 8304  TRACE  : (53)         tables.ego  31: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8305  TRACE  : (53)         tables.ego  32: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8306  TRACE  : (53)         tables.ego  33: Push            "Tom"          stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 8307  TRACE  : (53)         tables.ego  34: Push            51             stack[ 3]: Tom, runtime.TableAddRow(), M<call>
[20210409144645] 8308  TRACE  : (53)         tables.ego  35: Call            2              stack[ 4]: 51, Tom, runtime.TableAddRow(), M<call>
[20210409144645] 8309  TRACE  : (53)         tables.ego  36: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 8310  TRACE  : (53)         tables.ego  37: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8311  TRACE  : (53)         tables.ego  38: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 8312  TRACE  : (53)         tables.ego  39: Load            "t"            stack[ 1]: M<call>
[20210409144645] 8313  TRACE  : (53)         tables.ego  40: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8314  TRACE  : (53)         tables.ego  41: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8315  TRACE  : (53)         tables.ego  42: Push            "Mary"         stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 8316  TRACE  : (53)         tables.ego  43: Push            48             stack[ 3]: Mary, runtime.TableAddRow(), M<call>
[20210409144645] 8317  TRACE  : (53)         tables.ego  44: Call            2              stack[ 4]: 48, Mary, runtime.TableAddRow(), M<call>
[20210409144645] 8318  TRACE  : (53)         tables.ego  45: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 8319  TRACE  : (53)         tables.ego  46: AtLine          9              stack[ 0]: <empty>
[20210409144645] 8320  TRACE  : (53)         tables.ego  47: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 8321  TRACE  : (53)         tables.ego  48: Load            "t"            stack[ 1]: M<call>
[20210409144645] 8322  TRACE  : (53)         tables.ego  49: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8323  TRACE  : (53)         tables.ego  50: Member          "AddRow"       stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8324  TRACE  : (53)         tables.ego  51: Push            "Sarah"        stack[ 2]: runtime.TableAddRow(), M<call>
[20210409144645] 8325  TRACE  : (53)         tables.ego  52: Push            "Name"         stack[ 3]: Sarah, runtime.TableAddRow(), M<call>
[20210409144645] 8326  TRACE  : (53)         tables.ego  53: Push            22             stack[ 4]: Name, Sarah, runtime.TableAddRow(), M<call>
[20210409144645] 8327  TRACE  : (53)         tables.ego  54: Push            "Age"          stack[ 5]: 22, Name, Sarah, runtime.TableAddRow(), M<call>
[20210409144645] 8328  TRACE  : (53)         tables.ego  55: Struct          2              stack[ 6]: Age, 22, Name, Sarah, runtime.TableAddRow(), M<cal...
[20210409144645] 8329  TRACE  : (53)         tables.ego  56: Call            1              stack[ 3]: { Age: 22, Name: "Sarah" }, runtime.TableAddRow(),...
[20210409144645] 8330  TRACE  : (53)         tables.ego  57: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 8331  TRACE  : (53)         tables.ego  58: AtLine          11             stack[ 0]: <empty>
[20210409144645] 8332  TRACE  : (53)         tables.ego  59: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 8333  TRACE  : (53)         tables.ego  60: Load            "t"            stack[ 1]: M<call>
[20210409144645] 8334  TRACE  : (53)         tables.ego  61: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8335  TRACE  : (53)         tables.ego  62: Member          "Sort"         stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8336  TRACE  : (53)         tables.ego  63: Push            "Name"         stack[ 2]: runtime.TableSort(), M<call>
[20210409144645] 8337  TRACE  : (53)         tables.ego  64: Call            1              stack[ 3]: Name, runtime.TableSort(), M<call>
[20210409144645] 8338  TRACE  : (53)         tables.ego  65: DropToMarker    M<call>        stack[ 2]: <nil>, M<call>
[20210409144645] 8339  TRACE  : (53)         tables.ego  66: AtLine          13             stack[ 0]: <empty>
[20210409144645] 8340  TRACE  : (53)         tables.ego  67: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8341  TRACE  : (53)         tables.ego  68: Load            "t"            stack[ 1]: M<let>
[20210409144645] 8342  TRACE  : (53)         tables.ego  69: SetThis                        stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8343  TRACE  : (53)         tables.ego  70: Member          "String"       stack[ 2]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8344  TRACE  : (53)         tables.ego  71: Call            0              stack[ 2]: runtime.TableString(), M<let>
[20210409144645] 8345  TRACE  : (53)         tables.ego  72: SymbolCreate    "got"          stack[ 2]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8346  TRACE  : (53)         tables.ego  73: Store           "got"          stack[ 2]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8347  TRACE  : (53)         tables.ego  74: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8348  TRACE  : (53)         tables.ego  75: AtLine          16             stack[ 0]: <empty>
[20210409144645] 8349  TRACE  : (53)         tables.ego  76: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8350  TRACE  : (53)         tables.ego  77: Push            "Name     Age    \n=====    ===    \nMary     48     \nSarah    22     \nTom      51     \n" stack[ 1]: M<let>
[20210409144645] 8351  TRACE  : (53)         tables.ego  78: SymbolCreate    "expect"       stack[ 2]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8352  TRACE  : (53)         tables.ego  79: Store           "expect"       stack[ 2]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8353  TRACE  : (53)         tables.ego  80: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8354  TRACE  : (53)         tables.ego  81: AtLine          23             stack[ 0]: <empty>
[20210409144645] 8355  TRACE  : (53)         tables.ego  82: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8356  TRACE  : (53)         tables.ego  83: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8357  TRACE  : (53)         tables.ego  84: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8358  TRACE  : (53)         tables.ego  85: Member          "assert"       stack[ 2]: Testing{ description: "packages: tables" }, M<asse...
[20210409144645] 8359  TRACE  : (53)         tables.ego  86: Load            "got"          stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8360  TRACE  : (53)         tables.ego  87: Load            "expect"       stack[ 3]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8361  TRACE  : (53)         tables.ego  88: Equal                          stack[ 4]: Name     Age    \n=====    ===    \nMary     48   ...
[20210409144645] 8362  TRACE  : (53)         tables.ego  89: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8363  TRACE  : (53)         tables.ego  90: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8364  TRACE  : (53)         tables.ego  91: AtLine          24             stack[ 0]: <empty>
[20210409144645] 8365  TRACE  : (53)         tables.ego  92: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8366  TRACE  : (53)         tables.ego  93: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8367  TRACE  : (53)         tables.ego  94: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8368  TRACE  : (53)         tables.ego  95: Member          "assert"       stack[ 2]: Testing{ description: "packages: tables" }, M<asse...
[20210409144645] 8369  TRACE  : (53)         tables.ego  96: Load            "t"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8370  TRACE  : (53)         tables.ego  97: Member          "headings"     stack[ 3]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8371  TRACE  : (53)         tables.ego  98: Push            0              stack[ 3]: ["Name", "Age"], compiler.TestAssert(), M<assert>
[20210409144645] 8372  TRACE  : (53)         tables.ego  99: LoadIndex                      stack[ 4]: 0, ["Name", "Age"], compiler.TestAssert(), M<asser...
[20210409144645] 8373  TRACE  : (53)         tables.ego 100: Push            "Name"         stack[ 3]: Name, compiler.TestAssert(), M<assert>
[20210409144645] 8374  TRACE  : (53)         tables.ego 101: Equal                          stack[ 4]: Name, Name, compiler.TestAssert(), M<assert>
[20210409144645] 8375  TRACE  : (53)         tables.ego 102: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8376  TRACE  : (53)         tables.ego 103: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8377  TRACE  : (53)         tables.ego 104: AtLine          25             stack[ 0]: <empty>
[20210409144645] 8378  TRACE  : (53)         tables.ego 105: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8379  TRACE  : (53)         tables.ego 106: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8380  TRACE  : (53)         tables.ego 107: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8381  TRACE  : (53)         tables.ego 108: Member          "assert"       stack[ 2]: Testing{ description: "packages: tables" }, M<asse...
[20210409144645] 8382  TRACE  : (53)         tables.ego 109: Load            "t"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8383  TRACE  : (53)         tables.ego 110: Member          "headings"     stack[ 3]: tables.Table{ headings: ["Name", "Age"], table: pt...
[20210409144645] 8384  TRACE  : (53)         tables.ego 111: Push            1              stack[ 3]: ["Name", "Age"], compiler.TestAssert(), M<assert>
[20210409144645] 8385  TRACE  : (53)         tables.ego 112: LoadIndex                      stack[ 4]: 1, ["Name", "Age"], compiler.TestAssert(), M<asser...
[20210409144645] 8386  TRACE  : (53)         tables.ego 113: Push            "Age"          stack[ 3]: Age, compiler.TestAssert(), M<assert>
[20210409144645] 8387  TRACE  : (53)         tables.ego 114: Equal                          stack[ 4]: Age, Age, compiler.TestAssert(), M<assert>
[20210409144645] 8388  TRACE  : (53)         tables.ego 115: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8389  TRACE  : (53)         tables.ego 116: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8390  TRACE  : (53)         tables.ego 117: PopScope                       stack[ 0]: <empty>
[20210409144645] 8391  TRACE  : (53)         tables.ego 118: AtLine          29             stack[ 0]: <empty>
[20210409144645] 8392  TRACE  : (53)         tables.ego 119: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8393  TRACE  : (53)         tables.ego 120: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8394  TRACE  : (53)         tables.ego 121: Print                          stack[ 1]: (PASS)  
[20210409144645] 8395  TRACE  : (53)         tables.ego 122: Timer           1              stack[ 0]: <empty>
[20210409144645] 8396  TRACE  : (53)         tables.ego 123: Print                          stack[ 1]: 0.680ms
[20210409144645] 8397  TRACE  : (53)         tables.ego 124: Say             true           stack[ 0]: <empty>
TEST: packages: tables                                  (PASS)  0.680ms
[20210409144645] 8398  TRACE  : (53)         tables.ego 125: Stop                           stack[ 0]: <empty>
[20210409144645] 8399  TRACE  : *** Tracing time.ego (54)  
[20210409144645] 8400  TRACE  : (54)           time.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 8401  TRACE  : (54)           time.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8402  TRACE  : (54)           time.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8403  TRACE  : (54)           time.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8404  TRACE  : (54)           time.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8405  TRACE  : (54)           time.ego   5: Push            Testing{ description: "packages: time.Time object type" } stack[ 0]: <empty>
[20210409144645] 8406  TRACE  : (54)           time.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: time.Time object ...
[20210409144645] 8407  TRACE  : (54)           time.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8408  TRACE  : (54)           time.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8409  TRACE  : (54)           time.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8410  TRACE  : (54)           time.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: time.Time object ...
[20210409144645] 8411  TRACE  : (54)           time.ego  11: Print                          stack[ 1]: packages: time.Time object type
[20210409144645] 8412  TRACE  : (54)           time.ego  12: Push            "                   " stack[ 0]: <empty>
[20210409144645] 8413  TRACE  : (54)           time.ego  13: Print                          stack[ 1]:                    
[20210409144645] 8414  TRACE  : (54)           time.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8415  TRACE  : (54)           time.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 8416  TRACE  : (54)           time.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 8417  TRACE  : (54)           time.ego  17: AtLine          6              stack[ 0]: <empty>
[20210409144645] 8418  TRACE  : (54)           time.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8419  TRACE  : (54)           time.ego  19: Load            "time"         stack[ 1]: M<let>
[20210409144645] 8420  TRACE  : (54)           time.ego  20: SetThis                        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 8421  TRACE  : (54)           time.ego  21: Member          "Parse"        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 8422  TRACE  : (54)           time.ego  22: Push            "Dec 1 1960"   stack[ 2]: functions.TimeParse(), M<let>
[20210409144645] 8423  TRACE  : (54)           time.ego  23: Push            "Jan 2 2006"   stack[ 3]: Dec 1 1960, functions.TimeParse(), M<let>
[20210409144645] 8424  TRACE  : (54)           time.ego  24: Call            2              stack[ 4]: Jan 2 2006, Dec 1 1960, functions.TimeParse(), M<l...
[20210409144645] 8425  TRACE  : (54)           time.ego  25: SymbolCreate    "t1"           stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 8426  TRACE  : (54)           time.ego  26: Store           "t1"           stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 8427  TRACE  : (54)           time.ego  27: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 8428  TRACE  : (54)           time.ego  28: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8429  TRACE  : (54)           time.ego  29: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8430  TRACE  : (54)           time.ego  30: Load            "time"         stack[ 1]: M<let>
[20210409144645] 8431  TRACE  : (54)           time.ego  31: SetThis                        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 8432  TRACE  : (54)           time.ego  32: Member          "Parse"        stack[ 2]: Pkg< Now: functions.TimeNow(), Parse: functions.Ti...
[20210409144645] 8433  TRACE  : (54)           time.ego  33: Push            "Dec 2 1960"   stack[ 2]: functions.TimeParse(), M<let>
[20210409144645] 8434  TRACE  : (54)           time.ego  34: Push            "Jan 2 2006"   stack[ 3]: Dec 2 1960, functions.TimeParse(), M<let>
[20210409144645] 8435  TRACE  : (54)           time.ego  35: Call            2              stack[ 4]: Jan 2 2006, Dec 2 1960, functions.TimeParse(), M<l...
[20210409144645] 8436  TRACE  : (54)           time.ego  36: SymbolCreate    "t2"           stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 8437  TRACE  : (54)           time.ego  37: Store           "t2"           stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, <nil>, ...
[20210409144645] 8438  TRACE  : (54)           time.ego  38: DropToMarker    M<let>         stack[ 3]: <nil>, M<results>, M<let>
[20210409144645] 8439  TRACE  : (54)           time.ego  39: AtLine          8              stack[ 0]: <empty>
[20210409144645] 8440  TRACE  : (54)           time.ego  40: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8441  TRACE  : (54)           time.ego  41: Load            "t2"           stack[ 1]: M<let>
[20210409144645] 8442  TRACE  : (54)           time.ego  42: SetThis                        stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 8443  TRACE  : (54)           time.ego  43: Member          "Sub"          stack[ 2]: time.Time{ time: ptr <*time.Time Value> }, M<let>
[20210409144645] 8444  TRACE  : (54)           time.ego  44: Load            "t1"           stack[ 2]: functions.TimeSub(), M<let>
[20210409144645] 8445  TRACE  : (54)           time.ego  45: Call            1              stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, functio...
[20210409144645] 8446  TRACE  : (54)           time.ego  46: SymbolCreate    "e"            stack[ 2]: 24h0m0s, M<let>
[20210409144645] 8447  TRACE  : (54)           time.ego  47: Store           "e"            stack[ 2]: 24h0m0s, M<let>
[20210409144645] 8448  TRACE  : (54)           time.ego  48: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8449  TRACE  : (54)           time.ego  49: AtLine          10             stack[ 0]: <empty>
[20210409144645] 8450  TRACE  : (54)           time.ego  50: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8451  TRACE  : (54)           time.ego  51: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8452  TRACE  : (54)           time.ego  52: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8453  TRACE  : (54)           time.ego  53: Member          "assert"       stack[ 2]: Testing{ description: "packages: time.Time object ...
[20210409144645] 8454  TRACE  : (54)           time.ego  54: Load            "t1"           stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8455  TRACE  : (54)           time.ego  55: SetThis                        stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 8456  TRACE  : (54)           time.ego  56: Member          "String"       stack[ 3]: time.Time{ time: ptr <*time.Time Value> }, compile...
[20210409144645] 8457  TRACE  : (54)           time.ego  57: Call            0              stack[ 3]: functions.TimeString(), compiler.TestAssert(), M<a...
[20210409144645] 8458  TRACE  : (54)           time.ego  58: Push            "Thu Dec 1 00:00:00 UTC 1960" stack[ 3]: Thu Dec 1 00:00:00 UTC 1960, compiler.TestAssert()...
[20210409144645] 8459  TRACE  : (54)           time.ego  59: Equal                          stack[ 4]: Thu Dec 1 00:00:00 UTC 1960, Thu Dec 1 00:00:00 UT...
[20210409144645] 8460  TRACE  : (54)           time.ego  60: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8461  TRACE  : (54)           time.ego  61: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8462  TRACE  : (54)           time.ego  62: AtLine          11             stack[ 0]: <empty>
[20210409144645] 8463  TRACE  : (54)           time.ego  63: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8464  TRACE  : (54)           time.ego  64: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8465  TRACE  : (54)           time.ego  65: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8466  TRACE  : (54)           time.ego  66: Member          "assert"       stack[ 2]: Testing{ description: "packages: time.Time object ...
[20210409144645] 8467  TRACE  : (54)           time.ego  67: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8468  TRACE  : (54)           time.ego  68: Push            "24h0m0s"      stack[ 3]: 24h0m0s, compiler.TestAssert(), M<assert>
[20210409144645] 8469  TRACE  : (54)           time.ego  69: Equal                          stack[ 4]: 24h0m0s, 24h0m0s, compiler.TestAssert(), M<assert>
[20210409144645] 8470  TRACE  : (54)           time.ego  70: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8471  TRACE  : (54)           time.ego  71: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8472  TRACE  : (54)           time.ego  72: AtLine          12             stack[ 0]: <empty>
[20210409144645] 8473  TRACE  : (54)           time.ego  73: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8474  TRACE  : (54)           time.ego  74: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8475  TRACE  : (54)           time.ego  75: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8476  TRACE  : (54)           time.ego  76: Member          "assert"       stack[ 2]: Testing{ description: "packages: time.Time object ...
[20210409144645] 8477  TRACE  : (54)           time.ego  77: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8478  TRACE  : (54)           time.ego  78: Load            "t1"           stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 8479  TRACE  : (54)           time.ego  79: Call            1              stack[ 4]: time.Time{ time: ptr <*time.Time Value> }, functio...
[20210409144645] 8480  TRACE  : (54)           time.ego  80: Push            "time.Time"    stack[ 3]: time.Time, compiler.TestAssert(), M<assert>
[20210409144645] 8481  TRACE  : (54)           time.ego  81: Equal                          stack[ 4]: time.Time, time.Time, compiler.TestAssert(), M<ass...
[20210409144645] 8482  TRACE  : (54)           time.ego  82: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8483  TRACE  : (54)           time.ego  83: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8484  TRACE  : (54)           time.ego  84: PopScope                       stack[ 0]: <empty>
[20210409144645] 8485  TRACE  : (54)           time.ego  85: AtLine          15             stack[ 0]: <empty>
[20210409144645] 8486  TRACE  : (54)           time.ego  86: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8487  TRACE  : (54)           time.ego  87: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8488  TRACE  : (54)           time.ego  88: Print                          stack[ 1]: (PASS)  
[20210409144645] 8489  TRACE  : (54)           time.ego  89: Timer           1              stack[ 0]: <empty>
[20210409144645] 8490  TRACE  : (54)           time.ego  90: Print                          stack[ 1]: 0.503ms
[20210409144645] 8491  TRACE  : (54)           time.ego  91: Say             true           stack[ 0]: <empty>
TEST: packages: time.Time object type                   (PASS)  0.503ms
[20210409144645] 8492  TRACE  : (54)           time.ego  92: Stop                           stack[ 0]: <empty>
[20210409144645] 8493  TRACE  : *** Tracing import tests/packages/employee (55)  
[20210409144645] 8494  TRACE  : (55) import tests/packages/employee   0: AtLine          5              stack[ 0]: <empty>
[20210409144645] 8495  TRACE  : (55) import tests/packages/employee   1: PushPackage     "employee"     stack[ 0]: <empty>
[20210409144645] 8496  TRACE  : (55) import tests/packages/employee   2: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8497  TRACE  : (55) import tests/packages/employee   3: Push            100            stack[ 0]: <empty>
[20210409144645] 8498  TRACE  : (55) import tests/packages/employee   4: Constant        "ManagerID"    stack[ 1]: 100
[20210409144645] 8499  TRACE  : (55) import tests/packages/employee   5: AtLine          9              stack[ 0]: <empty>
[20210409144645] 8500  TRACE  : (55) import tests/packages/employee   6: Push            T(Employee struct{id int, name string}) stack[ 0]: <empty>
[20210409144645] 8501  TRACE  : (55) import tests/packages/employee   7: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string})
[20210409144645] 8502  TRACE  : (55) import tests/packages/employee   8: Push            T(Employee struct{id int, name string},SetName()) stack[ 0]: <empty>
[20210409144645] 8503  TRACE  : (55) import tests/packages/employee   9: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{id int, name string},SetName())
[20210409144645] 8504  TRACE  : (55) import tests/packages/employee  10: PopPackage      "employee"     stack[ 0]: <empty>
[20210409144645] 8505  TRACE  : (55) import tests/packages/employee  11: Stop                           stack[ 0]: <empty>
[20210409144645] 8506  TRACE  : *** Tracing types.ego (56)  
[20210409144645] 8507  TRACE  : (56)          types.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 8508  TRACE  : (56)          types.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8509  TRACE  : (56)          types.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8510  TRACE  : (56)          types.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8511  TRACE  : (56)          types.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8512  TRACE  : (56)          types.ego   5: Push            Testing{ description: "packages: types" } stack[ 0]: <empty>
[20210409144645] 8513  TRACE  : (56)          types.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "packages: types" }
[20210409144645] 8514  TRACE  : (56)          types.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8515  TRACE  : (56)          types.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8516  TRACE  : (56)          types.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8517  TRACE  : (56)          types.ego  10: Member          "description"  stack[ 1]: Testing{ description: "packages: types" }
[20210409144645] 8518  TRACE  : (56)          types.ego  11: Print                          stack[ 1]: packages: types
[20210409144645] 8519  TRACE  : (56)          types.ego  12: Push            "                                   " stack[ 0]: <empty>
[20210409144645] 8520  TRACE  : (56)          types.ego  13: Print                          stack[ 1]:                                    
[20210409144645] 8521  TRACE  : (56)          types.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8522  TRACE  : (56)          types.ego  15: AtLine          5              stack[ 0]: <empty>
[20210409144645] 8523  TRACE  : (56)          types.ego  16: AtLine          6              stack[ 0]: <empty>
[20210409144645] 8524  TRACE  : (56)          types.ego  17: PushScope                      stack[ 0]: <empty>
[20210409144645] 8525  TRACE  : (56)          types.ego  18: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8526  TRACE  : (56)          types.ego  19: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8527  TRACE  : (56)          types.ego  20: Load            "employee"     stack[ 1]: M<let>
[20210409144645] 8528  TRACE  : (56)          types.ego  21: Member          "Employee"     stack[ 2]: Pkg< Employee: T(Employee struct{id int, name stri...
[20210409144645] 8529  TRACE  : (56)          types.ego  22: Push            "__type"       stack[ 2]: T(Employee struct{id int, name string},SetName()),...
[20210409144645] 8530  TRACE  : (56)          types.ego  23: Push            155            stack[ 3]: __type, T(Employee struct{id int, name string},Set...
[20210409144645] 8531  TRACE  : (56)          types.ego  24: Push            "id"           stack[ 4]: 155, __type, T(Employee struct{id int, name string...
[20210409144645] 8532  TRACE  : (56)          types.ego  25: Struct          2              stack[ 5]: id, 155, __type, T(Employee struct{id int, name st...
[20210409144645] 8533  TRACE  : (56)          types.ego  26: SymbolCreate    "e"            stack[ 2]: Employee{ id: 155, name: "" }, M<let>
[20210409144645] 8534  TRACE  : (56)          types.ego  27: Store           "e"            stack[ 2]: Employee{ id: 155, name: "" }, M<let>
[20210409144645] 8535  TRACE  : (56)          types.ego  28: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8536  TRACE  : (56)          types.ego  29: AtLine          8              stack[ 0]: <empty>
[20210409144645] 8537  TRACE  : (56)          types.ego  30: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8538  TRACE  : (56)          types.ego  31: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8539  TRACE  : (56)          types.ego  32: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8540  TRACE  : (56)          types.ego  33: Member          "assert"       stack[ 2]: Testing{ description: "packages: types" }, M<asser...
[20210409144645] 8541  TRACE  : (56)          types.ego  34: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8542  TRACE  : (56)          types.ego  35: Member          "id"           stack[ 3]: Employee{ id: 155, name: "" }, compiler.TestAssert...
[20210409144645] 8543  TRACE  : (56)          types.ego  36: Push            155            stack[ 3]: 155, compiler.TestAssert(), M<assert>
[20210409144645] 8544  TRACE  : (56)          types.ego  37: Equal                          stack[ 4]: 155, 155, compiler.TestAssert(), M<assert>
[20210409144645] 8545  TRACE  : (56)          types.ego  38: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8546  TRACE  : (56)          types.ego  39: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8547  TRACE  : (56)          types.ego  40: AtLine          9              stack[ 0]: <empty>
[20210409144645] 8548  TRACE  : (56)          types.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8549  TRACE  : (56)          types.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8550  TRACE  : (56)          types.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8551  TRACE  : (56)          types.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "packages: types" }, M<asser...
[20210409144645] 8552  TRACE  : (56)          types.ego  45: Load            "e"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8553  TRACE  : (56)          types.ego  46: Member          "name"         stack[ 3]: Employee{ id: 155, name: "" }, compiler.TestAssert...
[20210409144645] 8554  TRACE  : (56)          types.ego  47: Push            ""             stack[ 3]: , compiler.TestAssert(), M<assert>
[20210409144645] 8555  TRACE  : (56)          types.ego  48: Equal                          stack[ 4]: , , compiler.TestAssert(), M<assert>
[20210409144645] 8556  TRACE  : (56)          types.ego  49: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8557  TRACE  : (56)          types.ego  50: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8558  TRACE  : (56)          types.ego  51: PopScope                       stack[ 0]: <empty>
[20210409144645] 8559  TRACE  : (56)          types.ego  52: AtLine          12             stack[ 0]: <empty>
[20210409144645] 8560  TRACE  : (56)          types.ego  53: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8561  TRACE  : (56)          types.ego  54: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8562  TRACE  : (56)          types.ego  55: Print                          stack[ 1]: (PASS)  
[20210409144645] 8563  TRACE  : (56)          types.ego  56: Timer           1              stack[ 0]: <empty>
[20210409144645] 8564  TRACE  : (56)          types.ego  57: Print                          stack[ 1]: 0.248ms
[20210409144645] 8565  TRACE  : (56)          types.ego  58: Say             true           stack[ 0]: <empty>
TEST: packages: types                                   (PASS)  0.248ms
[20210409144645] 8566  TRACE  : (56)          types.ego  59: Stop                           stack[ 0]: <empty>
[20210409144645] 8567  TRACE  : *** Tracing chained_receivers.ego (57)  
[20210409144645] 8568  TRACE  : (57) chained_receivers.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 8569  TRACE  : (57) chained_receivers.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8570  TRACE  : (57) chained_receivers.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8571  TRACE  : (57) chained_receivers.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8572  TRACE  : (57) chained_receivers.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8573  TRACE  : (57) chained_receivers.ego   5: Push            Testing{ description: "types: chained builtin receivers" } stack[ 0]: <empty>
[20210409144645] 8574  TRACE  : (57) chained_receivers.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8575  TRACE  : (57) chained_receivers.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8576  TRACE  : (57) chained_receivers.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8577  TRACE  : (57) chained_receivers.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8578  TRACE  : (57) chained_receivers.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8579  TRACE  : (57) chained_receivers.ego  11: Print                          stack[ 1]: types: chained builtin receivers
[20210409144645] 8580  TRACE  : (57) chained_receivers.ego  12: Push            "                  " stack[ 0]: <empty>
[20210409144645] 8581  TRACE  : (57) chained_receivers.ego  13: Print                          stack[ 1]:                   
[20210409144645] 8582  TRACE  : (57) chained_receivers.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8583  TRACE  : (57) chained_receivers.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 8584  TRACE  : (57) chained_receivers.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 8585  TRACE  : (57) chained_receivers.ego  17: AtLine          9              stack[ 0]: <empty>
[20210409144645] 8586  TRACE  : (57) chained_receivers.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8587  TRACE  : (57) chained_receivers.ego  19: Push            "http://localhost:8080" stack[ 1]: M<let>
[20210409144645] 8588  TRACE  : (57) chained_receivers.ego  20: SymbolCreate    "url"          stack[ 2]: http://localhost:8080, M<let>
[20210409144645] 8589  TRACE  : (57) chained_receivers.ego  21: Store           "url"          stack[ 2]: http://localhost:8080, M<let>
[20210409144645] 8590  TRACE  : (57) chained_receivers.ego  22: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8591  TRACE  : (57) chained_receivers.ego  23: AtLine          10             stack[ 0]: <empty>
[20210409144645] 8592  TRACE  : (57) chained_receivers.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8593  TRACE  : (57) chained_receivers.ego  25: Load            "rest"         stack[ 1]: M<let>
[20210409144645] 8594  TRACE  : (57) chained_receivers.ego  26: SetThis                        stack[ 2]: Pkg< New: runtime.RestNew(), Status: runtime.RestS...
[20210409144645] 8595  TRACE  : (57) chained_receivers.ego  27: Member          "New"          stack[ 2]: Pkg< New: runtime.RestNew(), Status: runtime.RestS...
[20210409144645] 8596  TRACE  : (57) chained_receivers.ego  28: Call            0              stack[ 2]: runtime.RestNew(), M<let>
[20210409144645] 8597  TRACE  : (57) chained_receivers.ego  29: SetThis                        stack[ 2]: rest.Client{ baseURL: "", client: ptr <*resty.Clie...
[20210409144645] 8598  TRACE  : (57) chained_receivers.ego  30: Member          "Media"        stack[ 2]: rest.Client{ baseURL: "", client: ptr <*resty.Clie...
[20210409144645] 8599  TRACE  : (57) chained_receivers.ego  31: Push            "text"         stack[ 2]: runtime.RestMedia(), M<let>
[20210409144645] 8600  TRACE  : (57) chained_receivers.ego  32: Call            1              stack[ 3]: text, runtime.RestMedia(), M<let>
[20210409144645] 8601  TRACE  : (57) chained_receivers.ego  33: SetThis                        stack[ 2]: rest.Client{ baseURL: "", client: ptr <*resty.Clie...
[20210409144645] 8602  TRACE  : (57) chained_receivers.ego  34: Member          "Base"         stack[ 2]: rest.Client{ baseURL: "", client: ptr <*resty.Clie...
[20210409144645] 8603  TRACE  : (57) chained_receivers.ego  35: Load            "url"          stack[ 2]: runtime.RestBase(), M<let>
[20210409144645] 8604  TRACE  : (57) chained_receivers.ego  36: Call            1              stack[ 3]: http://localhost:8080, runtime.RestBase(), M<let>
[20210409144645] 8605  TRACE  : (57) chained_receivers.ego  37: SymbolCreate    "r"            stack[ 2]: rest.Client{ baseURL: "http://localhost:8080", cli...
[20210409144645] 8606  TRACE  : (57) chained_receivers.ego  38: Store           "r"            stack[ 2]: rest.Client{ baseURL: "http://localhost:8080", cli...
[20210409144645] 8607  TRACE  : (57) chained_receivers.ego  39: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8608  TRACE  : (57) chained_receivers.ego  40: AtLine          11             stack[ 0]: <empty>
[20210409144645] 8609  TRACE  : (57) chained_receivers.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8610  TRACE  : (57) chained_receivers.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8611  TRACE  : (57) chained_receivers.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8612  TRACE  : (57) chained_receivers.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8613  TRACE  : (57) chained_receivers.ego  45: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8614  TRACE  : (57) chained_receivers.ego  46: SetThis                        stack[ 3]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8615  TRACE  : (57) chained_receivers.ego  47: Member          "Equal"        stack[ 3]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8616  TRACE  : (57) chained_receivers.ego  48: Load            "r"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8617  TRACE  : (57) chained_receivers.ego  49: Member          "baseURL"      stack[ 4]: rest.Client{ baseURL: "http://localhost:8080", cli...
[20210409144645] 8618  TRACE  : (57) chained_receivers.ego  50: Load            "url"          stack[ 4]: http://localhost:8080, compiler.TestEqual(), compi...
[20210409144645] 8619  TRACE  : (57) chained_receivers.ego  51: Call            2              stack[ 5]: http://localhost:8080, http://localhost:8080, comp...
[20210409144645] 8620  TRACE  : (57) chained_receivers.ego  52: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8621  TRACE  : (57) chained_receivers.ego  53: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8622  TRACE  : (57) chained_receivers.ego  54: AtLine          12             stack[ 0]: <empty>
[20210409144645] 8623  TRACE  : (57) chained_receivers.ego  55: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8624  TRACE  : (57) chained_receivers.ego  56: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8625  TRACE  : (57) chained_receivers.ego  57: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8626  TRACE  : (57) chained_receivers.ego  58: Member          "assert"       stack[ 2]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8627  TRACE  : (57) chained_receivers.ego  59: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8628  TRACE  : (57) chained_receivers.ego  60: SetThis                        stack[ 3]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8629  TRACE  : (57) chained_receivers.ego  61: Member          "Equal"        stack[ 3]: Testing{ description: "types: chained builtin rece...
[20210409144645] 8630  TRACE  : (57) chained_receivers.ego  62: Load            "r"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8631  TRACE  : (57) chained_receivers.ego  63: Member          "mediaType"    stack[ 4]: rest.Client{ baseURL: "http://localhost:8080", cli...
[20210409144645] 8632  TRACE  : (57) chained_receivers.ego  64: Push            "text"         stack[ 4]: text, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8633  TRACE  : (57) chained_receivers.ego  65: Call            2              stack[ 5]: text, text, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 8634  TRACE  : (57) chained_receivers.ego  66: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8635  TRACE  : (57) chained_receivers.ego  67: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8636  TRACE  : (57) chained_receivers.ego  68: PopScope                       stack[ 0]: <empty>
[20210409144645] 8637  TRACE  : (57) chained_receivers.ego  69: AtLine          14             stack[ 0]: <empty>
[20210409144645] 8638  TRACE  : (57) chained_receivers.ego  70: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8639  TRACE  : (57) chained_receivers.ego  71: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 8640  TRACE  : (57) chained_receivers.ego  72: Print                          stack[ 1]: (PASS)  
[20210409144645] 8641  TRACE  : (57) chained_receivers.ego  73: Timer           1              stack[ 0]: <empty>
[20210409144645] 8642  TRACE  : (57) chained_receivers.ego  74: Print                          stack[ 1]: 0.429ms
[20210409144645] 8643  TRACE  : (57) chained_receivers.ego  75: Say             true           stack[ 0]: <empty>
TEST: types: chained builtin receivers                  (PASS)  0.429ms
[20210409144645] 8644  TRACE  : (57) chained_receivers.ego  76: Stop                           stack[ 0]: <empty>
[20210409144645] 8645  TRACE  : *** Tracing gotypes.ego (58)  
[20210409144645] 8646  TRACE  : (58)        gotypes.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 8647  TRACE  : (58)        gotypes.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8648  TRACE  : (58)        gotypes.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 8649  TRACE  : (58)        gotypes.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8650  TRACE  : (58)        gotypes.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 8651  TRACE  : (58)        gotypes.ego   5: Push            Testing{ description: "types: Go-style arrays and maps" } stack[ 0]: <empty>
[20210409144645] 8652  TRACE  : (58)        gotypes.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8653  TRACE  : (58)        gotypes.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 8654  TRACE  : (58)        gotypes.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 8655  TRACE  : (58)        gotypes.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 8656  TRACE  : (58)        gotypes.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8657  TRACE  : (58)        gotypes.ego  11: Print                          stack[ 1]: types: Go-style arrays and maps
[20210409144645] 8658  TRACE  : (58)        gotypes.ego  12: Push            "                   " stack[ 0]: <empty>
[20210409144645] 8659  TRACE  : (58)        gotypes.ego  13: Print                          stack[ 1]:                    
[20210409144645] 8660  TRACE  : (58)        gotypes.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 8661  TRACE  : (58)        gotypes.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 8662  TRACE  : (58)        gotypes.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 8663  TRACE  : (58)        gotypes.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 8664  TRACE  : (58)        gotypes.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8665  TRACE  : (58)        gotypes.ego  19: Push            1              stack[ 1]: M<let>
[20210409144645] 8666  TRACE  : (58)        gotypes.ego  20: Push            2              stack[ 2]: 1, M<let>
[20210409144645] 8667  TRACE  : (58)        gotypes.ego  21: Push            3              stack[ 3]: 2, 1, M<let>
[20210409144645] 8668  TRACE  : (58)        gotypes.ego  22: Push            4              stack[ 4]: 3, 2, 1, M<let>
[20210409144645] 8669  TRACE  : (58)        gotypes.ego  23: Push            T(int)         stack[ 5]: 4, 3, 2, 1, M<let>
[20210409144645] 8670  TRACE  : (58)        gotypes.ego  24: MakeArray       4              stack[ 6]: T(int), 4, 3, 2, 1, M<let>
[20210409144645] 8671  TRACE  : (58)        gotypes.ego  25: SymbolCreate    "a"            stack[ 2]: [1, 2, 3, 4], M<let>
[20210409144645] 8672  TRACE  : (58)        gotypes.ego  26: Store           "a"            stack[ 2]: [1, 2, 3, 4], M<let>
[20210409144645] 8673  TRACE  : (58)        gotypes.ego  27: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8674  TRACE  : (58)        gotypes.ego  28: AtLine          6              stack[ 0]: <empty>
[20210409144645] 8675  TRACE  : (58)        gotypes.ego  29: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8676  TRACE  : (58)        gotypes.ego  30: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8677  TRACE  : (58)        gotypes.ego  31: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8678  TRACE  : (58)        gotypes.ego  32: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8679  TRACE  : (58)        gotypes.ego  33: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8680  TRACE  : (58)        gotypes.ego  34: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8681  TRACE  : (58)        gotypes.ego  35: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8682  TRACE  : (58)        gotypes.ego  36: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8683  TRACE  : (58)        gotypes.ego  37: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8684  TRACE  : (58)        gotypes.ego  38: Call            1              stack[ 5]: [1, 2, 3, 4], functions.Length(), compiler.TestEqu...
[20210409144645] 8685  TRACE  : (58)        gotypes.ego  39: Push            4              stack[ 4]: 4, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8686  TRACE  : (58)        gotypes.ego  40: Call            2              stack[ 5]: 4, 4, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8687  TRACE  : (58)        gotypes.ego  41: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8688  TRACE  : (58)        gotypes.ego  42: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8689  TRACE  : (58)        gotypes.ego  43: AtLine          7              stack[ 0]: <empty>
[20210409144645] 8690  TRACE  : (58)        gotypes.ego  44: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8691  TRACE  : (58)        gotypes.ego  45: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8692  TRACE  : (58)        gotypes.ego  46: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8693  TRACE  : (58)        gotypes.ego  47: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8694  TRACE  : (58)        gotypes.ego  48: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8695  TRACE  : (58)        gotypes.ego  49: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8696  TRACE  : (58)        gotypes.ego  50: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8697  TRACE  : (58)        gotypes.ego  51: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8698  TRACE  : (58)        gotypes.ego  52: Push            1              stack[ 4]: [1, 2, 3, 4], compiler.TestEqual(), compiler.TestA...
[20210409144645] 8699  TRACE  : (58)        gotypes.ego  53: Push            2              stack[ 5]: 1, [1, 2, 3, 4], compiler.TestEqual(), compiler.Te...
[20210409144645] 8700  TRACE  : (58)        gotypes.ego  54: Push            3              stack[ 6]: 2, 1, [1, 2, 3, 4], compiler.TestEqual(), compiler...
[20210409144645] 8701  TRACE  : (58)        gotypes.ego  55: Push            4              stack[ 7]: 3, 2, 1, [1, 2, 3, 4], compiler.TestEqual(), compi...
[20210409144645] 8702  TRACE  : (58)        gotypes.ego  56: Array           4              stack[ 8]: 4, 3, 2, 1, [1, 2, 3, 4], compiler.TestEqual(), co...
[20210409144645] 8703  TRACE  : (58)        gotypes.ego  57: Call            2              stack[ 5]: [1, 2, 3, 4], [1, 2, 3, 4], compiler.TestEqual(), ...
[20210409144645] 8704  TRACE  : (58)        gotypes.ego  58: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8705  TRACE  : (58)        gotypes.ego  59: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8706  TRACE  : (58)        gotypes.ego  60: AtLine          8              stack[ 0]: <empty>
[20210409144645] 8707  TRACE  : (58)        gotypes.ego  61: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8708  TRACE  : (58)        gotypes.ego  62: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8709  TRACE  : (58)        gotypes.ego  63: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8710  TRACE  : (58)        gotypes.ego  64: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8711  TRACE  : (58)        gotypes.ego  65: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8712  TRACE  : (58)        gotypes.ego  66: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8713  TRACE  : (58)        gotypes.ego  67: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8714  TRACE  : (58)        gotypes.ego  68: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8715  TRACE  : (58)        gotypes.ego  69: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 8716  TRACE  : (58)        gotypes.ego  70: Call            1              stack[ 5]: [1, 2, 3, 4], functions.Reflect(), compiler.TestEq...
[20210409144645] 8717  TRACE  : (58)        gotypes.ego  71: Member          "type"         stack[ 4]: { basetype: "[]interface{}", size: 4, type: "[]int...
[20210409144645] 8718  TRACE  : (58)        gotypes.ego  72: Push            "[]int"        stack[ 4]: []int, compiler.TestEqual(), compiler.TestAssert()...
[20210409144645] 8719  TRACE  : (58)        gotypes.ego  73: Call            2              stack[ 5]: []int, []int, compiler.TestEqual(), compiler.TestA...
[20210409144645] 8720  TRACE  : (58)        gotypes.ego  74: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8721  TRACE  : (58)        gotypes.ego  75: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8722  TRACE  : (58)        gotypes.ego  76: PopScope                       stack[ 0]: <empty>
[20210409144645] 8723  TRACE  : (58)        gotypes.ego  77: AtLine          11             stack[ 0]: <empty>
[20210409144645] 8724  TRACE  : (58)        gotypes.ego  78: PushScope                      stack[ 0]: <empty>
[20210409144645] 8725  TRACE  : (58)        gotypes.ego  79: AtLine          13             stack[ 0]: <empty>
[20210409144645] 8726  TRACE  : (58)        gotypes.ego  80: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8727  TRACE  : (58)        gotypes.ego  81: Push            "true"         stack[ 1]: M<let>
[20210409144645] 8728  TRACE  : (58)        gotypes.ego  82: Push            "2.1"          stack[ 2]: true, M<let>
[20210409144645] 8729  TRACE  : (58)        gotypes.ego  83: Push            "3"            stack[ 3]: 2.1, true, M<let>
[20210409144645] 8730  TRACE  : (58)        gotypes.ego  84: Push            "4"            stack[ 4]: 3, 2.1, true, M<let>
[20210409144645] 8731  TRACE  : (58)        gotypes.ego  85: Push            T(string)      stack[ 5]: 4, 3, 2.1, true, M<let>
[20210409144645] 8732  TRACE  : (58)        gotypes.ego  86: MakeArray       4              stack[ 6]: T(string), 4, 3, 2.1, true, M<let>
[20210409144645] 8733  TRACE  : (58)        gotypes.ego  87: SymbolCreate    "a"            stack[ 2]: ["true", "2.1", "3", "4"], M<let>
[20210409144645] 8734  TRACE  : (58)        gotypes.ego  88: Store           "a"            stack[ 2]: ["true", "2.1", "3", "4"], M<let>
[20210409144645] 8735  TRACE  : (58)        gotypes.ego  89: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8736  TRACE  : (58)        gotypes.ego  90: AtLine          14             stack[ 0]: <empty>
[20210409144645] 8737  TRACE  : (58)        gotypes.ego  91: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8738  TRACE  : (58)        gotypes.ego  92: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8739  TRACE  : (58)        gotypes.ego  93: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8740  TRACE  : (58)        gotypes.ego  94: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8741  TRACE  : (58)        gotypes.ego  95: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8742  TRACE  : (58)        gotypes.ego  96: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8743  TRACE  : (58)        gotypes.ego  97: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8744  TRACE  : (58)        gotypes.ego  98: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8745  TRACE  : (58)        gotypes.ego  99: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8746  TRACE  : (58)        gotypes.ego 100: Call            1              stack[ 5]: ["true", "2.1", "3", "4"], functions.Length(), com...
[20210409144645] 8747  TRACE  : (58)        gotypes.ego 101: Push            4              stack[ 4]: 4, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8748  TRACE  : (58)        gotypes.ego 102: Call            2              stack[ 5]: 4, 4, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8749  TRACE  : (58)        gotypes.ego 103: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8750  TRACE  : (58)        gotypes.ego 104: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8751  TRACE  : (58)        gotypes.ego 105: AtLine          15             stack[ 0]: <empty>
[20210409144645] 8752  TRACE  : (58)        gotypes.ego 106: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8753  TRACE  : (58)        gotypes.ego 107: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8754  TRACE  : (58)        gotypes.ego 108: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8755  TRACE  : (58)        gotypes.ego 109: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8756  TRACE  : (58)        gotypes.ego 110: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8757  TRACE  : (58)        gotypes.ego 111: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8758  TRACE  : (58)        gotypes.ego 112: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8759  TRACE  : (58)        gotypes.ego 113: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8760  TRACE  : (58)        gotypes.ego 114: Push            "true"         stack[ 4]: ["true", "2.1", "3", "4"], compiler.TestEqual(), c...
[20210409144645] 8761  TRACE  : (58)        gotypes.ego 115: Push            "2.1"          stack[ 5]: true, ["true", "2.1", "3", "4"], compiler.TestEqua...
[20210409144645] 8762  TRACE  : (58)        gotypes.ego 116: Push            "3"            stack[ 6]: 2.1, true, ["true", "2.1", "3", "4"], compiler.Tes...
[20210409144645] 8763  TRACE  : (58)        gotypes.ego 117: Push            "4"            stack[ 7]: 3, 2.1, true, ["true", "2.1", "3", "4"], compiler....
[20210409144645] 8764  TRACE  : (58)        gotypes.ego 118: Array           4              stack[ 8]: 4, 3, 2.1, true, ["true", "2.1", "3", "4"], compil...
[20210409144645] 8765  TRACE  : (58)        gotypes.ego 119: Call            2              stack[ 5]: ["true", "2.1", "3", "4"], ["true", "2.1", "3", "4...
[20210409144645] 8766  TRACE  : (58)        gotypes.ego 120: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8767  TRACE  : (58)        gotypes.ego 121: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8768  TRACE  : (58)        gotypes.ego 122: AtLine          16             stack[ 0]: <empty>
[20210409144645] 8769  TRACE  : (58)        gotypes.ego 123: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8770  TRACE  : (58)        gotypes.ego 124: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8771  TRACE  : (58)        gotypes.ego 125: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8772  TRACE  : (58)        gotypes.ego 126: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8773  TRACE  : (58)        gotypes.ego 127: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8774  TRACE  : (58)        gotypes.ego 128: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8775  TRACE  : (58)        gotypes.ego 129: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8776  TRACE  : (58)        gotypes.ego 130: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8777  TRACE  : (58)        gotypes.ego 131: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 8778  TRACE  : (58)        gotypes.ego 132: Call            1              stack[ 5]: ["true", "2.1", "3", "4"], functions.Reflect(), co...
[20210409144645] 8779  TRACE  : (58)        gotypes.ego 133: Member          "type"         stack[ 4]: { basetype: "[]interface{}", size: 4, type: "[]str...
[20210409144645] 8780  TRACE  : (58)        gotypes.ego 134: Push            "[]string"     stack[ 4]: []string, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 8781  TRACE  : (58)        gotypes.ego 135: Call            2              stack[ 5]: []string, []string, compiler.TestEqual(), compiler...
[20210409144645] 8782  TRACE  : (58)        gotypes.ego 136: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8783  TRACE  : (58)        gotypes.ego 137: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8784  TRACE  : (58)        gotypes.ego 138: PopScope                       stack[ 0]: <empty>
[20210409144645] 8785  TRACE  : (58)        gotypes.ego 139: AtLine          21             stack[ 0]: <empty>
[20210409144645] 8786  TRACE  : (58)        gotypes.ego 140: PushScope                      stack[ 0]: <empty>
[20210409144645] 8787  TRACE  : (58)        gotypes.ego 141: AtLine          23             stack[ 0]: <empty>
[20210409144645] 8788  TRACE  : (58)        gotypes.ego 142: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8789  TRACE  : (58)        gotypes.ego 143: Push            true           stack[ 1]: M<let>
[20210409144645] 8790  TRACE  : (58)        gotypes.ego 144: Push            false          stack[ 2]: true, M<let>
[20210409144645] 8791  TRACE  : (58)        gotypes.ego 145: Push            false          stack[ 3]: false, true, M<let>
[20210409144645] 8792  TRACE  : (58)        gotypes.ego 146: Push            true           stack[ 4]: false, false, true, M<let>
[20210409144645] 8793  TRACE  : (58)        gotypes.ego 147: Push            T(bool)        stack[ 5]: true, false, false, true, M<let>
[20210409144645] 8794  TRACE  : (58)        gotypes.ego 148: MakeArray       4              stack[ 6]: T(bool), true, false, false, true, M<let>
[20210409144645] 8795  TRACE  : (58)        gotypes.ego 149: SymbolCreate    "a"            stack[ 2]: [true, false, false, true], M<let>
[20210409144645] 8796  TRACE  : (58)        gotypes.ego 150: Store           "a"            stack[ 2]: [true, false, false, true], M<let>
[20210409144645] 8797  TRACE  : (58)        gotypes.ego 151: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8798  TRACE  : (58)        gotypes.ego 152: AtLine          24             stack[ 0]: <empty>
[20210409144645] 8799  TRACE  : (58)        gotypes.ego 153: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8800  TRACE  : (58)        gotypes.ego 154: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8801  TRACE  : (58)        gotypes.ego 155: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8802  TRACE  : (58)        gotypes.ego 156: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8803  TRACE  : (58)        gotypes.ego 157: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8804  TRACE  : (58)        gotypes.ego 158: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8805  TRACE  : (58)        gotypes.ego 159: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8806  TRACE  : (58)        gotypes.ego 160: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8807  TRACE  : (58)        gotypes.ego 161: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8808  TRACE  : (58)        gotypes.ego 162: Call            1              stack[ 5]: [true, false, false, true], functions.Length(), co...
[20210409144645] 8809  TRACE  : (58)        gotypes.ego 163: Push            4              stack[ 4]: 4, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8810  TRACE  : (58)        gotypes.ego 164: Call            2              stack[ 5]: 4, 4, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8811  TRACE  : (58)        gotypes.ego 165: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8812  TRACE  : (58)        gotypes.ego 166: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8813  TRACE  : (58)        gotypes.ego 167: AtLine          25             stack[ 0]: <empty>
[20210409144645] 8814  TRACE  : (58)        gotypes.ego 168: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8815  TRACE  : (58)        gotypes.ego 169: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8816  TRACE  : (58)        gotypes.ego 170: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8817  TRACE  : (58)        gotypes.ego 171: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8818  TRACE  : (58)        gotypes.ego 172: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8819  TRACE  : (58)        gotypes.ego 173: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8820  TRACE  : (58)        gotypes.ego 174: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8821  TRACE  : (58)        gotypes.ego 175: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8822  TRACE  : (58)        gotypes.ego 176: Push            true           stack[ 4]: [true, false, false, true], compiler.TestEqual(), ...
[20210409144645] 8823  TRACE  : (58)        gotypes.ego 177: Push            false          stack[ 5]: true, [true, false, false, true], compiler.TestEqu...
[20210409144645] 8824  TRACE  : (58)        gotypes.ego 178: Push            false          stack[ 6]: false, true, [true, false, false, true], compiler....
[20210409144645] 8825  TRACE  : (58)        gotypes.ego 179: Push            true           stack[ 7]: false, false, true, [true, false, false, true], co...
[20210409144645] 8826  TRACE  : (58)        gotypes.ego 180: Array           4              stack[ 8]: true, false, false, true, [true, false, false, tru...
[20210409144645] 8827  TRACE  : (58)        gotypes.ego 181: Call            2              stack[ 5]: [true, false, false, true], [true, false, false, t...
[20210409144645] 8828  TRACE  : (58)        gotypes.ego 182: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8829  TRACE  : (58)        gotypes.ego 183: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8830  TRACE  : (58)        gotypes.ego 184: AtLine          26             stack[ 0]: <empty>
[20210409144645] 8831  TRACE  : (58)        gotypes.ego 185: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8832  TRACE  : (58)        gotypes.ego 186: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8833  TRACE  : (58)        gotypes.ego 187: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8834  TRACE  : (58)        gotypes.ego 188: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8835  TRACE  : (58)        gotypes.ego 189: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8836  TRACE  : (58)        gotypes.ego 190: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8837  TRACE  : (58)        gotypes.ego 191: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8838  TRACE  : (58)        gotypes.ego 192: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8839  TRACE  : (58)        gotypes.ego 193: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 8840  TRACE  : (58)        gotypes.ego 194: Call            1              stack[ 5]: [true, false, false, true], functions.Reflect(), c...
[20210409144645] 8841  TRACE  : (58)        gotypes.ego 195: Member          "type"         stack[ 4]: { basetype: "[]interface{}", size: 4, type: "[]boo...
[20210409144645] 8842  TRACE  : (58)        gotypes.ego 196: Push            "[]bool"       stack[ 4]: []bool, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 8843  TRACE  : (58)        gotypes.ego 197: Call            2              stack[ 5]: []bool, []bool, compiler.TestEqual(), compiler.Tes...
[20210409144645] 8844  TRACE  : (58)        gotypes.ego 198: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8845  TRACE  : (58)        gotypes.ego 199: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8846  TRACE  : (58)        gotypes.ego 200: PopScope                       stack[ 0]: <empty>
[20210409144645] 8847  TRACE  : (58)        gotypes.ego 201: AtLine          30             stack[ 0]: <empty>
[20210409144645] 8848  TRACE  : (58)        gotypes.ego 202: PushScope                      stack[ 0]: <empty>
[20210409144645] 8849  TRACE  : (58)        gotypes.ego 203: AtLine          32             stack[ 0]: <empty>
[20210409144645] 8850  TRACE  : (58)        gotypes.ego 204: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8851  TRACE  : (58)        gotypes.ego 205: Push            "mom"          stack[ 1]: M<let>
[20210409144645] 8852  TRACE  : (58)        gotypes.ego 206: Coerce          T(string)      stack[ 2]: mom, M<let>
[20210409144645] 8853  TRACE  : (58)        gotypes.ego 207: Push            "Sue"          stack[ 2]: mom, M<let>
[20210409144645] 8854  TRACE  : (58)        gotypes.ego 208: Push            "dad"          stack[ 3]: Sue, mom, M<let>
[20210409144645] 8855  TRACE  : (58)        gotypes.ego 209: Coerce          T(string)      stack[ 4]: dad, Sue, mom, M<let>
[20210409144645] 8856  TRACE  : (58)        gotypes.ego 210: Push            "Mike"         stack[ 4]: dad, Sue, mom, M<let>
[20210409144645] 8857  TRACE  : (58)        gotypes.ego 211: Push            T(string)      stack[ 5]: Mike, dad, Sue, mom, M<let>
[20210409144645] 8858  TRACE  : (58)        gotypes.ego 212: Push            T(string)      stack[ 6]: T(string), Mike, dad, Sue, mom, M<let>
[20210409144645] 8859  TRACE  : (58)        gotypes.ego 213: MakeMap         2              stack[ 7]: T(string), T(string), Mike, dad, Sue, mom, M<let>
[20210409144645] 8860  TRACE  : (58)        gotypes.ego 214: SymbolCreate    "a"            stack[ 2]: ["dad": "Mike", "mom": "Sue"], M<let>
[20210409144645] 8861  TRACE  : (58)        gotypes.ego 215: Store           "a"            stack[ 2]: ["dad": "Mike", "mom": "Sue"], M<let>
[20210409144645] 8862  TRACE  : (58)        gotypes.ego 216: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8863  TRACE  : (58)        gotypes.ego 217: AtLine          36             stack[ 0]: <empty>
[20210409144645] 8864  TRACE  : (58)        gotypes.ego 218: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8865  TRACE  : (58)        gotypes.ego 219: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8866  TRACE  : (58)        gotypes.ego 220: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8867  TRACE  : (58)        gotypes.ego 221: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8868  TRACE  : (58)        gotypes.ego 222: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8869  TRACE  : (58)        gotypes.ego 223: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8870  TRACE  : (58)        gotypes.ego 224: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8871  TRACE  : (58)        gotypes.ego 225: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8872  TRACE  : (58)        gotypes.ego 226: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8873  TRACE  : (58)        gotypes.ego 227: Call            1              stack[ 5]: ["dad": "Mike", "mom": "Sue"], functions.Length(),...
[20210409144645] 8874  TRACE  : (58)        gotypes.ego 228: Push            2              stack[ 4]: 2, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8875  TRACE  : (58)        gotypes.ego 229: Call            2              stack[ 5]: 2, 2, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8876  TRACE  : (58)        gotypes.ego 230: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8877  TRACE  : (58)        gotypes.ego 231: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8878  TRACE  : (58)        gotypes.ego 232: AtLine          37             stack[ 0]: <empty>
[20210409144645] 8879  TRACE  : (58)        gotypes.ego 233: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8880  TRACE  : (58)        gotypes.ego 234: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8881  TRACE  : (58)        gotypes.ego 235: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8882  TRACE  : (58)        gotypes.ego 236: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8883  TRACE  : (58)        gotypes.ego 237: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8884  TRACE  : (58)        gotypes.ego 238: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8885  TRACE  : (58)        gotypes.ego 239: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8886  TRACE  : (58)        gotypes.ego 240: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8887  TRACE  : (58)        gotypes.ego 241: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 8888  TRACE  : (58)        gotypes.ego 242: Call            1              stack[ 5]: ["dad": "Mike", "mom": "Sue"], functions.Reflect()...
[20210409144645] 8889  TRACE  : (58)        gotypes.ego 243: Member          "type"         stack[ 4]: { basetype: "map[string]string", type: "map[string...
[20210409144645] 8890  TRACE  : (58)        gotypes.ego 244: Push            "map[string]string" stack[ 4]: map[string]string, compiler.TestEqual(), compiler....
[20210409144645] 8891  TRACE  : (58)        gotypes.ego 245: Call            2              stack[ 5]: map[string]string, map[string]string, compiler.Tes...
[20210409144645] 8892  TRACE  : (58)        gotypes.ego 246: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8893  TRACE  : (58)        gotypes.ego 247: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8894  TRACE  : (58)        gotypes.ego 248: AtLine          38             stack[ 0]: <empty>
[20210409144645] 8895  TRACE  : (58)        gotypes.ego 249: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8896  TRACE  : (58)        gotypes.ego 250: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8897  TRACE  : (58)        gotypes.ego 251: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8898  TRACE  : (58)        gotypes.ego 252: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8899  TRACE  : (58)        gotypes.ego 253: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8900  TRACE  : (58)        gotypes.ego 254: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8901  TRACE  : (58)        gotypes.ego 255: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8902  TRACE  : (58)        gotypes.ego 256: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8903  TRACE  : (58)        gotypes.ego 257: Push            "mom"          stack[ 4]: ["dad": "Mike", "mom": "Sue"], compiler.TestEqual(...
[20210409144645] 8904  TRACE  : (58)        gotypes.ego 258: LoadIndex                      stack[ 5]: mom, ["dad": "Mike", "mom": "Sue"], compiler.TestE...
[20210409144645] 8905  TRACE  : (58)        gotypes.ego 259: Push            "Sue"          stack[ 4]: Sue, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 8906  TRACE  : (58)        gotypes.ego 260: Call            2              stack[ 5]: Sue, Sue, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 8907  TRACE  : (58)        gotypes.ego 261: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8908  TRACE  : (58)        gotypes.ego 262: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8909  TRACE  : (58)        gotypes.ego 263: PopScope                       stack[ 0]: <empty>
[20210409144645] 8910  TRACE  : (58)        gotypes.ego 264: AtLine          41             stack[ 0]: <empty>
[20210409144645] 8911  TRACE  : (58)        gotypes.ego 265: PushScope                      stack[ 0]: <empty>
[20210409144645] 8912  TRACE  : (58)        gotypes.ego 266: AtLine          43             stack[ 0]: <empty>
[20210409144645] 8913  TRACE  : (58)        gotypes.ego 267: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8914  TRACE  : (58)        gotypes.ego 268: Push            101            stack[ 1]: M<let>
[20210409144645] 8915  TRACE  : (58)        gotypes.ego 269: Coerce          T(int)         stack[ 2]: 101, M<let>
[20210409144645] 8916  TRACE  : (58)        gotypes.ego 270: Push            "Sue"          stack[ 2]: 101, M<let>
[20210409144645] 8917  TRACE  : (58)        gotypes.ego 271: Push            102            stack[ 3]: Sue, 101, M<let>
[20210409144645] 8918  TRACE  : (58)        gotypes.ego 272: Coerce          T(int)         stack[ 4]: 102, Sue, 101, M<let>
[20210409144645] 8919  TRACE  : (58)        gotypes.ego 273: Push            "Mike"         stack[ 4]: 102, Sue, 101, M<let>
[20210409144645] 8920  TRACE  : (58)        gotypes.ego 274: Push            103            stack[ 5]: Mike, 102, Sue, 101, M<let>
[20210409144645] 8921  TRACE  : (58)        gotypes.ego 275: Coerce          T(int)         stack[ 6]: 103, Mike, 102, Sue, 101, M<let>
[20210409144645] 8922  TRACE  : (58)        gotypes.ego 276: Push            "Fred"         stack[ 6]: 103, Mike, 102, Sue, 101, M<let>
[20210409144645] 8923  TRACE  : (58)        gotypes.ego 277: Push            T(string)      stack[ 7]: Fred, 103, Mike, 102, Sue, 101, M<let>
[20210409144645] 8924  TRACE  : (58)        gotypes.ego 278: Push            T(int)         stack[ 8]: T(string), Fred, 103, Mike, 102, Sue, 101, M<let>
[20210409144645] 8925  TRACE  : (58)        gotypes.ego 279: MakeMap         3              stack[ 9]: T(int), T(string), Fred, 103, Mike, 102, Sue, 101,...
[20210409144645] 8926  TRACE  : (58)        gotypes.ego 280: SymbolCreate    "a"            stack[ 2]: [101: "Sue", 102: "Mike", 103: "Fred"], M<let>
[20210409144645] 8927  TRACE  : (58)        gotypes.ego 281: Store           "a"            stack[ 2]: [101: "Sue", 102: "Mike", 103: "Fred"], M<let>
[20210409144645] 8928  TRACE  : (58)        gotypes.ego 282: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8929  TRACE  : (58)        gotypes.ego 283: AtLine          48             stack[ 0]: <empty>
[20210409144645] 8930  TRACE  : (58)        gotypes.ego 284: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8931  TRACE  : (58)        gotypes.ego 285: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8932  TRACE  : (58)        gotypes.ego 286: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8933  TRACE  : (58)        gotypes.ego 287: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8934  TRACE  : (58)        gotypes.ego 288: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8935  TRACE  : (58)        gotypes.ego 289: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8936  TRACE  : (58)        gotypes.ego 290: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8937  TRACE  : (58)        gotypes.ego 291: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8938  TRACE  : (58)        gotypes.ego 292: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8939  TRACE  : (58)        gotypes.ego 293: Call            1              stack[ 5]: [101: "Sue", 102: "Mike", 103: "Fred"], functions....
[20210409144645] 8940  TRACE  : (58)        gotypes.ego 294: Push            3              stack[ 4]: 3, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8941  TRACE  : (58)        gotypes.ego 295: Call            2              stack[ 5]: 3, 3, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8942  TRACE  : (58)        gotypes.ego 296: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8943  TRACE  : (58)        gotypes.ego 297: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8944  TRACE  : (58)        gotypes.ego 298: AtLine          49             stack[ 0]: <empty>
[20210409144645] 8945  TRACE  : (58)        gotypes.ego 299: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8946  TRACE  : (58)        gotypes.ego 300: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8947  TRACE  : (58)        gotypes.ego 301: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8948  TRACE  : (58)        gotypes.ego 302: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8949  TRACE  : (58)        gotypes.ego 303: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8950  TRACE  : (58)        gotypes.ego 304: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8951  TRACE  : (58)        gotypes.ego 305: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8952  TRACE  : (58)        gotypes.ego 306: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8953  TRACE  : (58)        gotypes.ego 307: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 8954  TRACE  : (58)        gotypes.ego 308: Call            1              stack[ 5]: [101: "Sue", 102: "Mike", 103: "Fred"], functions....
[20210409144645] 8955  TRACE  : (58)        gotypes.ego 309: Member          "type"         stack[ 4]: { basetype: "map[int]string", type: "map[int]strin...
[20210409144645] 8956  TRACE  : (58)        gotypes.ego 310: Push            "map[int]string" stack[ 4]: map[int]string, compiler.TestEqual(), compiler.Tes...
[20210409144645] 8957  TRACE  : (58)        gotypes.ego 311: Call            2              stack[ 5]: map[int]string, map[int]string, compiler.TestEqual...
[20210409144645] 8958  TRACE  : (58)        gotypes.ego 312: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8959  TRACE  : (58)        gotypes.ego 313: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8960  TRACE  : (58)        gotypes.ego 314: AtLine          50             stack[ 0]: <empty>
[20210409144645] 8961  TRACE  : (58)        gotypes.ego 315: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8962  TRACE  : (58)        gotypes.ego 316: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8963  TRACE  : (58)        gotypes.ego 317: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8964  TRACE  : (58)        gotypes.ego 318: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8965  TRACE  : (58)        gotypes.ego 319: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8966  TRACE  : (58)        gotypes.ego 320: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8967  TRACE  : (58)        gotypes.ego 321: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8968  TRACE  : (58)        gotypes.ego 322: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8969  TRACE  : (58)        gotypes.ego 323: Push            101            stack[ 4]: [101: "Sue", 102: "Mike", 103: "Fred"], compiler.T...
[20210409144645] 8970  TRACE  : (58)        gotypes.ego 324: LoadIndex                      stack[ 5]: 101, [101: "Sue", 102: "Mike", 103: "Fred"], compi...
[20210409144645] 8971  TRACE  : (58)        gotypes.ego 325: Push            "Sue"          stack[ 4]: Sue, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 8972  TRACE  : (58)        gotypes.ego 326: Call            2              stack[ 5]: Sue, Sue, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 8973  TRACE  : (58)        gotypes.ego 327: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 8974  TRACE  : (58)        gotypes.ego 328: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 8975  TRACE  : (58)        gotypes.ego 329: PopScope                       stack[ 0]: <empty>
[20210409144645] 8976  TRACE  : (58)        gotypes.ego 330: AtLine          53             stack[ 0]: <empty>
[20210409144645] 8977  TRACE  : (58)        gotypes.ego 331: PushScope                      stack[ 0]: <empty>
[20210409144645] 8978  TRACE  : (58)        gotypes.ego 332: AtLine          55             stack[ 0]: <empty>
[20210409144645] 8979  TRACE  : (58)        gotypes.ego 333: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 8980  TRACE  : (58)        gotypes.ego 334: Load            "new"          stack[ 1]: M<let>
[20210409144645] 8981  TRACE  : (58)        gotypes.ego 335: Push            T(map[string]bool) stack[ 2]: functions.New(), M<let>
[20210409144645] 8982  TRACE  : (58)        gotypes.ego 336: Call            1              stack[ 3]: T(map[string]bool), functions.New(), M<let>
[20210409144645] 8983  TRACE  : (58)        gotypes.ego 337: SymbolCreate    "a"            stack[ 2]: [], M<let>
[20210409144645] 8984  TRACE  : (58)        gotypes.ego 338: Store           "a"            stack[ 2]: [], M<let>
[20210409144645] 8985  TRACE  : (58)        gotypes.ego 339: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 8986  TRACE  : (58)        gotypes.ego 340: AtLine          56             stack[ 0]: <empty>
[20210409144645] 8987  TRACE  : (58)        gotypes.ego 341: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 8988  TRACE  : (58)        gotypes.ego 342: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 8989  TRACE  : (58)        gotypes.ego 343: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 8990  TRACE  : (58)        gotypes.ego 344: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8991  TRACE  : (58)        gotypes.ego 345: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 8992  TRACE  : (58)        gotypes.ego 346: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8993  TRACE  : (58)        gotypes.ego 347: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 8994  TRACE  : (58)        gotypes.ego 348: Load            "len"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 8995  TRACE  : (58)        gotypes.ego 349: Load            "a"            stack[ 4]: functions.Length(), compiler.TestEqual(), compiler...
[20210409144645] 8996  TRACE  : (58)        gotypes.ego 350: Call            1              stack[ 5]: [], functions.Length(), compiler.TestEqual(), comp...
[20210409144645] 8997  TRACE  : (58)        gotypes.ego 351: Push            0              stack[ 4]: 0, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 8998  TRACE  : (58)        gotypes.ego 352: Call            2              stack[ 5]: 0, 0, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 8999  TRACE  : (58)        gotypes.ego 353: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9000  TRACE  : (58)        gotypes.ego 354: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9001  TRACE  : (58)        gotypes.ego 355: AtLine          57             stack[ 0]: <empty>
[20210409144645] 9002  TRACE  : (58)        gotypes.ego 356: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9003  TRACE  : (58)        gotypes.ego 357: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9004  TRACE  : (58)        gotypes.ego 358: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9005  TRACE  : (58)        gotypes.ego 359: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9006  TRACE  : (58)        gotypes.ego 360: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9007  TRACE  : (58)        gotypes.ego 361: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9008  TRACE  : (58)        gotypes.ego 362: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9009  TRACE  : (58)        gotypes.ego 363: Load            "reflect"      stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9010  TRACE  : (58)        gotypes.ego 364: Load            "a"            stack[ 4]: functions.Reflect(), compiler.TestEqual(), compile...
[20210409144645] 9011  TRACE  : (58)        gotypes.ego 365: Call            1              stack[ 5]: [], functions.Reflect(), compiler.TestEqual(), com...
[20210409144645] 9012  TRACE  : (58)        gotypes.ego 366: Member          "type"         stack[ 4]: { basetype: "map[string]bool", type: "map[string]b...
[20210409144645] 9013  TRACE  : (58)        gotypes.ego 367: Push            "map[string]bool" stack[ 4]: map[string]bool, compiler.TestEqual(), compiler.Te...
[20210409144645] 9014  TRACE  : (58)        gotypes.ego 368: Call            2              stack[ 5]: map[string]bool, map[string]bool, compiler.TestEqu...
[20210409144645] 9015  TRACE  : (58)        gotypes.ego 369: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9016  TRACE  : (58)        gotypes.ego 370: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9017  TRACE  : (58)        gotypes.ego 371: AtLine          58             stack[ 0]: <empty>
[20210409144645] 9018  TRACE  : (58)        gotypes.ego 372: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9019  TRACE  : (58)        gotypes.ego 373: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9020  TRACE  : (58)        gotypes.ego 374: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9021  TRACE  : (58)        gotypes.ego 375: Member          "assert"       stack[ 2]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9022  TRACE  : (58)        gotypes.ego 376: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9023  TRACE  : (58)        gotypes.ego 377: SetThis                        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9024  TRACE  : (58)        gotypes.ego 378: Member          "Equal"        stack[ 3]: Testing{ description: "types: Go-style arrays and ...
[20210409144645] 9025  TRACE  : (58)        gotypes.ego 379: Load            "a"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9026  TRACE  : (58)        gotypes.ego 380: Push            "true"         stack[ 4]: [], compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 9027  TRACE  : (58)        gotypes.ego 381: LoadIndex                      stack[ 5]: true, [], compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9028  TRACE  : (58)        gotypes.ego 382: Push                           stack[ 4]: <nil>, compiler.TestEqual(), compiler.TestAssert()...
[20210409144645] 9029  TRACE  : (58)        gotypes.ego 383: Call            2              stack[ 5]: <nil>, <nil>, compiler.TestEqual(), compiler.TestA...
[20210409144645] 9030  TRACE  : (58)        gotypes.ego 384: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9031  TRACE  : (58)        gotypes.ego 385: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9032  TRACE  : (58)        gotypes.ego 386: PopScope                       stack[ 0]: <empty>
[20210409144645] 9033  TRACE  : (58)        gotypes.ego 387: AtLine          61             stack[ 0]: <empty>
[20210409144645] 9034  TRACE  : (58)        gotypes.ego 388: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9035  TRACE  : (58)        gotypes.ego 389: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9036  TRACE  : (58)        gotypes.ego 390: Print                          stack[ 1]: (PASS)  
[20210409144645] 9037  TRACE  : (58)        gotypes.ego 391: Timer           1              stack[ 0]: <empty>
[20210409144645] 9038  TRACE  : (58)        gotypes.ego 392: Print                          stack[ 1]: 0.002s
[20210409144645] 9039  TRACE  : (58)        gotypes.ego 393: Say             true           stack[ 0]: <empty>
TEST: types: Go-style arrays and maps                   (PASS)  0.002s
[20210409144645] 9040  TRACE  : (58)        gotypes.ego 394: Stop                           stack[ 0]: <empty>
[20210409144645] 9041  TRACE  : *** Tracing maps_to_pointers.ego (59)  
[20210409144645] 9042  TRACE  : (59) maps_to_pointers.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9043  TRACE  : (59) maps_to_pointers.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9044  TRACE  : (59) maps_to_pointers.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9045  TRACE  : (59) maps_to_pointers.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9046  TRACE  : (59) maps_to_pointers.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9047  TRACE  : (59) maps_to_pointers.ego   5: Push            Testing{ description: "types: maps of pointer types" } stack[ 0]: <empty>
[20210409144645] 9048  TRACE  : (59) maps_to_pointers.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: maps of pointer type...
[20210409144645] 9049  TRACE  : (59) maps_to_pointers.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9050  TRACE  : (59) maps_to_pointers.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9051  TRACE  : (59) maps_to_pointers.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9052  TRACE  : (59) maps_to_pointers.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: maps of pointer type...
[20210409144645] 9053  TRACE  : (59) maps_to_pointers.ego  11: Print                          stack[ 1]: types: maps of pointer types
[20210409144645] 9054  TRACE  : (59) maps_to_pointers.ego  12: Push            "                      " stack[ 0]: <empty>
[20210409144645] 9055  TRACE  : (59) maps_to_pointers.ego  13: Print                          stack[ 1]:                       
[20210409144645] 9056  TRACE  : (59) maps_to_pointers.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9057  TRACE  : (59) maps_to_pointers.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 9058  TRACE  : (59) maps_to_pointers.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9059  TRACE  : (59) maps_to_pointers.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9060  TRACE  : (59) maps_to_pointers.ego  18: Push            []             stack[ 0]: <empty>
[20210409144645] 9061  TRACE  : (59) maps_to_pointers.ego  19: SymbolCreate    "a"            stack[ 1]: []
[20210409144645] 9062  TRACE  : (59) maps_to_pointers.ego  20: Store           "a"            stack[ 1]: []
[20210409144645] 9063  TRACE  : (59) maps_to_pointers.ego  21: AtLine          6              stack[ 0]: <empty>
[20210409144645] 9064  TRACE  : (59) maps_to_pointers.ego  22: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9065  TRACE  : (59) maps_to_pointers.ego  23: Push            55             stack[ 1]: M<let>
[20210409144645] 9066  TRACE  : (59) maps_to_pointers.ego  24: SymbolCreate    "age"          stack[ 2]: 55, M<let>
[20210409144645] 9067  TRACE  : (59) maps_to_pointers.ego  25: Store           "age"          stack[ 2]: 55, M<let>
[20210409144645] 9068  TRACE  : (59) maps_to_pointers.ego  26: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9069  TRACE  : (59) maps_to_pointers.ego  27: AtLine          7              stack[ 0]: <empty>
[20210409144645] 9070  TRACE  : (59) maps_to_pointers.ego  28: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9071  TRACE  : (59) maps_to_pointers.ego  29: AddressOf       "age"          stack[ 1]: M<let>
[20210409144645] 9072  TRACE  : (59) maps_to_pointers.ego  30: Load            "a"            stack[ 2]: &55, M<let>
[20210409144645] 9073  TRACE  : (59) maps_to_pointers.ego  31: Push            "name"         stack[ 3]: [], &55, M<let>
[20210409144645] 9074  TRACE  : (59) maps_to_pointers.ego  32: StoreIndex                     stack[ 4]: name, [], &55, M<let>
[20210409144645] 9075  TRACE  : (59) maps_to_pointers.ego  33: DropToMarker    M<let>         stack[ 2]: ["name": &55], M<let>
[20210409144645] 9076  TRACE  : (59) maps_to_pointers.ego  34: AtLine          9              stack[ 0]: <empty>
[20210409144645] 9077  TRACE  : (59) maps_to_pointers.ego  35: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9078  TRACE  : (59) maps_to_pointers.ego  36: Load            "a"            stack[ 1]: M<let>
[20210409144645] 9079  TRACE  : (59) maps_to_pointers.ego  37: Push            "name"         stack[ 2]: ["name": &55], M<let>
[20210409144645] 9080  TRACE  : (59) maps_to_pointers.ego  38: LoadIndex                      stack[ 3]: name, ["name": &55], M<let>
[20210409144645] 9081  TRACE  : (59) maps_to_pointers.ego  39: SymbolCreate    "b"            stack[ 2]: &55, M<let>
[20210409144645] 9082  TRACE  : (59) maps_to_pointers.ego  40: Store           "b"            stack[ 2]: &55, M<let>
[20210409144645] 9083  TRACE  : (59) maps_to_pointers.ego  41: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9084  TRACE  : (59) maps_to_pointers.ego  42: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9085  TRACE  : (59) maps_to_pointers.ego  43: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9086  TRACE  : (59) maps_to_pointers.ego  44: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9087  TRACE  : (59) maps_to_pointers.ego  45: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9088  TRACE  : (59) maps_to_pointers.ego  46: Member          "assert"       stack[ 2]: Testing{ description: "types: maps of pointer type...
[20210409144645] 9089  TRACE  : (59) maps_to_pointers.ego  47: DeRef           "b"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9090  TRACE  : (59) maps_to_pointers.ego  48: Push            55             stack[ 3]: 55, compiler.TestAssert(), M<assert>
[20210409144645] 9091  TRACE  : (59) maps_to_pointers.ego  49: Equal                          stack[ 4]: 55, 55, compiler.TestAssert(), M<assert>
[20210409144645] 9092  TRACE  : (59) maps_to_pointers.ego  50: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9093  TRACE  : (59) maps_to_pointers.ego  51: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9094  TRACE  : (59) maps_to_pointers.ego  52: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9095  TRACE  : (59) maps_to_pointers.ego  53: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9096  TRACE  : (59) maps_to_pointers.ego  54: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9097  TRACE  : (59) maps_to_pointers.ego  55: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9098  TRACE  : (59) maps_to_pointers.ego  56: Member          "assert"       stack[ 2]: Testing{ description: "types: maps of pointer type...
[20210409144645] 9099  TRACE  : (59) maps_to_pointers.ego  57: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9100  TRACE  : (59) maps_to_pointers.ego  58: Load            "a"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 9101  TRACE  : (59) maps_to_pointers.ego  59: Call            1              stack[ 4]: ["name": &55], functions.Type(), compiler.TestAsse...
[20210409144645] 9102  TRACE  : (59) maps_to_pointers.ego  60: Push            "map[string]*int" stack[ 3]: map[string]*int, compiler.TestAssert(), M<assert>
[20210409144645] 9103  TRACE  : (59) maps_to_pointers.ego  61: Equal                          stack[ 4]: map[string]*int, map[string]*int, compiler.TestAss...
[20210409144645] 9104  TRACE  : (59) maps_to_pointers.ego  62: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9105  TRACE  : (59) maps_to_pointers.ego  63: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9106  TRACE  : (59) maps_to_pointers.ego  64: PopScope                       stack[ 0]: <empty>
[20210409144645] 9107  TRACE  : (59) maps_to_pointers.ego  65: AtLine          13             stack[ 0]: <empty>
[20210409144645] 9108  TRACE  : (59) maps_to_pointers.ego  66: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9109  TRACE  : (59) maps_to_pointers.ego  67: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9110  TRACE  : (59) maps_to_pointers.ego  68: Print                          stack[ 1]: (PASS)  
[20210409144645] 9111  TRACE  : (59) maps_to_pointers.ego  69: Timer           1              stack[ 0]: <empty>
[20210409144645] 9112  TRACE  : (59) maps_to_pointers.ego  70: Print                          stack[ 1]: 0.461ms
[20210409144645] 9113  TRACE  : (59) maps_to_pointers.ego  71: Say             true           stack[ 0]: <empty>
TEST: types: maps of pointer types                      (PASS)  0.461ms
[20210409144645] 9114  TRACE  : (59) maps_to_pointers.ego  72: Stop                           stack[ 0]: <empty>
[20210409144645] 9115  TRACE  : *** Tracing nested-inits.ego (60)  
[20210409144645] 9116  TRACE  : (60)   nested-inits.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9117  TRACE  : (60)   nested-inits.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9118  TRACE  : (60)   nested-inits.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9119  TRACE  : (60)   nested-inits.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9120  TRACE  : (60)   nested-inits.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9121  TRACE  : (60)   nested-inits.ego   5: Push            Testing{ description: "types: nested initializers" } stack[ 0]: <empty>
[20210409144645] 9122  TRACE  : (60)   nested-inits.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: nested initializers"...
[20210409144645] 9123  TRACE  : (60)   nested-inits.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9124  TRACE  : (60)   nested-inits.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9125  TRACE  : (60)   nested-inits.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9126  TRACE  : (60)   nested-inits.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: nested initializers"...
[20210409144645] 9127  TRACE  : (60)   nested-inits.ego  11: Print                          stack[ 1]: types: nested initializers
[20210409144645] 9128  TRACE  : (60)   nested-inits.ego  12: Push            "                        " stack[ 0]: <empty>
[20210409144645] 9129  TRACE  : (60)   nested-inits.ego  13: Print                          stack[ 1]:                         
[20210409144645] 9130  TRACE  : (60)   nested-inits.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9131  TRACE  : (60)   nested-inits.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 9132  TRACE  : (60)   nested-inits.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9133  TRACE  : (60)   nested-inits.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 9134  TRACE  : (60)   nested-inits.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9135  TRACE  : (60)   nested-inits.ego  19: Push            "tom"          stack[ 1]: M<let>
[20210409144645] 9136  TRACE  : (60)   nested-inits.ego  20: Coerce          T(string)      stack[ 2]: tom, M<let>
[20210409144645] 9137  TRACE  : (60)   nested-inits.ego  21: Push            55             stack[ 2]: tom, M<let>
[20210409144645] 9138  TRACE  : (60)   nested-inits.ego  22: Push            "mary"         stack[ 3]: 55, tom, M<let>
[20210409144645] 9139  TRACE  : (60)   nested-inits.ego  23: Coerce          T(string)      stack[ 4]: mary, 55, tom, M<let>
[20210409144645] 9140  TRACE  : (60)   nested-inits.ego  24: Push            52             stack[ 4]: mary, 55, tom, M<let>
[20210409144645] 9141  TRACE  : (60)   nested-inits.ego  25: Push            T(int)         stack[ 5]: 52, mary, 55, tom, M<let>
[20210409144645] 9142  TRACE  : (60)   nested-inits.ego  26: Push            T(string)      stack[ 6]: T(int), 52, mary, 55, tom, M<let>
[20210409144645] 9143  TRACE  : (60)   nested-inits.ego  27: MakeMap         2              stack[ 7]: T(string), T(int), 52, mary, 55, tom, M<let>
[20210409144645] 9144  TRACE  : (60)   nested-inits.ego  28: Push            "sarah"        stack[ 2]: ["mary": 52, "tom": 55], M<let>
[20210409144645] 9145  TRACE  : (60)   nested-inits.ego  29: Coerce          T(string)      stack[ 3]: sarah, ["mary": 52, "tom": 55], M<let>
[20210409144645] 9146  TRACE  : (60)   nested-inits.ego  30: Push            15             stack[ 3]: sarah, ["mary": 52, "tom": 55], M<let>
[20210409144645] 9147  TRACE  : (60)   nested-inits.ego  31: Push            "chelsea"      stack[ 4]: 15, sarah, ["mary": 52, "tom": 55], M<let>
[20210409144645] 9148  TRACE  : (60)   nested-inits.ego  32: Coerce          T(string)      stack[ 5]: chelsea, 15, sarah, ["mary": 52, "tom": 55], M<let...
[20210409144645] 9149  TRACE  : (60)   nested-inits.ego  33: Push            19             stack[ 5]: chelsea, 15, sarah, ["mary": 52, "tom": 55], M<let...
[20210409144645] 9150  TRACE  : (60)   nested-inits.ego  34: Push            T(int)         stack[ 6]: 19, chelsea, 15, sarah, ["mary": 52, "tom": 55], M...
[20210409144645] 9151  TRACE  : (60)   nested-inits.ego  35: Push            T(string)      stack[ 7]: T(int), 19, chelsea, 15, sarah, ["mary": 52, "tom"...
[20210409144645] 9152  TRACE  : (60)   nested-inits.ego  36: MakeMap         2              stack[ 8]: T(string), T(int), 19, chelsea, 15, sarah, ["mary"...
[20210409144645] 9153  TRACE  : (60)   nested-inits.ego  37: Push            T(map[string]int) stack[ 3]: ["chelsea": 19, "sarah": 15], ["mary": 52, "tom": ...
[20210409144645] 9154  TRACE  : (60)   nested-inits.ego  38: MakeArray       2              stack[ 4]: T(map[string]int), ["chelsea": 19, "sarah": 15], [...
[20210409144645] 9155  TRACE  : (60)   nested-inits.ego  39: SymbolCreate    "a"            stack[ 2]: [["mary": 52, "tom": 55], ["chelsea": 19, "sarah":...
[20210409144645] 9156  TRACE  : (60)   nested-inits.ego  40: Store           "a"            stack[ 2]: [["mary": 52, "tom": 55], ["chelsea": 19, "sarah":...
[20210409144645] 9157  TRACE  : (60)   nested-inits.ego  41: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9158  TRACE  : (60)   nested-inits.ego  42: AtLine          17             stack[ 0]: <empty>
[20210409144645] 9159  TRACE  : (60)   nested-inits.ego  43: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9160  TRACE  : (60)   nested-inits.ego  44: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9161  TRACE  : (60)   nested-inits.ego  45: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9162  TRACE  : (60)   nested-inits.ego  46: Member          "assert"       stack[ 2]: Testing{ description: "types: nested initializers"...
[20210409144645] 9163  TRACE  : (60)   nested-inits.ego  47: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9164  TRACE  : (60)   nested-inits.ego  48: Load            "a"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 9165  TRACE  : (60)   nested-inits.ego  49: Call            1              stack[ 4]: [["mary": 52, "tom": 55], ["chelsea": 19, "sarah":...
[20210409144645] 9166  TRACE  : (60)   nested-inits.ego  50: Push            "[]map[string]int" stack[ 3]: []map[string]int, compiler.TestAssert(), M<assert>
[20210409144645] 9167  TRACE  : (60)   nested-inits.ego  51: Equal                          stack[ 4]: []map[string]int, []map[string]int, compiler.TestA...
[20210409144645] 9168  TRACE  : (60)   nested-inits.ego  52: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9169  TRACE  : (60)   nested-inits.ego  53: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9170  TRACE  : (60)   nested-inits.ego  54: AtLine          18             stack[ 0]: <empty>
[20210409144645] 9171  TRACE  : (60)   nested-inits.ego  55: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9172  TRACE  : (60)   nested-inits.ego  56: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9173  TRACE  : (60)   nested-inits.ego  57: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9174  TRACE  : (60)   nested-inits.ego  58: Member          "assert"       stack[ 2]: Testing{ description: "types: nested initializers"...
[20210409144645] 9175  TRACE  : (60)   nested-inits.ego  59: Load            "a"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9176  TRACE  : (60)   nested-inits.ego  60: Push            0              stack[ 3]: [["mary": 52, "tom": 55], ["chelsea": 19, "sarah":...
[20210409144645] 9177  TRACE  : (60)   nested-inits.ego  61: LoadIndex                      stack[ 4]: 0, [["mary": 52, "tom": 55], ["chelsea": 19, "sara...
[20210409144645] 9178  TRACE  : (60)   nested-inits.ego  62: Push            "tom"          stack[ 3]: ["mary": 52, "tom": 55], compiler.TestAssert(), M<...
[20210409144645] 9179  TRACE  : (60)   nested-inits.ego  63: LoadIndex                      stack[ 4]: tom, ["mary": 52, "tom": 55], compiler.TestAssert(...
[20210409144645] 9180  TRACE  : (60)   nested-inits.ego  64: Push            55             stack[ 3]: 55, compiler.TestAssert(), M<assert>
[20210409144645] 9181  TRACE  : (60)   nested-inits.ego  65: Equal                          stack[ 4]: 55, 55, compiler.TestAssert(), M<assert>
[20210409144645] 9182  TRACE  : (60)   nested-inits.ego  66: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9183  TRACE  : (60)   nested-inits.ego  67: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9184  TRACE  : (60)   nested-inits.ego  68: PopScope                       stack[ 0]: <empty>
[20210409144645] 9185  TRACE  : (60)   nested-inits.ego  69: AtLine          21             stack[ 0]: <empty>
[20210409144645] 9186  TRACE  : (60)   nested-inits.ego  70: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9187  TRACE  : (60)   nested-inits.ego  71: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9188  TRACE  : (60)   nested-inits.ego  72: Print                          stack[ 1]: (PASS)  
[20210409144645] 9189  TRACE  : (60)   nested-inits.ego  73: Timer           1              stack[ 0]: <empty>
[20210409144645] 9190  TRACE  : (60)   nested-inits.ego  74: Print                          stack[ 1]: 0.400ms
[20210409144645] 9191  TRACE  : (60)   nested-inits.ego  75: Say             true           stack[ 0]: <empty>
TEST: types: nested initializers                        (PASS)  0.400ms
[20210409144645] 9192  TRACE  : (60)   nested-inits.ego  76: Stop                           stack[ 0]: <empty>
[20210409144645] 9193  TRACE  : *** Tracing nested-types.ego (61)  
[20210409144645] 9194  TRACE  : (61)   nested-types.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9195  TRACE  : (61)   nested-types.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9196  TRACE  : (61)   nested-types.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9197  TRACE  : (61)   nested-types.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9198  TRACE  : (61)   nested-types.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9199  TRACE  : (61)   nested-types.ego   5: Push            Testing{ description: "types: nested user-defined types" } stack[ 0]: <empty>
[20210409144645] 9200  TRACE  : (61)   nested-types.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9201  TRACE  : (61)   nested-types.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9202  TRACE  : (61)   nested-types.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9203  TRACE  : (61)   nested-types.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9204  TRACE  : (61)   nested-types.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9205  TRACE  : (61)   nested-types.ego  11: Print                          stack[ 1]: types: nested user-defined types
[20210409144645] 9206  TRACE  : (61)   nested-types.ego  12: Push            "                  " stack[ 0]: <empty>
[20210409144645] 9207  TRACE  : (61)   nested-types.ego  13: Print                          stack[ 1]:                   
[20210409144645] 9208  TRACE  : (61)   nested-types.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9209  TRACE  : (61)   nested-types.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 9210  TRACE  : (61)   nested-types.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9211  TRACE  : (61)   nested-types.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9212  TRACE  : (61)   nested-types.ego  18: Push            T(EmpInfo struct{ID int, Name []string}) stack[ 0]: <empty>
[20210409144645] 9213  TRACE  : (61)   nested-types.ego  19: StoreAlways     "EmpInfo"      stack[ 1]: T(EmpInfo struct{ID int, Name []string})
[20210409144645] 9214  TRACE  : (61)   nested-types.ego  20: AtLine          9              stack[ 0]: <empty>
[20210409144645] 9215  TRACE  : (61)   nested-types.ego  21: Push            T(Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 0]: <empty>
[20210409144645] 9216  TRACE  : (61)   nested-types.ego  22: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{Info EmpInfo struct{ID int, Name...
[20210409144645] 9217  TRACE  : (61)   nested-types.ego  23: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9218  TRACE  : (61)   nested-types.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9219  TRACE  : (61)   nested-types.ego  25: Push            "Bob"          stack[ 1]: M<let>
[20210409144645] 9220  TRACE  : (61)   nested-types.ego  26: Push            "Smith"        stack[ 2]: Bob, M<let>
[20210409144645] 9221  TRACE  : (61)   nested-types.ego  27: Push            T(string)      stack[ 3]: Smith, Bob, M<let>
[20210409144645] 9222  TRACE  : (61)   nested-types.ego  28: MakeArray       2              stack[ 4]: T(string), Smith, Bob, M<let>
[20210409144645] 9223  TRACE  : (61)   nested-types.ego  29: Push            "Name"         stack[ 2]: ["Bob", "Smith"], M<let>
[20210409144645] 9224  TRACE  : (61)   nested-types.ego  30: Push            101            stack[ 3]: Name, ["Bob", "Smith"], M<let>
[20210409144645] 9225  TRACE  : (61)   nested-types.ego  31: Push            "ID"           stack[ 4]: 101, Name, ["Bob", "Smith"], M<let>
[20210409144645] 9226  TRACE  : (61)   nested-types.ego  32: Push            T(EmpInfo struct{ID int, Name []string}) stack[ 5]: ID, 101, Name, ["Bob", "Smith"], M<let>
[20210409144645] 9227  TRACE  : (61)   nested-types.ego  33: Push            "__type"       stack[ 6]: T(EmpInfo struct{ID int, Name []string}), ID, 101,...
[20210409144645] 9228  TRACE  : (61)   nested-types.ego  34: Struct          3              stack[ 7]: __type, T(EmpInfo struct{ID int, Name []string}), ...
[20210409144645] 9229  TRACE  : (61)   nested-types.ego  35: Push            "Info"         stack[ 2]: EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, M<let>
[20210409144645] 9230  TRACE  : (61)   nested-types.ego  36: Push            T(Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 3]: Info, EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, ...
[20210409144645] 9231  TRACE  : (61)   nested-types.ego  37: Push            "__type"       stack[ 4]: T(Employee struct{Info EmpInfo struct{ID int, Name...
[20210409144645] 9232  TRACE  : (61)   nested-types.ego  38: Struct          2              stack[ 5]: __type, T(Employee struct{Info EmpInfo struct{ID i...
[20210409144645] 9233  TRACE  : (61)   nested-types.ego  39: SymbolCreate    "e"            stack[ 2]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9234  TRACE  : (61)   nested-types.ego  40: Store           "e"            stack[ 2]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9235  TRACE  : (61)   nested-types.ego  41: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9236  TRACE  : (61)   nested-types.ego  42: AtLine          21             stack[ 0]: <empty>
[20210409144645] 9237  TRACE  : (61)   nested-types.ego  43: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9238  TRACE  : (61)   nested-types.ego  44: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9239  TRACE  : (61)   nested-types.ego  45: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9240  TRACE  : (61)   nested-types.ego  46: Member          "assert"       stack[ 2]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9241  TRACE  : (61)   nested-types.ego  47: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9242  TRACE  : (61)   nested-types.ego  48: SetThis                        stack[ 3]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9243  TRACE  : (61)   nested-types.ego  49: Member          "Equal"        stack[ 3]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9244  TRACE  : (61)   nested-types.ego  50: Load            "e"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9245  TRACE  : (61)   nested-types.ego  51: Member          "Info"         stack[ 4]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9246  TRACE  : (61)   nested-types.ego  52: Member          "Name"         stack[ 4]: EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, compil...
[20210409144645] 9247  TRACE  : (61)   nested-types.ego  53: Push            0              stack[ 4]: ["Bob", "Smith"], compiler.TestEqual(), compiler.T...
[20210409144645] 9248  TRACE  : (61)   nested-types.ego  54: LoadIndex                      stack[ 5]: 0, ["Bob", "Smith"], compiler.TestEqual(), compile...
[20210409144645] 9249  TRACE  : (61)   nested-types.ego  55: Push            "Bob"          stack[ 4]: Bob, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9250  TRACE  : (61)   nested-types.ego  56: Call            2              stack[ 5]: Bob, Bob, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9251  TRACE  : (61)   nested-types.ego  57: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9252  TRACE  : (61)   nested-types.ego  58: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9253  TRACE  : (61)   nested-types.ego  59: AtLine          22             stack[ 0]: <empty>
[20210409144645] 9254  TRACE  : (61)   nested-types.ego  60: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9255  TRACE  : (61)   nested-types.ego  61: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9256  TRACE  : (61)   nested-types.ego  62: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9257  TRACE  : (61)   nested-types.ego  63: Member          "assert"       stack[ 2]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9258  TRACE  : (61)   nested-types.ego  64: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9259  TRACE  : (61)   nested-types.ego  65: SetThis                        stack[ 3]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9260  TRACE  : (61)   nested-types.ego  66: Member          "Equal"        stack[ 3]: Testing{ description: "types: nested user-defined ...
[20210409144645] 9261  TRACE  : (61)   nested-types.ego  67: Load            "e"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9262  TRACE  : (61)   nested-types.ego  68: Member          "Manager"      stack[ 4]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9263  TRACE  : (61)   nested-types.ego  69: Push            false          stack[ 4]: false, compiler.TestEqual(), compiler.TestAssert()...
[20210409144645] 9264  TRACE  : (61)   nested-types.ego  70: Call            2              stack[ 5]: false, false, compiler.TestEqual(), compiler.TestA...
[20210409144645] 9265  TRACE  : (61)   nested-types.ego  71: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9266  TRACE  : (61)   nested-types.ego  72: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9267  TRACE  : (61)   nested-types.ego  73: PopScope                       stack[ 0]: <empty>
[20210409144645] 9268  TRACE  : (61)   nested-types.ego  74: AtLine          24             stack[ 0]: <empty>
[20210409144645] 9269  TRACE  : (61)   nested-types.ego  75: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9270  TRACE  : (61)   nested-types.ego  76: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9271  TRACE  : (61)   nested-types.ego  77: Print                          stack[ 1]: (PASS)  
[20210409144645] 9272  TRACE  : (61)   nested-types.ego  78: Timer           1              stack[ 0]: <empty>
[20210409144645] 9273  TRACE  : (61)   nested-types.ego  79: Print                          stack[ 1]: 0.414ms
[20210409144645] 9274  TRACE  : (61)   nested-types.ego  80: Say             true           stack[ 0]: <empty>
TEST: types: nested user-defined types                  (PASS)  0.414ms
[20210409144645] 9275  TRACE  : (61)   nested-types.ego  81: Stop                           stack[ 0]: <empty>
[20210409144645] 9276  TRACE  : *** Tracing nested_maps.ego (62)  
[20210409144645] 9277  TRACE  : (62)    nested_maps.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9278  TRACE  : (62)    nested_maps.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9279  TRACE  : (62)    nested_maps.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9280  TRACE  : (62)    nested_maps.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9281  TRACE  : (62)    nested_maps.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9282  TRACE  : (62)    nested_maps.ego   5: Push            Testing{ description: "types: nested map types" } stack[ 0]: <empty>
[20210409144645] 9283  TRACE  : (62)    nested_maps.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: nested map types" }
[20210409144645] 9284  TRACE  : (62)    nested_maps.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9285  TRACE  : (62)    nested_maps.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9286  TRACE  : (62)    nested_maps.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9287  TRACE  : (62)    nested_maps.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: nested map types" }
[20210409144645] 9288  TRACE  : (62)    nested_maps.ego  11: Print                          stack[ 1]: types: nested map types
[20210409144645] 9289  TRACE  : (62)    nested_maps.ego  12: Push            "                           " stack[ 0]: <empty>
[20210409144645] 9290  TRACE  : (62)    nested_maps.ego  13: Print                          stack[ 1]:                            
[20210409144645] 9291  TRACE  : (62)    nested_maps.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9292  TRACE  : (62)    nested_maps.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 9293  TRACE  : (62)    nested_maps.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9294  TRACE  : (62)    nested_maps.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 9295  TRACE  : (62)    nested_maps.ego  18: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9296  TRACE  : (62)    nested_maps.ego  19: Load            "new"          stack[ 1]: M<let>
[20210409144645] 9297  TRACE  : (62)    nested_maps.ego  20: Push            T(map[string]map[string]int) stack[ 2]: functions.New(), M<let>
[20210409144645] 9298  TRACE  : (62)    nested_maps.ego  21: Call            1              stack[ 3]: T(map[string]map[string]int), functions.New(), M<l...
[20210409144645] 9299  TRACE  : (62)    nested_maps.ego  22: SymbolCreate    "a"            stack[ 2]: [], M<let>
[20210409144645] 9300  TRACE  : (62)    nested_maps.ego  23: Store           "a"            stack[ 2]: [], M<let>
[20210409144645] 9301  TRACE  : (62)    nested_maps.ego  24: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9302  TRACE  : (62)    nested_maps.ego  25: AtLine          6              stack[ 0]: <empty>
[20210409144645] 9303  TRACE  : (62)    nested_maps.ego  26: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9304  TRACE  : (62)    nested_maps.ego  27: Push            "Tom"          stack[ 1]: M<let>
[20210409144645] 9305  TRACE  : (62)    nested_maps.ego  28: Coerce          T(string)      stack[ 2]: Tom, M<let>
[20210409144645] 9306  TRACE  : (62)    nested_maps.ego  29: Push            61             stack[ 2]: Tom, M<let>
[20210409144645] 9307  TRACE  : (62)    nested_maps.ego  30: Push            T(int)         stack[ 3]: 61, Tom, M<let>
[20210409144645] 9308  TRACE  : (62)    nested_maps.ego  31: Push            T(string)      stack[ 4]: T(int), 61, Tom, M<let>
[20210409144645] 9309  TRACE  : (62)    nested_maps.ego  32: MakeMap         1              stack[ 5]: T(string), T(int), 61, Tom, M<let>
[20210409144645] 9310  TRACE  : (62)    nested_maps.ego  33: SymbolCreate    "b"            stack[ 2]: ["Tom": 61], M<let>
[20210409144645] 9311  TRACE  : (62)    nested_maps.ego  34: Store           "b"            stack[ 2]: ["Tom": 61], M<let>
[20210409144645] 9312  TRACE  : (62)    nested_maps.ego  35: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9313  TRACE  : (62)    nested_maps.ego  36: AtLine          7              stack[ 0]: <empty>
[20210409144645] 9314  TRACE  : (62)    nested_maps.ego  37: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9315  TRACE  : (62)    nested_maps.ego  38: Load            "b"            stack[ 1]: M<let>
[20210409144645] 9316  TRACE  : (62)    nested_maps.ego  39: Load            "a"            stack[ 2]: ["Tom": 61], M<let>
[20210409144645] 9317  TRACE  : (62)    nested_maps.ego  40: Push            "cole"         stack[ 3]: [], ["Tom": 61], M<let>
[20210409144645] 9318  TRACE  : (62)    nested_maps.ego  41: StoreIndex                     stack[ 4]: cole, [], ["Tom": 61], M<let>
[20210409144645] 9319  TRACE  : (62)    nested_maps.ego  42: DropToMarker    M<let>         stack[ 2]: ["cole": ["Tom": 61]], M<let>
[20210409144645] 9320  TRACE  : (62)    nested_maps.ego  43: AtLine          9              stack[ 0]: <empty>
[20210409144645] 9321  TRACE  : (62)    nested_maps.ego  44: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9322  TRACE  : (62)    nested_maps.ego  45: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9323  TRACE  : (62)    nested_maps.ego  46: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9324  TRACE  : (62)    nested_maps.ego  47: Member          "assert"       stack[ 2]: Testing{ description: "types: nested map types" },...
[20210409144645] 9325  TRACE  : (62)    nested_maps.ego  48: Load            "a"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9326  TRACE  : (62)    nested_maps.ego  49: Push            "cole"         stack[ 3]: ["cole": ["Tom": 61]], compiler.TestAssert(), M<as...
[20210409144645] 9327  TRACE  : (62)    nested_maps.ego  50: LoadIndex                      stack[ 4]: cole, ["cole": ["Tom": 61]], compiler.TestAssert()...
[20210409144645] 9328  TRACE  : (62)    nested_maps.ego  51: Push            "Tom"          stack[ 3]: ["Tom": 61], compiler.TestAssert(), M<assert>
[20210409144645] 9329  TRACE  : (62)    nested_maps.ego  52: LoadIndex                      stack[ 4]: Tom, ["Tom": 61], compiler.TestAssert(), M<assert>
[20210409144645] 9330  TRACE  : (62)    nested_maps.ego  53: Push            61             stack[ 3]: 61, compiler.TestAssert(), M<assert>
[20210409144645] 9331  TRACE  : (62)    nested_maps.ego  54: Equal                          stack[ 4]: 61, 61, compiler.TestAssert(), M<assert>
[20210409144645] 9332  TRACE  : (62)    nested_maps.ego  55: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9333  TRACE  : (62)    nested_maps.ego  56: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9334  TRACE  : (62)    nested_maps.ego  57: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9335  TRACE  : (62)    nested_maps.ego  58: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9336  TRACE  : (62)    nested_maps.ego  59: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9337  TRACE  : (62)    nested_maps.ego  60: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9338  TRACE  : (62)    nested_maps.ego  61: Member          "assert"       stack[ 2]: Testing{ description: "types: nested map types" },...
[20210409144645] 9339  TRACE  : (62)    nested_maps.ego  62: Load            "type"         stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9340  TRACE  : (62)    nested_maps.ego  63: Load            "a"            stack[ 3]: functions.Type(), compiler.TestAssert(), M<assert>
[20210409144645] 9341  TRACE  : (62)    nested_maps.ego  64: Call            1              stack[ 4]: ["cole": ["Tom": 61]], functions.Type(), compiler....
[20210409144645] 9342  TRACE  : (62)    nested_maps.ego  65: Push            "map[string]map[string]int" stack[ 3]: map[string]map[string]int, compiler.TestAssert(), ...
[20210409144645] 9343  TRACE  : (62)    nested_maps.ego  66: Equal                          stack[ 4]: map[string]map[string]int, map[string]map[string]i...
[20210409144645] 9344  TRACE  : (62)    nested_maps.ego  67: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9345  TRACE  : (62)    nested_maps.ego  68: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9346  TRACE  : (62)    nested_maps.ego  69: PopScope                       stack[ 0]: <empty>
[20210409144645] 9347  TRACE  : (62)    nested_maps.ego  70: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9348  TRACE  : (62)    nested_maps.ego  71: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9349  TRACE  : (62)    nested_maps.ego  72: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9350  TRACE  : (62)    nested_maps.ego  73: Print                          stack[ 1]: (PASS)  
[20210409144645] 9351  TRACE  : (62)    nested_maps.ego  74: Timer           1              stack[ 0]: <empty>
[20210409144645] 9352  TRACE  : (62)    nested_maps.ego  75: Print                          stack[ 1]: 0.388ms
[20210409144645] 9353  TRACE  : (62)    nested_maps.ego  76: Say             true           stack[ 0]: <empty>
TEST: types: nested map types                           (PASS)  0.388ms
[20210409144645] 9354  TRACE  : (62)    nested_maps.ego  77: Stop                           stack[ 0]: <empty>
[20210409144645] 9355  TRACE  : *** Tracing pointers_as_args.ego (63)  
[20210409144645] 9356  TRACE  : (63) pointers_as_args.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9357  TRACE  : (63) pointers_as_args.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9358  TRACE  : (63) pointers_as_args.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9359  TRACE  : (63) pointers_as_args.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9360  TRACE  : (63) pointers_as_args.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9361  TRACE  : (63) pointers_as_args.ego   5: Push            Testing{ description: "types: pointers as func args" } stack[ 0]: <empty>
[20210409144645] 9362  TRACE  : (63) pointers_as_args.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9363  TRACE  : (63) pointers_as_args.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9364  TRACE  : (63) pointers_as_args.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9365  TRACE  : (63) pointers_as_args.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9366  TRACE  : (63) pointers_as_args.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9367  TRACE  : (63) pointers_as_args.ego  11: Print                          stack[ 1]: types: pointers as func args
[20210409144645] 9368  TRACE  : (63) pointers_as_args.ego  12: Push            "                      " stack[ 0]: <empty>
[20210409144645] 9369  TRACE  : (63) pointers_as_args.ego  13: Print                          stack[ 1]:                       
[20210409144645] 9370  TRACE  : (63) pointers_as_args.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9371  TRACE  : (63) pointers_as_args.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 9372  TRACE  : (63) pointers_as_args.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9373  TRACE  : (63) pointers_as_args.ego  17: Push            setter()       stack[ 0]: <empty>
[20210409144645] 9374  TRACE  : (63) pointers_as_args.ego  18: StoreAlways     "setter"       stack[ 1]: setter()
[20210409144645] 9375  TRACE  : (63) pointers_as_args.ego  19: AtLine          9              stack[ 0]: <empty>
[20210409144645] 9376  TRACE  : (63) pointers_as_args.ego  20: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9377  TRACE  : (63) pointers_as_args.ego  21: Push            66             stack[ 1]: M<let>
[20210409144645] 9378  TRACE  : (63) pointers_as_args.ego  22: SymbolCreate    "x"            stack[ 2]: 66, M<let>
[20210409144645] 9379  TRACE  : (63) pointers_as_args.ego  23: Store           "x"            stack[ 2]: 66, M<let>
[20210409144645] 9380  TRACE  : (63) pointers_as_args.ego  24: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9381  TRACE  : (63) pointers_as_args.ego  25: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9382  TRACE  : (63) pointers_as_args.ego  26: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 9383  TRACE  : (63) pointers_as_args.ego  27: Load            "setter"       stack[ 1]: M<call>
[20210409144645] 9384  TRACE  : (63) pointers_as_args.ego  28: Push            42             stack[ 2]: setter(), M<call>
[20210409144645] 9385  TRACE  : (63) pointers_as_args.ego  29: AddressOf       "x"            stack[ 3]: 42, setter(), M<call>
[20210409144645] 9386  TRACE  : (63) pointers_as_args.ego  30: Call            2              stack[ 4]: &66, 42, setter(), M<call>
[20210409144645] 9387  TRACE  : (63)             setter   0: ArgCheck        [2 2 setter]   stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9388  TRACE  : (63)             setter   1: Load            "__args"       stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9389  TRACE  : (63)             setter   2: LoadIndex       0              stack[ 3]: [42, &66], F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9390  TRACE  : (63)             setter   3: RequiredType    T(int)         stack[ 3]: 42, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9391  TRACE  : (63)             setter   4: StoreAlways     "src"          stack[ 3]: 42, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9392  TRACE  : (63)             setter   5: Load            "__args"       stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9393  TRACE  : (63)             setter   6: LoadIndex       1              stack[ 3]: [42, &66], F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9394  TRACE  : (63)             setter   7: RequiredType    T(interface{}) stack[ 3]: &66, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9395  TRACE  : (63)             setter   8: StoreAlways     "dest"         stack[ 3]: &66, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9396  TRACE  : (63)             setter   9: AtLine          4              stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9397  TRACE  : (63)             setter  10: PushScope                      stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9398  TRACE  : (63)             setter  11: AtLine          5              stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9399  TRACE  : (63)             setter  12: Push            M<let>         stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9400  TRACE  : (63)             setter  13: Load            "src"          stack[ 3]: M<let>, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9401  TRACE  : (63)             setter  14: StorePointer    "dest"         stack[ 4]: 42, M<let>, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9402  TRACE  : (63)             setter  15: DropToMarker    M<let>         stack[ 3]: M<let>, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9403  TRACE  : (63)             setter  16: AtLine          6              stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9404  TRACE  : (63)             setter  17: ModeCheck       "test"         stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9405  TRACE  : (63)             setter  18: Push            M<assert>      stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9406  TRACE  : (63)             setter  19: Load            "T"            stack[ 3]: M<assert>, F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9407  TRACE  : (63)             setter  20: Member          "assert"       stack[ 4]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9408  TRACE  : (63)             setter  21: Load            "T"            stack[ 4]: compiler.TestAssert(), M<assert>, F<pointers_as_ar...
[20210409144645] 9409  TRACE  : (63)             setter  22: SetThis                        stack[ 5]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9410  TRACE  : (63)             setter  23: Member          "Equal"        stack[ 5]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9411  TRACE  : (63)             setter  24: Push            42             stack[ 5]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9412  TRACE  : (63)             setter  25: DeRef           "dest"         stack[ 6]: 42, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 9413  TRACE  : (63)             setter  26: Call            2              stack[ 7]: 42, 42, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 9414  TRACE  : (63)             setter  27: Call            1              stack[ 5]: true, compiler.TestAssert(), M<assert>, F<pointers...
[20210409144645] 9415  TRACE  : (63)             setter  28: DropToMarker                   stack[ 4]: true, M<assert>, F<pointers_as_args.ego:10>, M<cal...
[20210409144645] 9416  TRACE  : (63)             setter  29: PopScope                       stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9417  TRACE  : (63)             setter  30: Return                         stack[ 2]: F<pointers_as_args.ego:10>, M<call>
[20210409144645] 9418  TRACE  : (63) pointers_as_args.ego  31: DropToMarker    M<call>        stack[ 2]: M<assert>, M<call>
[20210409144645] 9419  TRACE  : (63) pointers_as_args.ego  32: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9420  TRACE  : (63) pointers_as_args.ego  33: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9421  TRACE  : (63) pointers_as_args.ego  34: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9422  TRACE  : (63) pointers_as_args.ego  35: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9423  TRACE  : (63) pointers_as_args.ego  36: Member          "assert"       stack[ 2]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9424  TRACE  : (63) pointers_as_args.ego  37: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9425  TRACE  : (63) pointers_as_args.ego  38: SetThis                        stack[ 3]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9426  TRACE  : (63) pointers_as_args.ego  39: Member          "Equal"        stack[ 3]: Testing{ description: "types: pointers as func arg...
[20210409144645] 9427  TRACE  : (63) pointers_as_args.ego  40: Push            42             stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9428  TRACE  : (63) pointers_as_args.ego  41: Load            "x"            stack[ 4]: 42, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 9429  TRACE  : (63) pointers_as_args.ego  42: Call            2              stack[ 5]: 42, 42, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 9430  TRACE  : (63) pointers_as_args.ego  43: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9431  TRACE  : (63) pointers_as_args.ego  44: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9432  TRACE  : (63) pointers_as_args.ego  45: PopScope                       stack[ 0]: <empty>
[20210409144645] 9433  TRACE  : (63) pointers_as_args.ego  46: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9434  TRACE  : (63) pointers_as_args.ego  47: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9435  TRACE  : (63) pointers_as_args.ego  48: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9436  TRACE  : (63) pointers_as_args.ego  49: Print                          stack[ 1]: (PASS)  
[20210409144645] 9437  TRACE  : (63) pointers_as_args.ego  50: Timer           1              stack[ 0]: <empty>
[20210409144645] 9438  TRACE  : (63) pointers_as_args.ego  51: Print                          stack[ 1]: 0.446ms
[20210409144645] 9439  TRACE  : (63) pointers_as_args.ego  52: Say             true           stack[ 0]: <empty>
TEST: types: pointers as func args                      (PASS)  0.446ms
[20210409144645] 9440  TRACE  : (63) pointers_as_args.ego  53: Stop                           stack[ 0]: <empty>
[20210409144645] 9441  TRACE  : *** Tracing static_typing.ego (64)  
[20210409144645] 9442  TRACE  : (64)  static_typing.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9443  TRACE  : (64)  static_typing.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9444  TRACE  : (64)  static_typing.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9445  TRACE  : (64)  static_typing.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9446  TRACE  : (64)  static_typing.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9447  TRACE  : (64)  static_typing.ego   5: Push            Testing{ description: "types: static typing" } stack[ 0]: <empty>
[20210409144645] 9448  TRACE  : (64)  static_typing.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: static typing" }
[20210409144645] 9449  TRACE  : (64)  static_typing.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9450  TRACE  : (64)  static_typing.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9451  TRACE  : (64)  static_typing.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9452  TRACE  : (64)  static_typing.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: static typing" }
[20210409144645] 9453  TRACE  : (64)  static_typing.ego  11: Print                          stack[ 1]: types: static typing
[20210409144645] 9454  TRACE  : (64)  static_typing.ego  12: Push            "                              " stack[ 0]: <empty>
[20210409144645] 9455  TRACE  : (64)  static_typing.ego  13: Print                          stack[ 1]:                               
[20210409144645] 9456  TRACE  : (64)  static_typing.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9457  TRACE  : (64)  static_typing.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9458  TRACE  : (64)  static_typing.ego  16: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9459  TRACE  : (64)  static_typing.ego  17: Push            "Tom"          stack[ 1]: M<let>
[20210409144645] 9460  TRACE  : (64)  static_typing.ego  18: SymbolCreate    "a"            stack[ 2]: Tom, M<let>
[20210409144645] 9461  TRACE  : (64)  static_typing.ego  19: Store           "a"            stack[ 2]: Tom, M<let>
[20210409144645] 9462  TRACE  : (64)  static_typing.ego  20: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9463  TRACE  : (64)  static_typing.ego  21: AtLine          6              stack[ 0]: <empty>
[20210409144645] 9464  TRACE  : (64)  static_typing.ego  22: PushScope                      stack[ 0]: <empty>
[20210409144645] 9465  TRACE  : (64)  static_typing.ego  23: AtLine          7              stack[ 0]: <empty>
[20210409144645] 9466  TRACE  : (64)  static_typing.ego  24: Push            true           stack[ 0]: <empty>
[20210409144645] 9467  TRACE  : (64)  static_typing.ego  25: StaticTyping                   stack[ 1]: true
[20210409144645] 9468  TRACE  : (64)  static_typing.ego  26: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9469  TRACE  : (64)  static_typing.ego  27: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9470  TRACE  : (64)  static_typing.ego  28: Push            3              stack[ 1]: M<let>
[20210409144645] 9471  TRACE  : (64)  static_typing.ego  29: SymbolCreate    "a"            stack[ 2]: 3, M<let>
[20210409144645] 9472  TRACE  : (64)  static_typing.ego  30: Store           "a"            stack[ 2]: 3, M<let>
[20210409144645] 9473  TRACE  : (64)  static_typing.ego  31: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9474  TRACE  : (64)  static_typing.ego  32: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9475  TRACE  : (64)  static_typing.ego  33: Try             @47            stack[ 0]: <empty>
[20210409144645] 9476  TRACE  : (64)  static_typing.ego  34: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9477  TRACE  : (64)  static_typing.ego  35: PushScope                      stack[ 0]: <empty>
[20210409144645] 9478  TRACE  : (64)  static_typing.ego  36: AtLine          15             stack[ 0]: <empty>
[20210409144645] 9479  TRACE  : (64)  static_typing.ego  37: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9480  TRACE  : (64)  static_typing.ego  38: Push            "test"         stack[ 1]: M<let>
[20210409144645] 9481  TRACE  : (64)  static_typing.ego  39: Store           "a"            stack[ 2]: test, M<let>
[20210409144645] 9482  TRACE  : (64)  *** Branch to 47 on error: at static_typing.ego(line 15), invalid type for this variable
[20210409144645] 9483  TRACE  : (64)  static_typing.ego  47: AtLine          20             stack[ 1]: M<let>
[20210409144645] 9484  TRACE  : (64)  static_typing.ego  48: PopScope                       stack[ 1]: M<let>
[20210409144645] 9485  TRACE  : (64)  static_typing.ego  49: TryPop                         stack[ 1]: M<let>
[20210409144645] 9486  TRACE  : (64)  static_typing.ego  50: AtLine          20             stack[ 1]: M<let>
[20210409144645] 9487  TRACE  : (64)  static_typing.ego  51: Push            false          stack[ 1]: M<let>
[20210409144645] 9488  TRACE  : (64)  static_typing.ego  52: StaticTyping                   stack[ 2]: false, M<let>
[20210409144645] 9489  TRACE  : (64)  static_typing.ego  53: PopScope                       stack[ 1]: M<let>
[20210409144645] 9490  TRACE  : (64)  static_typing.ego  54: AtLine          25             stack[ 1]: M<let>
[20210409144645] 9491  TRACE  : (64)  static_typing.ego  55: Try             @65            stack[ 1]: M<let>
[20210409144645] 9492  TRACE  : (64)  static_typing.ego  56: AtLine          25             stack[ 1]: M<let>
[20210409144645] 9493  TRACE  : (64)  static_typing.ego  57: PushScope                      stack[ 1]: M<let>
[20210409144645] 9494  TRACE  : (64)  static_typing.ego  58: AtLine          26             stack[ 1]: M<let>
[20210409144645] 9495  TRACE  : (64)  static_typing.ego  59: Push            M<let>         stack[ 1]: M<let>
[20210409144645] 9496  TRACE  : (64)  static_typing.ego  60: Push            55.5           stack[ 2]: M<let>, M<let>
[20210409144645] 9497  TRACE  : (64)  static_typing.ego  61: Store           "a"            stack[ 3]: 55.5, M<let>, M<let>
[20210409144645] 9498  TRACE  : (64)  static_typing.ego  62: DropToMarker    M<let>         stack[ 2]: M<let>, M<let>
[20210409144645] 9499  TRACE  : (64)  static_typing.ego  63: PopScope                       stack[ 1]: M<let>
[20210409144645] 9500  TRACE  : (64)  static_typing.ego  64: Branch          @73            stack[ 1]: M<let>
[20210409144645] 9501  TRACE  : (64)  static_typing.ego  73: TryPop                         stack[ 1]: M<let>
[20210409144645] 9502  TRACE  : (64)  static_typing.ego  74: AtLine          31             stack[ 1]: M<let>
[20210409144645] 9503  TRACE  : (64)  static_typing.ego  75: ModeCheck       "test"         stack[ 1]: M<let>
[20210409144645] 9504  TRACE  : (64)  static_typing.ego  76: Push            "(PASS)  "     stack[ 1]: M<let>
[20210409144645] 9505  TRACE  : (64)  static_typing.ego  77: Print                          stack[ 2]: (PASS)  , M<let>
[20210409144645] 9506  TRACE  : (64)  static_typing.ego  78: Timer           1              stack[ 1]: M<let>
[20210409144645] 9507  TRACE  : (64)  static_typing.ego  79: Print                          stack[ 2]: 0.294ms, M<let>
[20210409144645] 9508  TRACE  : (64)  static_typing.ego  80: Say             true           stack[ 1]: M<let>
TEST: types: static typing                              (PASS)  0.294ms
[20210409144645] 9509  TRACE  : (64)  static_typing.ego  81: Stop                           stack[ 1]: M<let>
[20210409144645] 9510  TRACE  : *** Tracing typeinits.ego (65)  
[20210409144645] 9511  TRACE  : (65)      typeinits.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9512  TRACE  : (65)      typeinits.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9513  TRACE  : (65)      typeinits.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9514  TRACE  : (65)      typeinits.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9515  TRACE  : (65)      typeinits.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9516  TRACE  : (65)      typeinits.ego   5: Push            Testing{ description: "types: initialize using types" } stack[ 0]: <empty>
[20210409144645] 9517  TRACE  : (65)      typeinits.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: initialize using typ...
[20210409144645] 9518  TRACE  : (65)      typeinits.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9519  TRACE  : (65)      typeinits.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9520  TRACE  : (65)      typeinits.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9521  TRACE  : (65)      typeinits.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: initialize using typ...
[20210409144645] 9522  TRACE  : (65)      typeinits.ego  11: Print                          stack[ 1]: types: initialize using types
[20210409144645] 9523  TRACE  : (65)      typeinits.ego  12: Push            "                     " stack[ 0]: <empty>
[20210409144645] 9524  TRACE  : (65)      typeinits.ego  13: Print                          stack[ 1]:                      
[20210409144645] 9525  TRACE  : (65)      typeinits.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9526  TRACE  : (65)      typeinits.ego  15: AtLine          2              stack[ 0]: <empty>
[20210409144645] 9527  TRACE  : (65)      typeinits.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9528  TRACE  : (65)      typeinits.ego  17: AtLine          3              stack[ 0]: <empty>
[20210409144645] 9529  TRACE  : (65)      typeinits.ego  18: Push            T(emp struct{age int, name string}) stack[ 0]: <empty>
[20210409144645] 9530  TRACE  : (65)      typeinits.ego  19: StoreAlways     "emp"          stack[ 1]: T(emp struct{age int, name string})
[20210409144645] 9531  TRACE  : (65)      typeinits.ego  20: AtLine          8              stack[ 0]: <empty>
[20210409144645] 9532  TRACE  : (65)      typeinits.ego  21: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9533  TRACE  : (65)      typeinits.ego  22: Push            "Bob"          stack[ 1]: M<let>
[20210409144645] 9534  TRACE  : (65)      typeinits.ego  23: Push            "name"         stack[ 2]: Bob, M<let>
[20210409144645] 9535  TRACE  : (65)      typeinits.ego  24: Push            55             stack[ 3]: name, Bob, M<let>
[20210409144645] 9536  TRACE  : (65)      typeinits.ego  25: Push            "age"          stack[ 4]: 55, name, Bob, M<let>
[20210409144645] 9537  TRACE  : (65)      typeinits.ego  26: Push            T(emp struct{age int, name string}) stack[ 5]: age, 55, name, Bob, M<let>
[20210409144645] 9538  TRACE  : (65)      typeinits.ego  27: Push            "__type"       stack[ 6]: T(emp struct{age int, name string}), age, 55, name...
[20210409144645] 9539  TRACE  : (65)      typeinits.ego  28: Struct          3              stack[ 7]: __type, T(emp struct{age int, name string}), age, ...
[20210409144645] 9540  TRACE  : (65)      typeinits.ego  29: SymbolCreate    "e"            stack[ 2]: emp{ age: 55, name: "Bob" }, M<let>
[20210409144645] 9541  TRACE  : (65)      typeinits.ego  30: Store           "e"            stack[ 2]: emp{ age: 55, name: "Bob" }, M<let>
[20210409144645] 9542  TRACE  : (65)      typeinits.ego  31: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9543  TRACE  : (65)      typeinits.ego  32: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9544  TRACE  : (65)      typeinits.ego  33: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9545  TRACE  : (65)      typeinits.ego  34: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9546  TRACE  : (65)      typeinits.ego  35: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9547  TRACE  : (65)      typeinits.ego  36: Member          "assert"       stack[ 2]: Testing{ description: "types: initialize using typ...
[20210409144645] 9548  TRACE  : (65)      typeinits.ego  37: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9549  TRACE  : (65)      typeinits.ego  38: SetThis                        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9550  TRACE  : (65)      typeinits.ego  39: Member          "Equal"        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9551  TRACE  : (65)      typeinits.ego  40: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9552  TRACE  : (65)      typeinits.ego  41: Load            "e"            stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9553  TRACE  : (65)      typeinits.ego  42: Call            1              stack[ 5]: emp{ age: 55, name: "Bob" }, functions.Type(), com...
[20210409144645] 9554  TRACE  : (65)      typeinits.ego  43: Push            "emp"          stack[ 4]: emp, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9555  TRACE  : (65)      typeinits.ego  44: Push            "Wrong type of created struct" stack[ 5]: emp, emp, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9556  TRACE  : (65)      typeinits.ego  45: Call            3              stack[ 6]: Wrong type of created struct, emp, emp, compiler.T...
[20210409144645] 9557  TRACE  : (65)      typeinits.ego  46: Call            1              stack[ 3]: [true Wrong type of created struct], compiler.Test...
[20210409144645] 9558  TRACE  : (65)      typeinits.ego  47: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9559  TRACE  : (65)      typeinits.ego  48: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9560  TRACE  : (65)      typeinits.ego  49: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9561  TRACE  : (65)      typeinits.ego  50: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9562  TRACE  : (65)      typeinits.ego  51: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9563  TRACE  : (65)      typeinits.ego  52: Member          "assert"       stack[ 2]: Testing{ description: "types: initialize using typ...
[20210409144645] 9564  TRACE  : (65)      typeinits.ego  53: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9565  TRACE  : (65)      typeinits.ego  54: SetThis                        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9566  TRACE  : (65)      typeinits.ego  55: Member          "Equal"        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9567  TRACE  : (65)      typeinits.ego  56: Load            "e"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9568  TRACE  : (65)      typeinits.ego  57: Member          "name"         stack[ 4]: emp{ age: 55, name: "Bob" }, compiler.TestEqual(),...
[20210409144645] 9569  TRACE  : (65)      typeinits.ego  58: Push            "Bob"          stack[ 4]: Bob, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9570  TRACE  : (65)      typeinits.ego  59: Push            "Wrong name value in type" stack[ 5]: Bob, Bob, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9571  TRACE  : (65)      typeinits.ego  60: Call            3              stack[ 6]: Wrong name value in type, Bob, Bob, compiler.TestE...
[20210409144645] 9572  TRACE  : (65)      typeinits.ego  61: Call            1              stack[ 3]: [true Wrong name value in type], compiler.TestAsse...
[20210409144645] 9573  TRACE  : (65)      typeinits.ego  62: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9574  TRACE  : (65)      typeinits.ego  63: AtLine          12             stack[ 0]: <empty>
[20210409144645] 9575  TRACE  : (65)      typeinits.ego  64: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9576  TRACE  : (65)      typeinits.ego  65: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9577  TRACE  : (65)      typeinits.ego  66: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9578  TRACE  : (65)      typeinits.ego  67: Member          "assert"       stack[ 2]: Testing{ description: "types: initialize using typ...
[20210409144645] 9579  TRACE  : (65)      typeinits.ego  68: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9580  TRACE  : (65)      typeinits.ego  69: SetThis                        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9581  TRACE  : (65)      typeinits.ego  70: Member          "Equal"        stack[ 3]: Testing{ description: "types: initialize using typ...
[20210409144645] 9582  TRACE  : (65)      typeinits.ego  71: Load            "e"            stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9583  TRACE  : (65)      typeinits.ego  72: Member          "age"          stack[ 4]: emp{ age: 55, name: "Bob" }, compiler.TestEqual(),...
[20210409144645] 9584  TRACE  : (65)      typeinits.ego  73: Push            55             stack[ 4]: 55, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 9585  TRACE  : (65)      typeinits.ego  74: Push            "Wrong age value in type" stack[ 5]: 55, 55, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 9586  TRACE  : (65)      typeinits.ego  75: Call            3              stack[ 6]: Wrong age value in type, 55, 55, compiler.TestEqua...
[20210409144645] 9587  TRACE  : (65)      typeinits.ego  76: Call            1              stack[ 3]: [true Wrong age value in type], compiler.TestAsser...
[20210409144645] 9588  TRACE  : (65)      typeinits.ego  77: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9589  TRACE  : (65)      typeinits.ego  78: PopScope                       stack[ 0]: <empty>
[20210409144645] 9590  TRACE  : (65)      typeinits.ego  79: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9591  TRACE  : (65)      typeinits.ego  80: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9592  TRACE  : (65)      typeinits.ego  81: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9593  TRACE  : (65)      typeinits.ego  82: Print                          stack[ 1]: (PASS)  
[20210409144645] 9594  TRACE  : (65)      typeinits.ego  83: Timer           1              stack[ 0]: <empty>
[20210409144645] 9595  TRACE  : (65)      typeinits.ego  84: Print                          stack[ 1]: 0.454ms
[20210409144645] 9596  TRACE  : (65)      typeinits.ego  85: Say             true           stack[ 0]: <empty>
TEST: types: initialize using types                     (PASS)  0.454ms
[20210409144645] 9597  TRACE  : (65)      typeinits.ego  86: Stop                           stack[ 0]: <empty>
[20210409144645] 9598  TRACE  : *** Tracing typereceiver.ego (66)  
[20210409144645] 9599  TRACE  : (66)   typereceiver.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 9600  TRACE  : (66)   typereceiver.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9601  TRACE  : (66)   typereceiver.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9602  TRACE  : (66)   typereceiver.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9603  TRACE  : (66)   typereceiver.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9604  TRACE  : (66)   typereceiver.ego   5: Push            Testing{ description: "types: type-based receiver function" } stack[ 0]: <empty>
[20210409144645] 9605  TRACE  : (66)   typereceiver.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9606  TRACE  : (66)   typereceiver.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9607  TRACE  : (66)   typereceiver.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9608  TRACE  : (66)   typereceiver.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9609  TRACE  : (66)   typereceiver.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9610  TRACE  : (66)   typereceiver.ego  11: Print                          stack[ 1]: types: type-based receiver function
[20210409144645] 9611  TRACE  : (66)   typereceiver.ego  12: Push            "               " stack[ 0]: <empty>
[20210409144645] 9612  TRACE  : (66)   typereceiver.ego  13: Print                          stack[ 1]:                
[20210409144645] 9613  TRACE  : (66)   typereceiver.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9614  TRACE  : (66)   typereceiver.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9615  TRACE  : (66)   typereceiver.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9616  TRACE  : (66)   typereceiver.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 9617  TRACE  : (66)   typereceiver.ego  18: Push            T(Employee struct{age int, name string}) stack[ 0]: <empty>
[20210409144645] 9618  TRACE  : (66)   typereceiver.ego  19: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{age int, name string})
[20210409144645] 9619  TRACE  : (66)   typereceiver.ego  20: Push            T(Employee struct{age int, name string},setname()) stack[ 0]: <empty>
[20210409144645] 9620  TRACE  : (66)   typereceiver.ego  21: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{age int, name string},setname())
[20210409144645] 9621  TRACE  : (66)   typereceiver.ego  22: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9622  TRACE  : (66)   typereceiver.ego  23: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9623  TRACE  : (66)   typereceiver.ego  24: Push            55             stack[ 1]: M<let>
[20210409144645] 9624  TRACE  : (66)   typereceiver.ego  25: Push            "age"          stack[ 2]: 55, M<let>
[20210409144645] 9625  TRACE  : (66)   typereceiver.ego  26: Push            T(Employee struct{age int, name string},setname()) stack[ 3]: age, 55, M<let>
[20210409144645] 9626  TRACE  : (66)   typereceiver.ego  27: Push            "__type"       stack[ 4]: T(Employee struct{age int, name string},setname())...
[20210409144645] 9627  TRACE  : (66)   typereceiver.ego  28: Struct          2              stack[ 5]: __type, T(Employee struct{age int, name string},se...
[20210409144645] 9628  TRACE  : (66)   typereceiver.ego  29: SymbolCreate    "emp"          stack[ 2]: Employee{ age: 55, name: "" }, M<let>
[20210409144645] 9629  TRACE  : (66)   typereceiver.ego  30: Store           "emp"          stack[ 2]: Employee{ age: 55, name: "" }, M<let>
[20210409144645] 9630  TRACE  : (66)   typereceiver.ego  31: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9631  TRACE  : (66)   typereceiver.ego  32: AtLine          15             stack[ 0]: <empty>
[20210409144645] 9632  TRACE  : (66)   typereceiver.ego  33: Push            M<call>        stack[ 0]: <empty>
[20210409144645] 9633  TRACE  : (66)   typereceiver.ego  34: Load            "emp"          stack[ 1]: M<call>
[20210409144645] 9634  TRACE  : (66)   typereceiver.ego  35: SetThis                        stack[ 2]: Employee{ age: 55, name: "" }, M<call>
[20210409144645] 9635  TRACE  : (66)   typereceiver.ego  36: Member          "setname"      stack[ 2]: Employee{ age: 55, name: "" }, M<call>
[20210409144645] 9636  TRACE  : (66)   typereceiver.ego  37: Push            "Tom"          stack[ 2]: setname(), M<call>
[20210409144645] 9637  TRACE  : (66)   typereceiver.ego  38: Call            1              stack[ 3]: Tom, setname(), M<call>
[20210409144645] 9638  TRACE  : (66)            setname   0: ArgCheck        [1 1 setname]  stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9639  TRACE  : (66)            setname   1: GetThis         "e"            stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9640  TRACE  : (66)            setname   2: Load            "__args"       stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9641  TRACE  : (66)            setname   3: LoadIndex       0              stack[ 3]: ["Tom"], F<typereceiver.ego:15>, M<call>
[20210409144645] 9642  TRACE  : (66)            setname   4: RequiredType    T(string)      stack[ 3]: Tom, F<typereceiver.ego:15>, M<call>
[20210409144645] 9643  TRACE  : (66)            setname   5: StoreAlways     "s"            stack[ 3]: Tom, F<typereceiver.ego:15>, M<call>
[20210409144645] 9644  TRACE  : (66)            setname   6: AtLine          10             stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9645  TRACE  : (66)            setname   7: PushScope                      stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9646  TRACE  : (66)            setname   8: AtLine          11             stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9647  TRACE  : (66)            setname   9: Push            M<let>         stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9648  TRACE  : (66)            setname  10: Load            "s"            stack[ 3]: M<let>, F<typereceiver.ego:15>, M<call>
[20210409144645] 9649  TRACE  : (66)            setname  11: Load            "e"            stack[ 4]: Tom, M<let>, F<typereceiver.ego:15>, M<call>
[20210409144645] 9650  TRACE  : (66)            setname  12: Push            "name"         stack[ 5]: Employee{ age: 55, name: "" }, Tom, M<let>, F<type...
[20210409144645] 9651  TRACE  : (66)            setname  13: StoreIndex                     stack[ 6]: name, Employee{ age: 55, name: "" }, Tom, M<let>, ...
[20210409144645] 9652  TRACE  : (66)            setname  14: DropToMarker    M<let>         stack[ 4]: Employee{ age: 55, name: "Tom" }, M<let>, F<typere...
[20210409144645] 9653  TRACE  : (66)            setname  15: PopScope                       stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9654  TRACE  : (66)            setname  16: Return                         stack[ 2]: F<typereceiver.ego:15>, M<call>
[20210409144645] 9655  TRACE  : (66)   typereceiver.ego  39: DropToMarker    M<call>        stack[ 2]: M<let>, M<call>
[20210409144645] 9656  TRACE  : (66)   typereceiver.ego  40: AtLine          17             stack[ 0]: <empty>
[20210409144645] 9657  TRACE  : (66)   typereceiver.ego  41: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9658  TRACE  : (66)   typereceiver.ego  42: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9659  TRACE  : (66)   typereceiver.ego  43: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9660  TRACE  : (66)   typereceiver.ego  44: Member          "assert"       stack[ 2]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9661  TRACE  : (66)   typereceiver.ego  45: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9662  TRACE  : (66)   typereceiver.ego  46: SetThis                        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9663  TRACE  : (66)   typereceiver.ego  47: Member          "Equal"        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9664  TRACE  : (66)   typereceiver.ego  48: Load            "emp"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9665  TRACE  : (66)   typereceiver.ego  49: Member          "name"         stack[ 4]: Employee{ age: 55, name: "Tom" }, compiler.TestEqu...
[20210409144645] 9666  TRACE  : (66)   typereceiver.ego  50: Push            "Tom"          stack[ 4]: Tom, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9667  TRACE  : (66)   typereceiver.ego  51: Call            2              stack[ 5]: Tom, Tom, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9668  TRACE  : (66)   typereceiver.ego  52: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9669  TRACE  : (66)   typereceiver.ego  53: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9670  TRACE  : (66)   typereceiver.ego  54: AtLine          18             stack[ 0]: <empty>
[20210409144645] 9671  TRACE  : (66)   typereceiver.ego  55: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9672  TRACE  : (66)   typereceiver.ego  56: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9673  TRACE  : (66)   typereceiver.ego  57: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9674  TRACE  : (66)   typereceiver.ego  58: Member          "assert"       stack[ 2]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9675  TRACE  : (66)   typereceiver.ego  59: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9676  TRACE  : (66)   typereceiver.ego  60: SetThis                        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9677  TRACE  : (66)   typereceiver.ego  61: Member          "Equal"        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9678  TRACE  : (66)   typereceiver.ego  62: Load            "emp"          stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9679  TRACE  : (66)   typereceiver.ego  63: Member          "age"          stack[ 4]: Employee{ age: 55, name: "Tom" }, compiler.TestEqu...
[20210409144645] 9680  TRACE  : (66)   typereceiver.ego  64: Push            55             stack[ 4]: 55, compiler.TestEqual(), compiler.TestAssert(), M...
[20210409144645] 9681  TRACE  : (66)   typereceiver.ego  65: Call            2              stack[ 5]: 55, 55, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 9682  TRACE  : (66)   typereceiver.ego  66: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9683  TRACE  : (66)   typereceiver.ego  67: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9684  TRACE  : (66)   typereceiver.ego  68: AtLine          19             stack[ 0]: <empty>
[20210409144645] 9685  TRACE  : (66)   typereceiver.ego  69: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9686  TRACE  : (66)   typereceiver.ego  70: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9687  TRACE  : (66)   typereceiver.ego  71: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9688  TRACE  : (66)   typereceiver.ego  72: Member          "assert"       stack[ 2]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9689  TRACE  : (66)   typereceiver.ego  73: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9690  TRACE  : (66)   typereceiver.ego  74: SetThis                        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9691  TRACE  : (66)   typereceiver.ego  75: Member          "Equal"        stack[ 3]: Testing{ description: "types: type-based receiver ...
[20210409144645] 9692  TRACE  : (66)   typereceiver.ego  76: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9693  TRACE  : (66)   typereceiver.ego  77: Load            "emp"          stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9694  TRACE  : (66)   typereceiver.ego  78: Call            1              stack[ 5]: Employee{ age: 55, name: "Tom" }, functions.Type()...
[20210409144645] 9695  TRACE  : (66)   typereceiver.ego  79: Push            "Employee"     stack[ 4]: Employee, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9696  TRACE  : (66)   typereceiver.ego  80: Call            2              stack[ 5]: Employee, Employee, compiler.TestEqual(), compiler...
[20210409144645] 9697  TRACE  : (66)   typereceiver.ego  81: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9698  TRACE  : (66)   typereceiver.ego  82: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9699  TRACE  : (66)   typereceiver.ego  83: PopScope                       stack[ 0]: <empty>
[20210409144645] 9700  TRACE  : (66)   typereceiver.ego  84: AtLine          22             stack[ 0]: <empty>
[20210409144645] 9701  TRACE  : (66)   typereceiver.ego  85: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9702  TRACE  : (66)   typereceiver.ego  86: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9703  TRACE  : (66)   typereceiver.ego  87: Print                          stack[ 1]: (PASS)  
[20210409144645] 9704  TRACE  : (66)   typereceiver.ego  88: Timer           1              stack[ 0]: <empty>
[20210409144645] 9705  TRACE  : (66)   typereceiver.ego  89: Print                          stack[ 1]: 0.615ms
[20210409144645] 9706  TRACE  : (66)   typereceiver.ego  90: Say             true           stack[ 0]: <empty>
TEST: types: type-based receiver function               (PASS)  0.615ms
[20210409144645] 9707  TRACE  : (66)   typereceiver.ego  91: Stop                           stack[ 0]: <empty>
[20210409144645] 9708  TRACE  : *** Tracing user-complex-types.ego (67)  
[20210409144645] 9709  TRACE  : (67) user-complex-types.ego   0: AtLine          2              stack[ 0]: <empty>
[20210409144645] 9710  TRACE  : (67) user-complex-types.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9711  TRACE  : (67) user-complex-types.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9712  TRACE  : (67) user-complex-types.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9713  TRACE  : (67) user-complex-types.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9714  TRACE  : (67) user-complex-types.ego   5: Push            Testing{ description: "types: user types in complex types" } stack[ 0]: <empty>
[20210409144645] 9715  TRACE  : (67) user-complex-types.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: user types in comple...
[20210409144645] 9716  TRACE  : (67) user-complex-types.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9717  TRACE  : (67) user-complex-types.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9718  TRACE  : (67) user-complex-types.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9719  TRACE  : (67) user-complex-types.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: user types in comple...
[20210409144645] 9720  TRACE  : (67) user-complex-types.ego  11: Print                          stack[ 1]: types: user types in complex types
[20210409144645] 9721  TRACE  : (67) user-complex-types.ego  12: Push            "                " stack[ 0]: <empty>
[20210409144645] 9722  TRACE  : (67) user-complex-types.ego  13: Print                          stack[ 1]:                 
[20210409144645] 9723  TRACE  : (67) user-complex-types.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9724  TRACE  : (67) user-complex-types.ego  15: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9725  TRACE  : (67) user-complex-types.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9726  TRACE  : (67) user-complex-types.ego  17: AtLine          5              stack[ 0]: <empty>
[20210409144645] 9727  TRACE  : (67) user-complex-types.ego  18: Push            T(EmpInfo struct{ID int, Name []string}) stack[ 0]: <empty>
[20210409144645] 9728  TRACE  : (67) user-complex-types.ego  19: StoreAlways     "EmpInfo"      stack[ 1]: T(EmpInfo struct{ID int, Name []string})
[20210409144645] 9729  TRACE  : (67) user-complex-types.ego  20: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9730  TRACE  : (67) user-complex-types.ego  21: Push            T(Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 0]: <empty>
[20210409144645] 9731  TRACE  : (67) user-complex-types.ego  22: StoreAlways     "Employee"     stack[ 1]: T(Employee struct{Info EmpInfo struct{ID int, Name...
[20210409144645] 9732  TRACE  : (67) user-complex-types.ego  23: AtLine          15             stack[ 0]: <empty>
[20210409144645] 9733  TRACE  : (67) user-complex-types.ego  24: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9734  TRACE  : (67) user-complex-types.ego  25: Push            "Bob"          stack[ 1]: M<let>
[20210409144645] 9735  TRACE  : (67) user-complex-types.ego  26: Push            "Smith"        stack[ 2]: Bob, M<let>
[20210409144645] 9736  TRACE  : (67) user-complex-types.ego  27: Push            T(string)      stack[ 3]: Smith, Bob, M<let>
[20210409144645] 9737  TRACE  : (67) user-complex-types.ego  28: MakeArray       2              stack[ 4]: T(string), Smith, Bob, M<let>
[20210409144645] 9738  TRACE  : (67) user-complex-types.ego  29: SymbolCreate    "name"         stack[ 2]: ["Bob", "Smith"], M<let>
[20210409144645] 9739  TRACE  : (67) user-complex-types.ego  30: Store           "name"         stack[ 2]: ["Bob", "Smith"], M<let>
[20210409144645] 9740  TRACE  : (67) user-complex-types.ego  31: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9741  TRACE  : (67) user-complex-types.ego  32: AtLine          16             stack[ 0]: <empty>
[20210409144645] 9742  TRACE  : (67) user-complex-types.ego  33: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9743  TRACE  : (67) user-complex-types.ego  34: Load            "name"         stack[ 1]: M<let>
[20210409144645] 9744  TRACE  : (67) user-complex-types.ego  35: Push            "Name"         stack[ 2]: ["Bob", "Smith"], M<let>
[20210409144645] 9745  TRACE  : (67) user-complex-types.ego  36: Push            101            stack[ 3]: Name, ["Bob", "Smith"], M<let>
[20210409144645] 9746  TRACE  : (67) user-complex-types.ego  37: Push            "ID"           stack[ 4]: 101, Name, ["Bob", "Smith"], M<let>
[20210409144645] 9747  TRACE  : (67) user-complex-types.ego  38: Push            T(EmpInfo struct{ID int, Name []string}) stack[ 5]: ID, 101, Name, ["Bob", "Smith"], M<let>
[20210409144645] 9748  TRACE  : (67) user-complex-types.ego  39: Push            "__type"       stack[ 6]: T(EmpInfo struct{ID int, Name []string}), ID, 101,...
[20210409144645] 9749  TRACE  : (67) user-complex-types.ego  40: Struct          3              stack[ 7]: __type, T(EmpInfo struct{ID int, Name []string}), ...
[20210409144645] 9750  TRACE  : (67) user-complex-types.ego  41: Push            "Info"         stack[ 2]: EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, M<let>
[20210409144645] 9751  TRACE  : (67) user-complex-types.ego  42: Push            T(Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 3]: Info, EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, ...
[20210409144645] 9752  TRACE  : (67) user-complex-types.ego  43: Push            "__type"       stack[ 4]: T(Employee struct{Info EmpInfo struct{ID int, Name...
[20210409144645] 9753  TRACE  : (67) user-complex-types.ego  44: Struct          2              stack[ 5]: __type, T(Employee struct{Info EmpInfo struct{ID i...
[20210409144645] 9754  TRACE  : (67) user-complex-types.ego  45: SymbolCreate    "e"            stack[ 2]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9755  TRACE  : (67) user-complex-types.ego  46: Store           "e"            stack[ 2]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9756  TRACE  : (67) user-complex-types.ego  47: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9757  TRACE  : (67) user-complex-types.ego  48: AtLine          23             stack[ 0]: <empty>
[20210409144645] 9758  TRACE  : (67) user-complex-types.ego  49: Push            T(Employees map[int]Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 0]: <empty>
[20210409144645] 9759  TRACE  : (67) user-complex-types.ego  50: StoreAlways     "Employees"    stack[ 1]: T(Employees map[int]Employee struct{Info EmpInfo s...
[20210409144645] 9760  TRACE  : (67) user-complex-types.ego  51: AtLine          25             stack[ 0]: <empty>
[20210409144645] 9761  TRACE  : (67) user-complex-types.ego  52: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9762  TRACE  : (67) user-complex-types.ego  53: Load            "new"          stack[ 1]: M<let>
[20210409144645] 9763  TRACE  : (67) user-complex-types.ego  54: Push            T(Employees map[int]Employee struct{Info EmpInfo struct{ID int, Name []string}, Manager bool}) stack[ 2]: functions.New(), M<let>
[20210409144645] 9764  TRACE  : (67) user-complex-types.ego  55: Call            1              stack[ 3]: T(Employees map[int]Employee struct{Info EmpInfo s...
[20210409144645] 9765  TRACE  : (67) user-complex-types.ego  56: SymbolCreate    "employeeList" stack[ 2]: [], M<let>
[20210409144645] 9766  TRACE  : (67) user-complex-types.ego  57: Store           "employeeList" stack[ 2]: [], M<let>
[20210409144645] 9767  TRACE  : (67) user-complex-types.ego  58: DropToMarker    M<let>         stack[ 1]: M<let>
[20210409144645] 9768  TRACE  : (67) user-complex-types.ego  59: AtLine          26             stack[ 0]: <empty>
[20210409144645] 9769  TRACE  : (67) user-complex-types.ego  60: Push            M<let>         stack[ 0]: <empty>
[20210409144645] 9770  TRACE  : (67) user-complex-types.ego  61: Load            "e"            stack[ 1]: M<let>
[20210409144645] 9771  TRACE  : (67) user-complex-types.ego  62: Load            "employeeList" stack[ 2]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9772  TRACE  : (67) user-complex-types.ego  63: Push            101            stack[ 3]: [], Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob"...
[20210409144645] 9773  TRACE  : (67) user-complex-types.ego  64: StoreIndex                     stack[ 4]: 101, [], Employee{ Info: EmpInfo{ ID: 101, Name: [...
[20210409144645] 9774  TRACE  : (67) user-complex-types.ego  65: DropToMarker    M<let>         stack[ 2]: [101: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bo...
[20210409144645] 9775  TRACE  : (67) user-complex-types.ego  66: AtLine          28             stack[ 0]: <empty>
[20210409144645] 9776  TRACE  : (67) user-complex-types.ego  67: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9777  TRACE  : (67) user-complex-types.ego  68: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9778  TRACE  : (67) user-complex-types.ego  69: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9779  TRACE  : (67) user-complex-types.ego  70: Member          "assert"       stack[ 2]: Testing{ description: "types: user types in comple...
[20210409144645] 9780  TRACE  : (67) user-complex-types.ego  71: Load            "employeeList" stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9781  TRACE  : (67) user-complex-types.ego  72: Push            101            stack[ 3]: [101: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bo...
[20210409144645] 9782  TRACE  : (67) user-complex-types.ego  73: LoadIndex                      stack[ 4]: 101, [101: Employee{ Info: EmpInfo{ ID: 101, Name:...
[20210409144645] 9783  TRACE  : (67) user-complex-types.ego  74: Member          "Info"         stack[ 3]: Employee{ Info: EmpInfo{ ID: 101, Name: ["Bob", "S...
[20210409144645] 9784  TRACE  : (67) user-complex-types.ego  75: Member          "Name"         stack[ 3]: EmpInfo{ ID: 101, Name: ["Bob", "Smith"] }, compil...
[20210409144645] 9785  TRACE  : (67) user-complex-types.ego  76: Push            0              stack[ 3]: ["Bob", "Smith"], compiler.TestAssert(), M<assert>
[20210409144645] 9786  TRACE  : (67) user-complex-types.ego  77: LoadIndex                      stack[ 4]: 0, ["Bob", "Smith"], compiler.TestAssert(), M<asse...
[20210409144645] 9787  TRACE  : (67) user-complex-types.ego  78: Push            "Bob"          stack[ 3]: Bob, compiler.TestAssert(), M<assert>
[20210409144645] 9788  TRACE  : (67) user-complex-types.ego  79: Equal                          stack[ 4]: Bob, Bob, compiler.TestAssert(), M<assert>
[20210409144645] 9789  TRACE  : (67) user-complex-types.ego  80: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9790  TRACE  : (67) user-complex-types.ego  81: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9791  TRACE  : (67) user-complex-types.ego  82: PopScope                       stack[ 0]: <empty>
[20210409144645] 9792  TRACE  : (67) user-complex-types.ego  83: AtLine          31             stack[ 0]: <empty>
[20210409144645] 9793  TRACE  : (67) user-complex-types.ego  84: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9794  TRACE  : (67) user-complex-types.ego  85: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9795  TRACE  : (67) user-complex-types.ego  86: Print                          stack[ 1]: (PASS)  
[20210409144645] 9796  TRACE  : (67) user-complex-types.ego  87: Timer           1              stack[ 0]: <empty>
[20210409144645] 9797  TRACE  : (67) user-complex-types.ego  88: Print                          stack[ 1]: 0.478ms
[20210409144645] 9798  TRACE  : (67) user-complex-types.ego  89: Say             true           stack[ 0]: <empty>
TEST: types: user types in complex types                (PASS)  0.478ms
[20210409144645] 9799  TRACE  : (67) user-complex-types.ego  90: Stop                           stack[ 0]: <empty>
[20210409144645] 9800  TRACE  : *** Tracing vartypes.ego (68)  
[20210409144645] 9801  TRACE  : (68)       vartypes.ego   0: AtLine          1              stack[ 0]: <empty>
[20210409144645] 9802  TRACE  : (68)       vartypes.ego   1: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9803  TRACE  : (68)       vartypes.ego   2: Push            T(Testing struct{description string},Equal(),False(),Nil(),NotEqual(),NotNil(),True(),assert(),fail(),isType()) stack[ 0]: <empty>
[20210409144645] 9804  TRACE  : (68)       vartypes.ego   3: SymbolOptCreate "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9805  TRACE  : (68)       vartypes.ego   4: StoreAlways     "Testing"      stack[ 1]: T(Testing struct{description string},Equal(),False...
[20210409144645] 9806  TRACE  : (68)       vartypes.ego   5: Push            Testing{ description: "types: var and type testing" } stack[ 0]: <empty>
[20210409144645] 9807  TRACE  : (68)       vartypes.ego   6: StoreAlways     "T"            stack[ 1]: Testing{ description: "types: var and type testing...
[20210409144645] 9808  TRACE  : (68)       vartypes.ego   7: Push            "TEST: "       stack[ 0]: <empty>
[20210409144645] 9809  TRACE  : (68)       vartypes.ego   8: Print                          stack[ 1]: TEST: 
[20210409144645] 9810  TRACE  : (68)       vartypes.ego   9: Load            "T"            stack[ 0]: <empty>
[20210409144645] 9811  TRACE  : (68)       vartypes.ego  10: Member          "description"  stack[ 1]: Testing{ description: "types: var and type testing...
[20210409144645] 9812  TRACE  : (68)       vartypes.ego  11: Print                          stack[ 1]: types: var and type testing
[20210409144645] 9813  TRACE  : (68)       vartypes.ego  12: Push            "                       " stack[ 0]: <empty>
[20210409144645] 9814  TRACE  : (68)       vartypes.ego  13: Print                          stack[ 1]:                        
[20210409144645] 9815  TRACE  : (68)       vartypes.ego  14: Timer           0              stack[ 0]: <empty>
[20210409144645] 9816  TRACE  : (68)       vartypes.ego  15: AtLine          3              stack[ 0]: <empty>
[20210409144645] 9817  TRACE  : (68)       vartypes.ego  16: PushScope                      stack[ 0]: <empty>
[20210409144645] 9818  TRACE  : (68)       vartypes.ego  17: AtLine          4              stack[ 0]: <empty>
[20210409144645] 9819  TRACE  : (68)       vartypes.ego  18: Push            0              stack[ 0]: <empty>
[20210409144645] 9820  TRACE  : (68)       vartypes.ego  19: SymbolCreate    "a1"           stack[ 1]: 0
[20210409144645] 9821  TRACE  : (68)       vartypes.ego  20: Store           "a1"           stack[ 1]: 0
[20210409144645] 9822  TRACE  : (68)       vartypes.ego  21: Push            0              stack[ 0]: <empty>
[20210409144645] 9823  TRACE  : (68)       vartypes.ego  22: SymbolCreate    "a2"           stack[ 1]: 0
[20210409144645] 9824  TRACE  : (68)       vartypes.ego  23: Store           "a2"           stack[ 1]: 0
[20210409144645] 9825  TRACE  : (68)       vartypes.ego  24: Push            0              stack[ 0]: <empty>
[20210409144645] 9826  TRACE  : (68)       vartypes.ego  25: SymbolCreate    "a3"           stack[ 1]: 0
[20210409144645] 9827  TRACE  : (68)       vartypes.ego  26: Store           "a3"           stack[ 1]: 0
[20210409144645] 9828  TRACE  : (68)       vartypes.ego  27: AtLine          5              stack[ 0]: <empty>
[20210409144645] 9829  TRACE  : (68)       vartypes.ego  28: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9830  TRACE  : (68)       vartypes.ego  29: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9831  TRACE  : (68)       vartypes.ego  30: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9832  TRACE  : (68)       vartypes.ego  31: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9833  TRACE  : (68)       vartypes.ego  32: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9834  TRACE  : (68)       vartypes.ego  33: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9835  TRACE  : (68)       vartypes.ego  34: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9836  TRACE  : (68)       vartypes.ego  35: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9837  TRACE  : (68)       vartypes.ego  36: Load            "a1"           stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9838  TRACE  : (68)       vartypes.ego  37: Call            1              stack[ 5]: 0, functions.Type(), compiler.TestEqual(), compile...
[20210409144645] 9839  TRACE  : (68)       vartypes.ego  38: Push            "int"          stack[ 4]: int, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9840  TRACE  : (68)       vartypes.ego  39: Call            2              stack[ 5]: int, int, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9841  TRACE  : (68)       vartypes.ego  40: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9842  TRACE  : (68)       vartypes.ego  41: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9843  TRACE  : (68)       vartypes.ego  42: AtLine          6              stack[ 0]: <empty>
[20210409144645] 9844  TRACE  : (68)       vartypes.ego  43: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9845  TRACE  : (68)       vartypes.ego  44: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9846  TRACE  : (68)       vartypes.ego  45: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9847  TRACE  : (68)       vartypes.ego  46: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9848  TRACE  : (68)       vartypes.ego  47: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9849  TRACE  : (68)       vartypes.ego  48: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9850  TRACE  : (68)       vartypes.ego  49: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9851  TRACE  : (68)       vartypes.ego  50: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9852  TRACE  : (68)       vartypes.ego  51: Load            "a2"           stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9853  TRACE  : (68)       vartypes.ego  52: Call            1              stack[ 5]: 0, functions.Type(), compiler.TestEqual(), compile...
[20210409144645] 9854  TRACE  : (68)       vartypes.ego  53: Push            "int"          stack[ 4]: int, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9855  TRACE  : (68)       vartypes.ego  54: Call            2              stack[ 5]: int, int, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9856  TRACE  : (68)       vartypes.ego  55: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9857  TRACE  : (68)       vartypes.ego  56: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9858  TRACE  : (68)       vartypes.ego  57: AtLine          7              stack[ 0]: <empty>
[20210409144645] 9859  TRACE  : (68)       vartypes.ego  58: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9860  TRACE  : (68)       vartypes.ego  59: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9861  TRACE  : (68)       vartypes.ego  60: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9862  TRACE  : (68)       vartypes.ego  61: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9863  TRACE  : (68)       vartypes.ego  62: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9864  TRACE  : (68)       vartypes.ego  63: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9865  TRACE  : (68)       vartypes.ego  64: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9866  TRACE  : (68)       vartypes.ego  65: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9867  TRACE  : (68)       vartypes.ego  66: Load            "a3"           stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9868  TRACE  : (68)       vartypes.ego  67: Call            1              stack[ 5]: 0, functions.Type(), compiler.TestEqual(), compile...
[20210409144645] 9869  TRACE  : (68)       vartypes.ego  68: Push            "int"          stack[ 4]: int, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9870  TRACE  : (68)       vartypes.ego  69: Call            2              stack[ 5]: int, int, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9871  TRACE  : (68)       vartypes.ego  70: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9872  TRACE  : (68)       vartypes.ego  71: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9873  TRACE  : (68)       vartypes.ego  72: AtLine          9              stack[ 0]: <empty>
[20210409144645] 9874  TRACE  : (68)       vartypes.ego  73: Push            0              stack[ 0]: <empty>
[20210409144645] 9875  TRACE  : (68)       vartypes.ego  74: SymbolCreate    "i"            stack[ 1]: 0
[20210409144645] 9876  TRACE  : (68)       vartypes.ego  75: Store           "i"            stack[ 1]: 0
[20210409144645] 9877  TRACE  : (68)       vartypes.ego  76: AtLine          10             stack[ 0]: <empty>
[20210409144645] 9878  TRACE  : (68)       vartypes.ego  77: Push            0              stack[ 0]: <empty>
[20210409144645] 9879  TRACE  : (68)       vartypes.ego  78: SymbolCreate    "f"            stack[ 1]: 0
[20210409144645] 9880  TRACE  : (68)       vartypes.ego  79: Store           "f"            stack[ 1]: 0
[20210409144645] 9881  TRACE  : (68)       vartypes.ego  80: AtLine          11             stack[ 0]: <empty>
[20210409144645] 9882  TRACE  : (68)       vartypes.ego  81: Push            ""             stack[ 0]: <empty>
[20210409144645] 9883  TRACE  : (68)       vartypes.ego  82: SymbolCreate    "s"            stack[ 1]: 
[20210409144645] 9884  TRACE  : (68)       vartypes.ego  83: Store           "s"            stack[ 1]: 
[20210409144645] 9885  TRACE  : (68)       vartypes.ego  84: AtLine          12             stack[ 0]: <empty>
[20210409144645] 9886  TRACE  : (68)       vartypes.ego  85: Push            false          stack[ 0]: <empty>
[20210409144645] 9887  TRACE  : (68)       vartypes.ego  86: SymbolCreate    "b"            stack[ 1]: false
[20210409144645] 9888  TRACE  : (68)       vartypes.ego  87: Store           "b"            stack[ 1]: false
[20210409144645] 9889  TRACE  : (68)       vartypes.ego  88: AtLine          14             stack[ 0]: <empty>
[20210409144645] 9890  TRACE  : (68)       vartypes.ego  89: Push            T(x struct{age int, name string}) stack[ 0]: <empty>
[20210409144645] 9891  TRACE  : (68)       vartypes.ego  90: StoreAlways     "x"            stack[ 1]: T(x struct{age int, name string})
[20210409144645] 9892  TRACE  : (68)       vartypes.ego  91: AtLine          18             stack[ 0]: <empty>
[20210409144645] 9893  TRACE  : (68)       vartypes.ego  92: Push            x{ age: 0, name: "" } stack[ 0]: <empty>
[20210409144645] 9894  TRACE  : (68)       vartypes.ego  93: SymbolCreate    "xx"           stack[ 1]: x{ age: 0, name: "" }
[20210409144645] 9895  TRACE  : (68)       vartypes.ego  94: Store           "xx"           stack[ 1]: x{ age: 0, name: "" }
[20210409144645] 9896  TRACE  : (68)       vartypes.ego  95: AtLine          20             stack[ 0]: <empty>
[20210409144645] 9897  TRACE  : (68)       vartypes.ego  96: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9898  TRACE  : (68)       vartypes.ego  97: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9899  TRACE  : (68)       vartypes.ego  98: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9900  TRACE  : (68)       vartypes.ego  99: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9901  TRACE  : (68)       vartypes.ego 100: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9902  TRACE  : (68)       vartypes.ego 101: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9903  TRACE  : (68)       vartypes.ego 102: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9904  TRACE  : (68)       vartypes.ego 103: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9905  TRACE  : (68)       vartypes.ego 104: Load            "i"            stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9906  TRACE  : (68)       vartypes.ego 105: Call            1              stack[ 5]: 0, functions.Type(), compiler.TestEqual(), compile...
[20210409144645] 9907  TRACE  : (68)       vartypes.ego 106: Push            "int"          stack[ 4]: int, compiler.TestEqual(), compiler.TestAssert(), ...
[20210409144645] 9908  TRACE  : (68)       vartypes.ego 107: Call            2              stack[ 5]: int, int, compiler.TestEqual(), compiler.TestAsser...
[20210409144645] 9909  TRACE  : (68)       vartypes.ego 108: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9910  TRACE  : (68)       vartypes.ego 109: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9911  TRACE  : (68)       vartypes.ego 110: AtLine          21             stack[ 0]: <empty>
[20210409144645] 9912  TRACE  : (68)       vartypes.ego 111: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9913  TRACE  : (68)       vartypes.ego 112: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9914  TRACE  : (68)       vartypes.ego 113: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9915  TRACE  : (68)       vartypes.ego 114: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9916  TRACE  : (68)       vartypes.ego 115: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9917  TRACE  : (68)       vartypes.ego 116: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9918  TRACE  : (68)       vartypes.ego 117: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9919  TRACE  : (68)       vartypes.ego 118: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9920  TRACE  : (68)       vartypes.ego 119: Load            "f"            stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9921  TRACE  : (68)       vartypes.ego 120: Call            1              stack[ 5]: 0, functions.Type(), compiler.TestEqual(), compile...
[20210409144645] 9922  TRACE  : (68)       vartypes.ego 121: Push            "float"        stack[ 4]: float, compiler.TestEqual(), compiler.TestAssert()...
[20210409144645] 9923  TRACE  : (68)       vartypes.ego 122: Call            2              stack[ 5]: float, float, compiler.TestEqual(), compiler.TestA...
[20210409144645] 9924  TRACE  : (68)       vartypes.ego 123: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9925  TRACE  : (68)       vartypes.ego 124: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9926  TRACE  : (68)       vartypes.ego 125: AtLine          22             stack[ 0]: <empty>
[20210409144645] 9927  TRACE  : (68)       vartypes.ego 126: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9928  TRACE  : (68)       vartypes.ego 127: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9929  TRACE  : (68)       vartypes.ego 128: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9930  TRACE  : (68)       vartypes.ego 129: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9931  TRACE  : (68)       vartypes.ego 130: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9932  TRACE  : (68)       vartypes.ego 131: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9933  TRACE  : (68)       vartypes.ego 132: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9934  TRACE  : (68)       vartypes.ego 133: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9935  TRACE  : (68)       vartypes.ego 134: Load            "s"            stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9936  TRACE  : (68)       vartypes.ego 135: Call            1              stack[ 5]: , functions.Type(), compiler.TestEqual(), compiler...
[20210409144645] 9937  TRACE  : (68)       vartypes.ego 136: Push            "string"       stack[ 4]: string, compiler.TestEqual(), compiler.TestAssert(...
[20210409144645] 9938  TRACE  : (68)       vartypes.ego 137: Call            2              stack[ 5]: string, string, compiler.TestEqual(), compiler.Tes...
[20210409144645] 9939  TRACE  : (68)       vartypes.ego 138: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9940  TRACE  : (68)       vartypes.ego 139: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9941  TRACE  : (68)       vartypes.ego 140: AtLine          23             stack[ 0]: <empty>
[20210409144645] 9942  TRACE  : (68)       vartypes.ego 141: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9943  TRACE  : (68)       vartypes.ego 142: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9944  TRACE  : (68)       vartypes.ego 143: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9945  TRACE  : (68)       vartypes.ego 144: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9946  TRACE  : (68)       vartypes.ego 145: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9947  TRACE  : (68)       vartypes.ego 146: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9948  TRACE  : (68)       vartypes.ego 147: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9949  TRACE  : (68)       vartypes.ego 148: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9950  TRACE  : (68)       vartypes.ego 149: Load            "b"            stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9951  TRACE  : (68)       vartypes.ego 150: Call            1              stack[ 5]: false, functions.Type(), compiler.TestEqual(), com...
[20210409144645] 9952  TRACE  : (68)       vartypes.ego 151: Push            "bool"         stack[ 4]: bool, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 9953  TRACE  : (68)       vartypes.ego 152: Call            2              stack[ 5]: bool, bool, compiler.TestEqual(), compiler.TestAss...
[20210409144645] 9954  TRACE  : (68)       vartypes.ego 153: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9955  TRACE  : (68)       vartypes.ego 154: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9956  TRACE  : (68)       vartypes.ego 155: AtLine          24             stack[ 0]: <empty>
[20210409144645] 9957  TRACE  : (68)       vartypes.ego 156: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9958  TRACE  : (68)       vartypes.ego 157: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9959  TRACE  : (68)       vartypes.ego 158: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9960  TRACE  : (68)       vartypes.ego 159: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9961  TRACE  : (68)       vartypes.ego 160: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9962  TRACE  : (68)       vartypes.ego 161: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9963  TRACE  : (68)       vartypes.ego 162: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9964  TRACE  : (68)       vartypes.ego 163: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9965  TRACE  : (68)       vartypes.ego 164: Push            T(x struct{age int, name string}) stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9966  TRACE  : (68)       vartypes.ego 165: Call            1              stack[ 5]: T(x struct{age int, name string}), functions.Type(...
[20210409144645] 9967  TRACE  : (68)       vartypes.ego 166: Push            "type struct{age int, name string}" stack[ 4]: type struct{age int, name string}, compiler.TestEq...
[20210409144645] 9968  TRACE  : (68)       vartypes.ego 167: Call            2              stack[ 5]: type struct{age int, name string}, type struct{age...
[20210409144645] 9969  TRACE  : (68)       vartypes.ego 168: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9970  TRACE  : (68)       vartypes.ego 169: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9971  TRACE  : (68)       vartypes.ego 170: AtLine          25             stack[ 0]: <empty>
[20210409144645] 9972  TRACE  : (68)       vartypes.ego 171: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9973  TRACE  : (68)       vartypes.ego 172: Push            M<assert>      stack[ 0]: <empty>
[20210409144645] 9974  TRACE  : (68)       vartypes.ego 173: Load            "T"            stack[ 1]: M<assert>
[20210409144645] 9975  TRACE  : (68)       vartypes.ego 174: Member          "assert"       stack[ 2]: Testing{ description: "types: var and type testing...
[20210409144645] 9976  TRACE  : (68)       vartypes.ego 175: Load            "T"            stack[ 2]: compiler.TestAssert(), M<assert>
[20210409144645] 9977  TRACE  : (68)       vartypes.ego 176: SetThis                        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9978  TRACE  : (68)       vartypes.ego 177: Member          "Equal"        stack[ 3]: Testing{ description: "types: var and type testing...
[20210409144645] 9979  TRACE  : (68)       vartypes.ego 178: Load            "type"         stack[ 3]: compiler.TestEqual(), compiler.TestAssert(), M<ass...
[20210409144645] 9980  TRACE  : (68)       vartypes.ego 179: Load            "xx"           stack[ 4]: functions.Type(), compiler.TestEqual(), compiler.T...
[20210409144645] 9981  TRACE  : (68)       vartypes.ego 180: Call            1              stack[ 5]: x{ age: 0, name: "" }, functions.Type(), compiler....
[20210409144645] 9982  TRACE  : (68)       vartypes.ego 181: Push            "x"            stack[ 4]: x, compiler.TestEqual(), compiler.TestAssert(), M<...
[20210409144645] 9983  TRACE  : (68)       vartypes.ego 182: Call            2              stack[ 5]: x, x, compiler.TestEqual(), compiler.TestAssert(),...
[20210409144645] 9984  TRACE  : (68)       vartypes.ego 183: Call            1              stack[ 3]: true, compiler.TestAssert(), M<assert>
[20210409144645] 9985  TRACE  : (68)       vartypes.ego 184: DropToMarker                   stack[ 2]: true, M<assert>
[20210409144645] 9986  TRACE  : (68)       vartypes.ego 185: PopScope                       stack[ 0]: <empty>
[20210409144645] 9987  TRACE  : (68)       vartypes.ego 186: AtLine          27             stack[ 0]: <empty>
[20210409144645] 9988  TRACE  : (68)       vartypes.ego 187: ModeCheck       "test"         stack[ 0]: <empty>
[20210409144645] 9989  TRACE  : (68)       vartypes.ego 188: Push            "(PASS)  "     stack[ 0]: <empty>
[20210409144645] 9990  TRACE  : (68)       vartypes.ego 189: Print                          stack[ 1]: (PASS)  
[20210409144645] 9991  TRACE  : (68)       vartypes.ego 190: Timer           1              stack[ 0]: <empty>
[20210409144645] 9992  TRACE  : (68)       vartypes.ego 191: Print                          stack[ 1]: 0.001s
[20210409144645] 9993  TRACE  : (68)       vartypes.ego 192: Say             true           stack[ 0]: <empty>
TEST: types: var and type testing                       (PASS)  0.001s
[20210409144645] 9994  TRACE  : (68)       vartypes.ego 193: Stop                           stack[ 0]: <empty>
